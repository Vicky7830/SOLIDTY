{
	"id": "dba4b4645e85752721a4ba151478b637",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/roy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n}\n\ncontract SikkaStakingDecentralize {\n    address public owner;\n    uint256 public stakeCounter;\n    IERC20 public usdtToken;\n\n    constructor(address _usdtToken) {\n        owner = msg.sender;\n        usdtToken = IERC20(_usdtToken);\n        users[owner].registered = true;\n\n        stakingAPY[30] = 1;\n        stakingAPY[60] = 2;\n\n        stakingAPY[90] = 4;\n        stakingAPY[120] = 6;\n        stakingAPY[180] = 9;\n        stakingAPY[365] = 20;\n    }\n\n    struct Stake {\n        uint256 stakeId;\n        uint256 positionId;\n        uint256 amount;\n        uint256 timestamp;\n        uint256 numDays;\n        bool claimed;\n    }\n\n    struct ReferralInfo {\n        address referralAddress;\n        uint256 incomeEarned;\n        uint256 timestamp;\n    }\n\n    \n\n    struct User {\n        address referrer;\n        Stake[] stakes;\n        uint256 totalIncome;\n        uint256 levelIncome;\n        bool registered;\n    }\n\n    struct LevelIncomeData {\n        address receiverAddress;\n        uint256 stakeId;\n        uint256 stakeAmount;\n        uint256 incomeReceived;\n        address uplineAddress;\n        uint256 timestamp;\n        uint8 level;\n    }\n    mapping(address => User) public users;\n    mapping(address => ReferralInfo[]) public directReferrals;\n    mapping(uint256 => address) public positionIdToUser;\n    mapping(uint256 => uint256) public stakingAPY;\n    mapping(address => uint256) public directReferralIncome;\n\n    address[] public allUsers;\n    uint8[5] public levelRewards = [5, 3, 2, 1, 1];\n\n    event Claimed(\n        address indexed user,\n        uint256 stakeId,\n        uint256 amount,\n        uint256 reward\n    );\n\n    modifier onlyRegistered() {\n        require(users[msg.sender].registered, \"Not registered\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this\");\n        _;\n    }\n\n    function register(address referrer) external {\n        require(!users[msg.sender].registered, \"Already registered\");\n        require(referrer != msg.sender, \"Cannot refer yourself\");\n        require(users[referrer].registered, \"Referrer not registered\");\n        require(\n            users[referrer].stakes.length > 0,\n            \"Referrer must stake before you can register\"\n        );\n\n        users[msg.sender].referrer = referrer;\n        users[msg.sender].registered = true;\n        allUsers.push(msg.sender);\n\n        directReferrals[referrer].push(\n            ReferralInfo({\n                referralAddress: msg.sender,\n                incomeEarned: 0,\n                timestamp: block.timestamp\n            })\n        );\n    }\n\n  \n\n//     function stake(uint256 numDays, uint256 amount) external onlyRegistered {\n//     require(amount > 0, \"Stake amount must be greater than 0\");\n//     require(stakingAPY[numDays] > 0, \"Invalid staking duration\");\n\n//     address referrer = users[msg.sender].referrer;\n\n//     if (referrer != address(0)) {\n//         require(\n//             users[referrer].stakes.length > 0,\n//             \"Referrer must stake before you can stake\"\n//         );\n//     }\n\n//     bool success = usdtToken.transferFrom(msg.sender, address(this), amount);\n//     require(success, \"USDT transfer failed\");\n\n//     uint256 positionId = ++stakeCounter;\n\n//     users[msg.sender].stakes.push(\n//         Stake({\n//             stakeId: stakeCounter,\n//             positionId: positionId,\n//             amount: amount,\n//             timestamp: block.timestamp,\n//             numDays: numDays,\n//             claimed: false\n//         })\n//     );\n\n//     positionIdToUser[positionId] = msg.sender;\n\n//     bool isFirstStake = users[msg.sender].stakes.length == 1;\n\n//     address upline = users[msg.sender].referrer;\n\n//     for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {\n//         uint256 reward = 0;\n\n//         if (i == 0) {\n//             if (isFirstStake) {\n//                 // ✅ 5% Direct + 5% Level 1\n//                 uint256 directReward = (amount * 5) / 100;\n//                 uint256 level1Reward = (amount * 5) / 100;\n\n//                 // Transfer direct referral income\n//                 require(usdtToken.balanceOf(address(this)) >= directReward, \"Insufficient contract balance for direct\");\n//                 bool directSuccess = usdtToken.transfer(upline, directReward);\n//                 require(directSuccess, \"Direct referral transfer failed\");\n\n//                 directReferralIncome[upline] += directReward;\n//                 users[upline].totalIncome += directReward;\n\n//                 // Transfer level 1 income\n//                 require(usdtToken.balanceOf(address(this)) >= level1Reward, \"Insufficient contract balance for level 1\");\n//                 bool level1Success = usdtToken.transfer(upline, level1Reward);\n//                 require(level1Success, \"Level 1 reward transfer failed\");\n\n//                 users[upline].totalIncome += level1Reward;\n//                 users[upline].levelIncome += level1Reward;\n\n//             } else {\n//                 // ✅ Only 5% Level 1 (after first stake)\n//                 reward = (amount * levelRewards[i]) / 100;\n\n//                 require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n//                 bool level1Success = usdtToken.transfer(upline, reward);\n//                 require(level1Success, \"Level 1 reward transfer failed\");\n\n//                 users[upline].totalIncome += reward;\n//                 users[upline].levelIncome += reward;\n//             }\n//         } else {\n//             // ✅ Level 2–5\n//             reward = (amount * levelRewards[i]) / 100;\n\n//             require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n//             bool levelSuccess = usdtToken.transfer(upline, reward);\n//             require(levelSuccess, \"Level reward transfer failed\");\n\n//             users[upline].totalIncome += reward;\n//             users[upline].levelIncome += reward;\n//         }\n\n//         // ✅ Update referral info\n//         ReferralInfo[] storage refs = directReferrals[upline];\n//         for (uint256 j = 0; j < refs.length; j++) {\n//             if (refs[j].referralAddress == msg.sender) {\n//                 refs[j].incomeEarned += reward;\n//                 break;\n//             }\n//         }\n\n//         upline = users[upline].referrer;\n//     }\n// }\n\n\n\n\n function stake(uint256 numDays, uint256 amount) external onlyRegistered {\n        require(amount > 0, \"Stake amount must be greater than 0\");\n        require(stakingAPY[numDays] > 0, \"Invalid staking duration\");\n\n        address referrer = users[msg.sender].referrer;\n\n        if (referrer != address(0)) {\n            require(users[referrer].stakes.length > 0, \"Referrer must stake before you can stake\");\n        }\n\n        bool success = usdtToken.transferFrom(msg.sender, address(this), amount);\n        require(success, \"USDT transfer failed\");\n\n        uint256 positionId = ++stakeCounter;\n\n        users[msg.sender].stakes.push(\n            Stake({\n                stakeId: stakeCounter,\n                positionId: positionId,\n                amount: amount,\n                timestamp: block.timestamp,\n                numDays: numDays,\n                claimed: false\n            })\n        );\n\n        positionIdToUser[positionId] = msg.sender;\n\n        bool isFirstStake = users[msg.sender].stakes.length == 1;\n\n        address upline = users[msg.sender].referrer;\n\n        for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {\n            uint256 reward = 0;\n\n            if (i == 0) {\n                if (isFirstStake) {\n                    // 5% Direct + 5% Level 1\n                    uint256 directReward = (amount * 5) / 100;\n                    uint256 level1Reward = (amount * 5) / 100;\n\n                    require(usdtToken.balanceOf(address(this)) >= directReward, \"Insufficient contract balance for direct\");\n                    bool directSuccess = usdtToken.transfer(upline, directReward);\n                    require(directSuccess, \"Direct referral transfer failed\");\n\n                    directReferralIncome[upline] += directReward;\n                    users[upline].totalIncome += directReward;\n\n                    require(usdtToken.balanceOf(address(this)) >= level1Reward, \"Insufficient contract balance for level 1\");\n                    bool level1Success = usdtToken.transfer(upline, level1Reward);\n                    require(level1Success, \"Level 1 reward transfer failed\");\n\n                    users[upline].totalIncome += level1Reward;\n                    users[upline].levelIncome += level1Reward;\n\n                    reward = level1Reward; // For updating ReferralInfo\n                } else {\n                    // Only 5% Level 1\n                    reward = (amount * levelRewards[i]) / 100;\n\n                    require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n                    bool level1Success = usdtToken.transfer(upline, reward);\n                    require(level1Success, \"Level 1 reward transfer failed\");\n\n                    users[upline].totalIncome += reward;\n                    users[upline].levelIncome += reward;\n                }\n            } else {\n                // Level 2–5\n                reward = (amount * levelRewards[i]) / 100;\n\n                require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n                bool levelSuccess = usdtToken.transfer(upline, reward);\n                require(levelSuccess, \"Level reward transfer failed\");\n\n                users[upline].totalIncome += reward;\n                users[upline].levelIncome += reward;\n            }\n\n            // ✅ Update referral info only for direct referrals (i == 0)\n            if (i == 0) {\n                ReferralInfo[] storage refs = directReferrals[upline];\n                for (uint256 j = 0; j < refs.length; j++) {\n                    if (refs[j].referralAddress == msg.sender) {\n                        refs[j].incomeEarned += reward;\n                        break;\n                    }\n                }\n            }\n\n            upline = users[upline].referrer;\n        }\n    }\n    function getContractBalance() external view returns (uint256) {\n        return usdtToken.balanceOf(address(this));\n    }\n\n    function getEstimatedReturn(uint256 amount, uint256 numDays)\n        external\n        view\n        returns (uint256 interest, uint256 totalReturn)\n    {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(stakingAPY[numDays] > 0, \"Invalid staking duration\");\n\n        uint256 apy = stakingAPY[numDays];\n        interest = (amount * apy * numDays) / (100 * 365);\n        totalReturn = amount + interest;\n\n        return (interest, totalReturn);\n    }\n\n    // ✅ Set staking APY\n    function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {\n        require(numDays > 0, \"Days must be > 0\");\n        stakingAPY[numDays] = apy;\n    }\n\n    // ✅ Set level rewards\n    function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {\n        levelRewards = newRewards;\n    }\n\n    function claim(uint256 _positionId) external onlyRegistered {\n        address userAddress = msg.sender;\n        User storage user = users[userAddress];\n        Stake[] storage stakes = user.stakes;\n\n        bool found = false;\n\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId && !stakes[i].claimed) {\n                require(\n                    block.timestamp >=\n                        stakes[i].timestamp + (stakes[i].numDays * 1 days),\n                    \"Staking period not yet completed\"\n                );\n\n                uint256 apy = stakingAPY[stakes[i].numDays];\n                uint256 interest = (stakes[i].amount *\n                    apy *\n                    stakes[i].numDays) / (100 * 365);\n                uint256 totalAmount = stakes[i].amount + interest;\n\n                require(\n                    usdtToken.balanceOf(address(this)) >= totalAmount,\n                    \"Insufficient contract balance\"\n                );\n\n                stakes[i].claimed = true;\n                bool success = usdtToken.transfer(userAddress, totalAmount);\n                require(success, \"USDT transfer failed\");\n\n                emit Claimed(\n                    userAddress,\n                    stakes[i].stakeId,\n                    stakes[i].amount,\n                    interest\n                );\n\n                found = true;\n                break;\n            }\n        }\n\n        require(found, \"Stake not found or already claimed\");\n    }\n\n    function claimEmergency(uint256 _positionId) external onlyRegistered {\n        address userAddress = msg.sender;\n        User storage user = users[userAddress];\n        Stake[] storage stakes = user.stakes;\n\n        bool found = false;\n\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId && !stakes[i].claimed) {\n                // Check if 10 days have passed since staking\n                require(\n                    block.timestamp >= stakes[i].timestamp + 10 days,\n                    \"Emergency claim allowed only after 10 days\"\n                );\n\n                uint256 amount = stakes[i].amount;\n                uint256 adminFee = (amount * 5) / 100;\n                uint256 userAmount = amount - adminFee;\n\n                require(\n                    usdtToken.balanceOf(address(this)) >= amount,\n                    \"Insufficient contract balance\"\n                );\n\n                stakes[i].claimed = true;\n\n                // Transfer user's share\n                bool successUser = usdtToken.transfer(userAddress, userAmount);\n                require(successUser, \"User transfer failed\");\n\n                // Transfer admin fee\n                bool successAdmin = usdtToken.transfer(\n                    0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd,\n                    adminFee\n                );\n                require(successAdmin, \"Admin fee transfer failed\");\n\n                emit Claimed(userAddress, stakes[i].stakeId, userAmount, 0);\n\n                found = true;\n                break;\n            }\n        }\n\n        require(found, \"Stake not found or already claimed\");\n    }\n\n    function getStakeByPositionId(uint256 _positionId)\n        external\n        view\n        returns (\n            address user,\n            uint256 stakeId,\n            uint256 amount,\n            uint256 startDate,\n            uint256 endDate,\n            uint256 apy,\n            uint256 perDayInterest,\n            bool status\n        )\n    {\n        address userAddr = positionIdToUser[_positionId];\n        require(userAddr != address(0), \"Invalid positionId\");\n\n        Stake[] memory stakes = users[userAddr].stakes;\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId) {\n                Stake memory s = stakes[i];\n\n                uint256 apyRate = stakingAPY[s.numDays];\n                uint256 end = s.timestamp + (s.numDays * 1 days);\n                bool isActive = !s.claimed && block.timestamp < end;\n\n                // ✅ Correct daily interest logic: (amount * apy / 100) / 365\n                uint256 dailyInterest = (s.amount * apyRate) / 100 / 365;\n\n                return (\n                    userAddr,\n                    s.stakeId,\n                    s.amount,\n                    s.timestamp,\n                    end,\n                    apyRate,\n                    dailyInterest,\n                    isActive\n                );\n            }\n        }\n\n        revert(\"Stake not found\");\n    }\n\n    function getPositionIds(address _user)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256 count = users[_user].stakes.length;\n        uint256[] memory ids = new uint256[](count);\n\n        for (uint256 i = 0; i < count; i++) {\n            ids[i] = users[_user].stakes[i].positionId;\n        }\n\n        return ids;\n    }\n\n    function getDirectReferralCount(address user)\n        external\n        view\n        returns (uint256)\n    {\n        return directReferrals[user].length;\n    }\n\n    function getDirectReferralIncome(address user)\n        external\n        view\n        returns (uint256)\n    {\n        return directReferralIncome[user];\n    }\n\n    function getLevelIncome(address user) external view returns (uint256) {\n        return users[user].levelIncome;\n    }\n\n      function getReferralIncomeDetails(address user)\n        external\n        view\n        returns (\n            address[] memory referralAddresses,\n            uint256[] memory incomes,\n            uint256[] memory timestamps\n        )\n    {\n        ReferralInfo[] storage refs = directReferrals[user];\n        uint256 count = refs.length;\n\n        referralAddresses = new address[](count);\n        incomes = new uint256[](count);\n        timestamps = new uint256[](count);\n\n        for (uint256 i = 0; i < count; i++) {\n            referralAddresses[i] = refs[i].referralAddress;\n            incomes[i] = refs[i].incomeEarned;\n            timestamps[i] = refs[i].timestamp;\n        }\n\n        return (referralAddresses, incomes, timestamps);\n    }\n\n    function getTotalIncome(address user) external view returns (uint256) {\n        return users[user].totalIncome;\n    }\n\n    function getTotalLevelIncome(address user) external view returns (uint256) {\n        return users[user].levelIncome;\n    }\n\n    function getUserLevel(address user) external view returns (uint8) {\n        uint256 count = directReferrals[user].length;\n        if (count >= 10) return 3;\n        if (count >= 5) return 2;\n        if (count >= 1) return 1;\n        return 0;\n    }\n\n    function getLevelIncomeDistribution(address _user)\n        external\n        view\n        returns (LevelIncomeData[] memory)\n    {\n        uint256 totalCount = 0;\n\n        for (uint256 i = 0; i < allUsers.length; i++) {\n            address staker = allUsers[i];\n            Stake[] memory stakes = users[staker].stakes;\n            address upline = users[staker].referrer;\n\n            for (\n                uint8 level = 0;\n                level < levelRewards.length && upline != address(0);\n                level++\n            ) {\n                if (upline == _user) {\n                    totalCount += stakes.length;\n                }\n                upline = users[upline].referrer;\n            }\n        }\n\n        LevelIncomeData[] memory incomeData = new LevelIncomeData[](totalCount);\n        uint256 index = 0;\n\n        for (uint256 i = 0; i < allUsers.length; i++) {\n            address staker = allUsers[i];\n            Stake[] memory stakes = users[staker].stakes;\n            address upline = users[staker].referrer;\n\n            for (\n                uint8 level = 0;\n                level < levelRewards.length && upline != address(0);\n                level++\n            ) {\n                if (upline == _user) {\n                    for (uint256 j = 0; j < stakes.length; j++) {\n                        Stake memory stake = stakes[j];\n                        uint256 income = (stake.amount * levelRewards[level]) /\n                            100;\n\n                        incomeData[index++] = LevelIncomeData({\n                            receiverAddress: _user,\n                            stakeId: stake.stakeId,\n                            stakeAmount: stake.amount,\n                            incomeReceived: income,\n                            uplineAddress: staker,\n                            timestamp: stake.timestamp,\n                            level: level + 1\n                        });\n                    }\n                }\n                upline = users[upline].referrer;\n            }\n        }\n\n        return incomeData;\n    }\n\n    function withdrawUSDT(uint256 amount) external {\n        require(msg.sender == owner, \"Only owner can withdraw\");\n        usdtToken.transfer(owner, amount);\n    }\n\n    function isRegistered(address user) external view returns (bool) {\n        return users[user].registered;\n    }\n\n    function getTotalUsers() external view returns (uint256) {\n        return allUsers.length;\n    }\n\n    function ownerTransfer(address to, uint256 amount) external onlyOwner {\n        require(to != address(0), \"Invalid recipient address\");\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        bool success = usdtToken.transfer(to, amount);\n        require(success, \"Token transfer failed\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/roy.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/roy.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/roy.sol\":{\"keccak256\":\"0x3a5ad7a83de427277b82e18dcef2c66704c068bde14b47a0d6f21ee424c6ff6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eac2e985d488a8881cbab6c81135c1762ad553b9f34a59712a019252ec4efc9\",\"dweb:/ipfs/QmYYyaSoeVfSj9V77RkrsXHq5mcoPhQduAydjcSrUz1zA5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SikkaStakingDecentralize": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "claimEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "directReferralIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "directReferrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "referralAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "incomeEarned",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDirectReferralCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDirectReferralIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								}
							],
							"name": "getEstimatedReturn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "interest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalReturn",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getLevelIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getLevelIncomeDistribution",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "receiverAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "stakeId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakeAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "incomeReceived",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "uplineAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "level",
											"type": "uint8"
										}
									],
									"internalType": "struct SikkaStakingDecentralize.LevelIncomeData[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getPositionIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getReferralIncomeDetails",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "referralAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "incomes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "timestamps",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "getStakeByPositionId",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "perDayInterest",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTotalIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTotalLevelIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelRewards",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionIdToUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8[5]",
									"name": "newRewards",
									"type": "uint8[5]"
								}
							],
							"name": "setLevelRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "setStakingAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakingAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "levelIncome",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "registered",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0x0120\n    /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n  0x40\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  mstore\n    /* \"contracts/roy.sol\":1876:1877  5 */\n  0x05\n    /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n  0x80\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/roy.sol\":1879:1880  3 */\n  0x03\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xa0\n  mstore\n    /* \"contracts/roy.sol\":1882:1883  2 */\n  0x02\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xc0\n  mstore\n    /* \"contracts/roy.sol\":1885:1886  1 */\n  0x01\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xe0\n  dup2\n  swap1\n  mstore\n  0x0100\n  mstore\n  tag_1\n  swap2\n  0x09\n  swap2\n    /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n  swap1\n    /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/roy.sol\":513:834  constructor(address _usdtToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/roy.sol\":555:560  owner */\n  0x00\n    /* \"contracts/roy.sol\":555:573  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/roy.sol\":563:573  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/roy.sol\":555:573  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  dup1\n  dup4\n  sstore\n    /* \"contracts/roy.sol\":583:592  usdtToken */\n  0x02\n    /* \"contracts/roy.sol\":583:613  usdtToken = IERC20(_usdtToken) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  or\n  dup3\n  sstore\n    /* \"contracts/roy.sol\":629:634  owner */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"contracts/roy.sol\":623:635  users[owner] */\n  dup2\n  mstore\n    /* \"contracts/roy.sol\":623:628  users */\n  0x03\n    /* \"contracts/roy.sol\":623:635  users[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"contracts/roy.sol\":623:646  users[owner].registered */\n  0x04\n  swap1\n  dup2\n  add\n    /* \"contracts/roy.sol\":623:653  users[owner].registered = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/roy.sol\":664:674  stakingAPY */\n  0x06\n    /* \"contracts/roy.sol\":664:678  stakingAPY[30] */\n  swap3\n  dup4\n  swap1\n  mstore\n  0xb6ba906ff52451a7a924e2eaeb8aea3ebee7350a8703e5e417edb25358c7dcc1\n    /* \"contracts/roy.sol\":664:682  stakingAPY[30] = 1 */\n  sstore\n    /* \"contracts/roy.sol\":692:706  stakingAPY[60] */\n  0x6ca6dcafc04b6e03616746c3528366f990e332021e35d59275be746d65cae0a7\n    /* \"contracts/roy.sol\":692:710  stakingAPY[60] = 2 */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"contracts/roy.sol\":721:735  stakingAPY[90] */\n  0x1727c0104c2870c3003671480695f7dab262614528b49265008e76fd3d48c5fe\n    /* \"contracts/roy.sol\":721:739  stakingAPY[90] = 4 */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"contracts/roy.sol\":749:764  stakingAPY[120] */\n  0x5451fe6494362676ddb91456d9957c85d968e6f82956407c931a14c023049e6a\n    /* \"contracts/roy.sol\":749:768  stakingAPY[120] = 6 */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/roy.sol\":796:797  9 */\n  0x09\n    /* \"contracts/roy.sol\":778:793  stakingAPY[180] */\n  0xfb78eb295a86b096b5f095822bd250a277112be4103ea4a7608d96eca726b2c1\n    /* \"contracts/roy.sol\":778:797  stakingAPY[180] = 9 */\n  sstore\n    /* \"contracts/roy.sol\":818:821  365 */\n  0x016d\n    /* \"contracts/roy.sol\":807:822  stakingAPY[365] */\n  swap1\n  mstore\n    /* \"contracts/roy.sol\":825:827  20 */\n  0x14\n    /* \"contracts/roy.sol\":807:822  stakingAPY[365] */\n  0x0bbf8adea84d189c39869a372ab30aeba9246eea044edc5a37ac100921b2c4e1\n    /* \"contracts/roy.sol\":807:827  stakingAPY[365] = 20 */\n  sstore\n    /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n  jump(tag_17)\ntag_2:\n  0x01\n  dup4\n  add\n  swap2\n  dup4\n  swap1\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_10:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_10)\ntag_11:\n  dup1\n  iszero\n  tag_12\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_11)\ntag_12:\n  pop\ntag_9:\n  pop\n  tag_13\n  swap3\n  swap2\n  pop\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n  swap1\n  jump\t// out\ntag_14:\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_15)\n    /* \"#utility.yul\":14:324   */\ntag_5:\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_19:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_20:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/roy.sol\":384:20981  contract SikkaStakingDecentralize {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98278efb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc2d3c677\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe45a57d0\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe45a57d0\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xef71ae56\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf6e88873\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf7b17d10\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xc2d3c677\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc3c5a547\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc5b89c0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd85c8966\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa87430ba\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xaa7ed462\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbd297178\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x98278efb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9be572f6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d747bad\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa2bdedf4\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x5bd4e16a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x797c7f5f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x797c7f5f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x875bb4e2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x5bd4e16a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x656596a5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6c8c2156\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x379607f5\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3ea521ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4850d2a2\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x05ad3935\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e43eb27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x21923bde\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x28fe7031\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/roy.sol\":1580:1637  mapping(address => ReferralInfo[]) public directReferrals */\n    tag_3:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/roy.sol\":1643:1694  mapping(uint256 => address) public positionIdToUser */\n    tag_4:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"contracts/roy.sol\":17951:18199  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_5:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n        /* \"contracts/roy.sol\":16138:16492  function getPositionIds(address _user)... */\n    tag_6:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"contracts/roy.sol\":11567:13085  function claim(uint256 _positionId) external onlyRegistered {... */\n    tag_7:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/roy.sol\":20279:20441  function withdrawUSDT(uint256 amount) external {... */\n    tag_8:\n      tag_65\n      tag_69\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/roy.sol\":2252:2988  function register(address referrer) external {... */\n    tag_9:\n      tag_65\n      tag_72\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/roy.sol\":11248:11412  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n    tag_10:\n      tag_65\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/roy.sol\":16825:16942  function getLevelIncome(address user) external view returns (uint256) {... */\n    tag_11:\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n        /* \"contracts/roy.sol\":11447:11561  function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/roy.sol\":13091:14752  function claimEmergency(uint256 _positionId) external onlyRegistered {... */\n    tag_13:\n      tag_65\n      tag_88\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/roy.sol\":10614:10734  function getContractBalance() external view returns (uint256) {... */\n    tag_14:\n      tag_78\n      tag_91\n      jump\t// in\n        /* \"contracts/roy.sol\":14758:16132  function getStakeByPositionId(uint256 _positionId)... */\n    tag_15:\n      tag_93\n      tag_94\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_46\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n        /* \"contracts/roy.sol\":6774:10609  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n    tag_16:\n      tag_65\n      tag_99\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/roy.sol\":1700:1745  mapping(uint256 => uint256) public stakingAPY */\n    tag_17:\n      tag_78\n      tag_102\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/roy.sol\":424:444  address public owner */\n    tag_18:\n      tag_48\n      tag_106\n      jump\t// in\n        /* \"contracts/roy.sol\":16498:16656  function getDirectReferralCount(address user)... */\n    tag_19:\n      tag_78\n      tag_109\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/roy.sol\":20564:20660  function getTotalUsers() external view returns (uint256) {... */\n    tag_20:\n      tag_78\n      tag_113\n      jump\t// in\n        /* \"contracts/roy.sol\":16950:17694  function getReferralIncomeDetails(address user)... */\n    tag_21:\n      tag_115\n      tag_116\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n        /* \"contracts/roy.sol\":1813:1838  address[] public allUsers */\n    tag_22:\n      tag_48\n      tag_121\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"contracts/roy.sol\":1537:1574  mapping(address => User) public users */\n    tag_23:\n      tag_124\n      tag_125\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_46\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"contracts/roy.sol\":483:506  IERC20 public usdtToken */\n    tag_24:\n      tag_48\n      tag_130\n      jump\t// in\n        /* \"contracts/roy.sol\":16662:16819  function getDirectReferralIncome(address user)... */\n    tag_25:\n      tag_78\n      tag_134\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/roy.sol\":10740:11215  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n    tag_26:\n      tag_137\n      tag_138\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n        /* \"contracts/roy.sol\":17700:17817  function getTotalIncome(address user) external view returns (uint256) {... */\n    tag_27:\n      tag_78\n      tag_143\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/roy.sol\":20447:20558  function isRegistered(address user) external view returns (bool) {... */\n    tag_28:\n      tag_146\n      tag_147\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n        /* \"contracts/roy.sol\":20666:20979  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_30:\n      tag_65\n      tag_156\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n    tag_31:\n      tag_54\n      tag_159\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/roy.sol\":18205:20273  function getLevelIncomeDistribution(address _user)... */\n    tag_32:\n      tag_162\n      tag_163\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n        /* \"contracts/roy.sol\":1751:1806  mapping(address => uint256) public directReferralIncome */\n    tag_33:\n      tag_78\n      tag_168\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"contracts/roy.sol\":450:477  uint256 public stakeCounter */\n    tag_34:\n      tag_78\n      tag_172\n      jump\t// in\n        /* \"contracts/roy.sol\":1580:1637  mapping(address => ReferralInfo[]) public directReferrals */\n    tag_45:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/roy.sol\":1643:1694  mapping(uint256 => address) public positionIdToUser */\n    tag_51:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":17951:18199  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18043:18064  directReferrals[user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":18010:18015  uint8 */\n      0x00\n        /* \"contracts/roy.sol\":18043:18064  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":18043:18058  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":18043:18064  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":18043:18071  directReferrals[user].length */\n      sload\n        /* \"contracts/roy.sol\":18094:18096  10 */\n      0x0a\n        /* \"contracts/roy.sol\":18085:18096  count >= 10 */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":18081:18106  if (count >= 10) return 3 */\n      tag_177\n      jumpi\n        /* \"contracts/roy.sol\":18105:18106  3 */\n      0x03\n        /* \"contracts/roy.sol\":18098:18106  return 3 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":18081:18106  if (count >= 10) return 3 */\n    tag_177:\n        /* \"contracts/roy.sol\":18129:18130  5 */\n      0x05\n        /* \"contracts/roy.sol\":18120:18125  count */\n      dup2\n        /* \"contracts/roy.sol\":18120:18130  count >= 5 */\n      lt\n        /* \"contracts/roy.sol\":18116:18140  if (count >= 5) return 2 */\n      tag_178\n      jumpi\n        /* \"contracts/roy.sol\":18139:18140  2 */\n      0x02\n        /* \"contracts/roy.sol\":18132:18140  return 2 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":18116:18140  if (count >= 5) return 2 */\n    tag_178:\n        /* \"contracts/roy.sol\":18163:18164  1 */\n      0x01\n        /* \"contracts/roy.sol\":18154:18159  count */\n      dup2\n        /* \"contracts/roy.sol\":18154:18164  count >= 1 */\n      lt\n        /* \"contracts/roy.sol\":18150:18174  if (count >= 1) return 1 */\n      tag_179\n      jumpi\n        /* \"contracts/roy.sol\":18173:18174  1 */\n      0x01\n        /* \"contracts/roy.sol\":18166:18174  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":18150:18174  if (count >= 1) return 1 */\n    tag_179:\n        /* \"contracts/roy.sol\":18191:18192  0 */\n      0x00\n        /* \"contracts/roy.sol\":18184:18192  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17951:18199  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_176:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":16138:16492  function getPositionIds(address _user)... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16272:16284  users[_user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":16256:16269  uint256 count */\n      0x00\n        /* \"contracts/roy.sol\":16272:16284  users[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16272:16277  users */\n      0x03\n        /* \"contracts/roy.sol\":16272:16284  users[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":16272:16291  users[_user].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":16272:16298  users[_user].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":16224:16240  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/roy.sol\":16272:16298  users[_user].stakes.length */\n      dup2\n        /* \"contracts/roy.sol\":16331:16351  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_181\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_181:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_182:\n      pop\n        /* \"contracts/roy.sol\":16308:16351  uint256[] memory ids = new uint256[](count) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":16367:16376  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":16362:16465  for (uint256 i = 0; i < count; i++) {... */\n    tag_183:\n        /* \"contracts/roy.sol\":16386:16391  count */\n      dup3\n        /* \"contracts/roy.sol\":16382:16383  i */\n      dup2\n        /* \"contracts/roy.sol\":16382:16391  i < count */\n      lt\n        /* \"contracts/roy.sol\":16362:16465  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_184\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16421:16433  users[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16421:16426  users */\n      0x03\n        /* \"contracts/roy.sol\":16421:16433  users[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":16421:16440  users[_user].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":16421:16443  users[_user].stakes[i] */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":16441:16442  i */\n      dup3\n      swap1\n        /* \"contracts/roy.sol\":16421:16443  users[_user].stakes[i] */\n      dup2\n      lt\n      tag_186\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_186:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":16421:16454  users[_user].stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":16412:16415  ids */\n      dup3\n        /* \"contracts/roy.sol\":16416:16417  i */\n      dup3\n        /* \"contracts/roy.sol\":16412:16418  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_188\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_188:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/roy.sol\":16412:16454  ids[i] = users[_user].stakes[i].positionId */\n      mstore\n        /* \"contracts/roy.sol\":16393:16396  i++ */\n      dup1\n      tag_189\n      dup2\n      tag_190\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":16362:16465  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_183)\n    tag_184:\n      pop\n        /* \"contracts/roy.sol\":16482:16485  ids */\n      swap4\n        /* \"contracts/roy.sol\":16138:16492  function getPositionIds(address _user)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":11567:13085  function claim(uint256 _positionId) external onlyRegistered {... */\n    tag_67:\n        /* \"contracts/roy.sol\":2076:2086  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2070:2075  users */\n      0x03\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2070:2098  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2062:2117  require(users[msg.sender].registered, \"Not registered\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/roy.sol\":11659:11669  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":11637:11656  address userAddress */\n      0x00\n        /* \"contracts/roy.sol\":11699:11717  users[userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":11699:11704  users */\n      0x03\n        /* \"contracts/roy.sol\":11699:11717  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":11752:11763  user.stakes */\n      0x01\n      dup3\n      add\n      swap1\n        /* \"contracts/roy.sol\":11637:11656  address userAddress */\n      dup1\n        /* \"contracts/roy.sol\":11803:13016  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_196:\n        /* \"contracts/roy.sol\":11827:11840  stakes.length */\n      dup3\n      sload\n        /* \"contracts/roy.sol\":11823:11840  i < stakes.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":11803:13016  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/roy.sol\":11889:11900  _positionId */\n      dup6\n        /* \"contracts/roy.sol\":11865:11871  stakes */\n      dup4\n        /* \"contracts/roy.sol\":11872:11873  i */\n      dup3\n        /* \"contracts/roy.sol\":11865:11874  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":11865:11885  stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":11865:11900  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":11865:11922  stakes[i].positionId == _positionId && !stakes[i].claimed */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":11905:11911  stakes */\n      dup3\n        /* \"contracts/roy.sol\":11912:11913  i */\n      dup2\n        /* \"contracts/roy.sol\":11905:11914  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_202\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_202:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":11905:11922  stakes[i].claimed */\n      0x05\n        /* \"contracts/roy.sol\":11905:11914  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":11905:11922  stakes[i].claimed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":11904:11922  !stakes[i].claimed */\n      iszero\n        /* \"contracts/roy.sol\":11865:11922  stakes[i].positionId == _positionId && !stakes[i].claimed */\n    tag_201:\n        /* \"contracts/roy.sol\":11861:13006  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/roy.sol\":12037:12043  stakes */\n      dup3\n        /* \"contracts/roy.sol\":12044:12045  i */\n      dup2\n        /* \"contracts/roy.sol\":12037:12046  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_205:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12037:12054  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":12057:12063  1 days */\n      0x015180\n        /* \"contracts/roy.sol\":12037:12063  stakes[i].numDays * 1 days */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/roy.sol\":12014:12020  stakes */\n      dup4\n        /* \"contracts/roy.sol\":12021:12022  i */\n      dup3\n        /* \"contracts/roy.sol\":12014:12023  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_209\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_209:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12014:12033  stakes[i].timestamp */\n      0x03\n      add\n      sload\n        /* \"contracts/roy.sol\":12014:12064  stakes[i].timestamp + (stakes[i].numDays * 1 days) */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"contracts/roy.sol\":11971:11986  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":11971:12064  block.timestamp >=... */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":11942:12138  require(... */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_215\n      jump\t// in\n    tag_213:\n        /* \"contracts/roy.sol\":12157:12168  uint256 apy */\n      0x00\n        /* \"contracts/roy.sol\":12171:12181  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":12171:12200  stakingAPY[stakes[i].numDays] */\n      0x00\n        /* \"contracts/roy.sol\":12182:12188  stakes */\n      dup6\n        /* \"contracts/roy.sol\":12189:12190  i */\n      dup5\n        /* \"contracts/roy.sol\":12182:12191  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12182:12199  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":12171:12200  stakingAPY[stakes[i].numDays] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":12157:12200  uint256 apy = stakingAPY[stakes[i].numDays] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":12218:12234  uint256 interest */\n      0x00\n        /* \"contracts/roy.sol\":12325:12334  100 * 365 */\n      0x8e94\n        /* \"contracts/roy.sol\":12303:12309  stakes */\n      dup6\n        /* \"contracts/roy.sol\":12310:12311  i */\n      dup5\n        /* \"contracts/roy.sol\":12303:12312  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12303:12320  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":12277:12280  apy */\n      dup4\n        /* \"contracts/roy.sol\":12238:12244  stakes */\n      dup8\n        /* \"contracts/roy.sol\":12245:12246  i */\n      dup7\n        /* \"contracts/roy.sol\":12238:12247  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_220:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12238:12254  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":12238:12280  stakes[i].amount *... */\n      tag_222\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_222:\n        /* \"contracts/roy.sol\":12238:12320  stakes[i].amount *... */\n      tag_223\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_223:\n        /* \"contracts/roy.sol\":12237:12335  (stakes[i].amount *... */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"contracts/roy.sol\":12218:12335  uint256 interest = (stakes[i].amount *... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":12353:12372  uint256 totalAmount */\n      0x00\n        /* \"contracts/roy.sol\":12394:12402  interest */\n      dup2\n        /* \"contracts/roy.sol\":12375:12381  stakes */\n      dup7\n        /* \"contracts/roy.sol\":12382:12383  i */\n      dup6\n        /* \"contracts/roy.sol\":12375:12384  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_226\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_226:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12375:12391  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":12375:12402  stakes[i].amount + interest */\n      tag_228\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_228:\n        /* \"contracts/roy.sol\":12450:12459  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":12450:12484  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":12353:12402  uint256 totalAmount = stakes[i].amount + interest */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12450:12459  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":12450:12469  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":12450:12484  usdtToken.balanceOf(address(this)) */\n      tag_229\n      swap1\n        /* \"contracts/roy.sol\":12478:12482  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":12450:12484  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/roy.sol\":12450:12499  usdtToken.balanceOf(address(this)) >= totalAmount */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":12421:12570  require(... */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_237\n      jump\t// in\n    tag_235:\n        /* \"contracts/roy.sol\":12609:12613  true */\n      0x01\n        /* \"contracts/roy.sol\":12589:12595  stakes */\n      dup7\n        /* \"contracts/roy.sol\":12596:12597  i */\n      dup6\n        /* \"contracts/roy.sol\":12589:12598  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_238:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":12589:12606  stakes[i].claimed */\n      0x05\n      add\n        /* \"contracts/roy.sol\":12589:12613  stakes[i].claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":12646:12655  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":12646:12690  usdtToken.transfer(userAddress, totalAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12646:12655  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":12646:12664  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":12646:12690  usdtToken.transfer(userAddress, totalAmount) */\n      tag_240\n      swap1\n        /* \"contracts/roy.sol\":12665:12676  userAddress */\n      dup13\n      swap1\n        /* \"contracts/roy.sol\":12678:12689  totalAmount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":12646:12690  usdtToken.transfer(userAddress, totalAmount) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_240:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"contracts/roy.sol\":12631:12690  bool success = usdtToken.transfer(userAddress, totalAmount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":12716:12723  success */\n      dup1\n        /* \"contracts/roy.sol\":12708:12748  require(success, \"USDT transfer failed\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_249\n      jump\t// in\n    tag_247:\n        /* \"contracts/roy.sol\":12801:12812  userAddress */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12772:12937  Claimed(... */\n      and\n      0x9cdcf2f7714cca3508c7f0110b04a90a80a3a8dd0e35de99689db74d28c5383e\n        /* \"contracts/roy.sol\":12834:12840  stakes */\n      dup9\n        /* \"contracts/roy.sol\":12841:12842  i */\n      dup8\n        /* \"contracts/roy.sol\":12834:12843  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_250:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12834:12851  stakes[i].stakeId */\n      0x00\n      add\n      sload\n        /* \"contracts/roy.sol\":12873:12879  stakes */\n      dup10\n        /* \"contracts/roy.sol\":12880:12881  i */\n      dup9\n        /* \"contracts/roy.sol\":12873:12882  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":12873:12889  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":12911:12919  interest */\n      dup7\n        /* \"contracts/roy.sol\":12772:12937  Claimed(... */\n      mload(0x40)\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/roy.sol\":12964:12968  true */\n      0x01\n        /* \"contracts/roy.sol\":12956:12968  found = true */\n      swap6\n      pop\n        /* \"contracts/roy.sol\":12986:12991  break */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_197)\n        /* \"contracts/roy.sol\":11861:13006  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n    tag_204:\n        /* \"contracts/roy.sol\":11842:11845  i++ */\n      dup1\n      tag_256\n      dup2\n      tag_190\n      jump\t// in\n    tag_256:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":11803:13016  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"contracts/roy.sol\":13034:13039  found */\n      dup1\n        /* \"contracts/roy.sol\":13026:13078  require(found, \"Stake not found or already claimed\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_259\n      jump\t// in\n    tag_257:\n        /* \"contracts/roy.sol\":2127:2128  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":11567:13085  function claim(uint256 _positionId) external onlyRegistered {... */\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":20279:20441  function withdrawUSDT(uint256 amount) external {... */\n    tag_70:\n        /* \"contracts/roy.sol\":20358:20363  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":20344:20354  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":20344:20363  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":20336:20391  require(msg.sender == owner, \"Only owner can withdraw\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_261:\n        /* \"contracts/roy.sol\":20401:20410  usdtToken */\n      sload(0x02)\n      0x00\n        /* \"contracts/roy.sol\":20420:20425  owner */\n      sload\n        /* \"contracts/roy.sol\":20401:20434  usdtToken.transfer(owner, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":20401:20410  usdtToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/roy.sol\":20401:20419  usdtToken.transfer */\n      0xa9059cbb\n      swap3\n        /* \"contracts/roy.sol\":20401:20434  usdtToken.transfer(owner, amount) */\n      tag_264\n      swap3\n        /* \"contracts/roy.sol\":20420:20425  owner */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":20427:20433  amount */\n      dup6\n      swap1\n        /* \"contracts/roy.sol\":20401:20434  usdtToken.transfer(owner, amount) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_264:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_268:\n      pop\n        /* \"contracts/roy.sol\":20279:20441  function withdrawUSDT(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":2252:2988  function register(address referrer) external {... */\n    tag_73:\n        /* \"contracts/roy.sol\":2322:2332  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2316:2333  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2316:2321  users */\n      0x03\n        /* \"contracts/roy.sol\":2316:2333  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2316:2344  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2315:2344  !users[msg.sender].registered */\n      iszero\n        /* \"contracts/roy.sol\":2307:2367  require(!users[msg.sender].registered, \"Already registered\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_272\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2385:2407  referrer != msg.sender */\n      dup2\n      and\n        /* \"contracts/roy.sol\":2397:2407  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2385:2407  referrer != msg.sender */\n      eq\n      iszero\n        /* \"contracts/roy.sol\":2377:2433  require(referrer != msg.sender, \"Cannot refer yourself\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_275\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2451:2466  users[referrer] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2451:2456  users */\n      0x03\n        /* \"contracts/roy.sol\":2451:2466  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2451:2477  users[referrer].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2443:2505  require(users[referrer].registered, \"Referrer not registered\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_278\n      jump\t// in\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2536:2551  users[referrer] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":2568:2569  0 */\n      0x00\n        /* \"contracts/roy.sol\":2536:2551  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2536:2541  users */\n      0x03\n        /* \"contracts/roy.sol\":2536:2551  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2536:2558  users[referrer].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":2536:2565  users[referrer].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":2515:2638  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_281\n      jump\t// in\n    tag_279:\n        /* \"contracts/roy.sol\":2655:2665  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2649:2666  users[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2649:2654  users */\n      0x03\n        /* \"contracts/roy.sol\":2649:2666  users[msg.sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":2649:2686  users[msg.sender].referrer = referrer */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap8\n      dup9\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      dup4\n      sstore\n        /* \"contracts/roy.sol\":2696:2724  users[msg.sender].registered */\n      0x04\n      swap3\n      dup4\n      add\n        /* \"contracts/roy.sol\":2696:2731  users[msg.sender].registered = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/roy.sol\":2649:2686  users[msg.sender].referrer = referrer */\n      0x01\n        /* \"contracts/roy.sol\":2696:2731  users[msg.sender].registered = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":2741:2749  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":2741:2766  allUsers.push(msg.sender) */\n      dup1\n      sload\n      dup1\n      dup4\n      add\n      swap1\n      swap2\n      sstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      dup1\n      sload\n      dup5\n      and\n      dup11\n      or\n      swap1\n      sstore\n        /* \"contracts/roy.sol\":2777:2802  directReferrals[referrer] */\n      swap1\n      dup8\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"contracts/roy.sol\":2821:2971  ReferralInfo({... */\n      dup4\n      mload\n      0x60\n      dup2\n      add\n      dup6\n      mstore\n      swap8\n      dup9\n      mstore\n      dup8\n      dup6\n      add\n      dup8\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2941:2956  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":2821:2971  ReferralInfo({... */\n      swap5\n      dup10\n      add\n      swap5\n      dup6\n      mstore\n        /* \"contracts/roy.sol\":2777:2981  directReferrals[referrer].push(... */\n      dup2\n      sload\n      dup1\n      dup6\n      add\n      dup4\n      sstore\n      swap2\n      dup9\n      mstore\n      swap5\n      swap1\n      swap7\n      keccak256\n      swap7\n      mload\n      swap6\n      swap1\n      swap5\n      mul\n      swap1\n      swap6\n      add\n      dup1\n      sload\n      swap5\n      swap1\n      swap7\n      and\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      dup5\n      sstore\n      swap1\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/roy.sol\":2252:2988  function register(address referrer) external {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":11248:11412  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n    tag_77:\n        /* \"contracts/roy.sol\":2194:2199  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2180:2190  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2180:2199  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2172:2228  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_287\n      jump\t// in\n    tag_285:\n        /* \"contracts/roy.sol\":11348:11349  0 */\n      0x00\n        /* \"contracts/roy.sol\":11338:11345  numDays */\n      dup3\n        /* \"contracts/roy.sol\":11338:11349  numDays > 0 */\n      gt\n        /* \"contracts/roy.sol\":11330:11370  require(numDays > 0, \"Days must be > 0\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_291\n      jump\t// in\n    tag_289:\n        /* \"contracts/roy.sol\":11380:11399  stakingAPY[numDays] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"contracts/roy.sol\":11380:11390  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":11380:11399  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":11380:11405  stakingAPY[numDays] = apy */\n      sstore\n        /* \"contracts/roy.sol\":11248:11412  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":16825:16942  function getLevelIncome(address user) external view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16912:16923  users[user] */\n      and\n        /* \"contracts/roy.sol\":16886:16893  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":16912:16923  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16912:16917  users */\n      0x03\n        /* \"contracts/roy.sol\":16912:16923  users[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":16912:16935  users[user].levelIncome */\n      add\n      sload\n      swap1\n        /* \"contracts/roy.sol\":16825:16942  function getLevelIncome(address user) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":11447:11561  function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {... */\n    tag_86:\n        /* \"contracts/roy.sol\":2194:2199  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2180:2190  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2180:2199  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2172:2228  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_287\n      jump\t// in\n    tag_294:\n        /* \"contracts/roy.sol\":11529:11554  levelRewards = newRewards */\n      tag_268\n        /* \"contracts/roy.sol\":11529:11541  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":11544:11554  newRewards */\n      dup3\n        /* \"contracts/roy.sol\":11529:11554  levelRewards = newRewards */\n      0x05\n      tag_298\n      jump\t// in\n        /* \"contracts/roy.sol\":13091:14752  function claimEmergency(uint256 _positionId) external onlyRegistered {... */\n    tag_89:\n        /* \"contracts/roy.sol\":2076:2086  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2070:2075  users */\n      0x03\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2070:2098  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2062:2117  require(users[msg.sender].registered, \"Not registered\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_300:\n        /* \"contracts/roy.sol\":13192:13202  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":13170:13189  address userAddress */\n      0x00\n        /* \"contracts/roy.sol\":13232:13250  users[userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":13232:13237  users */\n      0x03\n        /* \"contracts/roy.sol\":13232:13250  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":13285:13296  user.stakes */\n      0x01\n      dup3\n      add\n      swap1\n        /* \"contracts/roy.sol\":13170:13189  address userAddress */\n      dup1\n        /* \"contracts/roy.sol\":13336:14683  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_303:\n        /* \"contracts/roy.sol\":13360:13373  stakes.length */\n      dup3\n      sload\n        /* \"contracts/roy.sol\":13356:13373  i < stakes.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":13336:14683  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/roy.sol\":13422:13433  _positionId */\n      dup6\n        /* \"contracts/roy.sol\":13398:13404  stakes */\n      dup4\n        /* \"contracts/roy.sol\":13405:13406  i */\n      dup3\n        /* \"contracts/roy.sol\":13398:13407  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":13398:13418  stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":13398:13433  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":13398:13455  stakes[i].positionId == _positionId && !stakes[i].claimed */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":13438:13444  stakes */\n      dup3\n        /* \"contracts/roy.sol\":13445:13446  i */\n      dup2\n        /* \"contracts/roy.sol\":13438:13447  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_309\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_309:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":13438:13455  stakes[i].claimed */\n      0x05\n        /* \"contracts/roy.sol\":13438:13447  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":13438:13455  stakes[i].claimed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":13437:13455  !stakes[i].claimed */\n      iszero\n        /* \"contracts/roy.sol\":13398:13455  stakes[i].positionId == _positionId && !stakes[i].claimed */\n    tag_308:\n        /* \"contracts/roy.sol\":13394:14673  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"contracts/roy.sol\":13585:13591  stakes */\n      dup3\n        /* \"contracts/roy.sol\":13592:13593  i */\n      dup2\n        /* \"contracts/roy.sol\":13585:13594  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_312\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_312:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":13585:13604  stakes[i].timestamp */\n      0x03\n      add\n      sload\n        /* \"contracts/roy.sol\":13607:13614  10 days */\n      0x0d2f00\n        /* \"contracts/roy.sol\":13585:13614  stakes[i].timestamp + 10 days */\n      tag_314\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_314:\n        /* \"contracts/roy.sol\":13566:13581  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":13566:13614  block.timestamp >= stakes[i].timestamp + 10 days */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":13537:13698  require(... */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"contracts/roy.sol\":13717:13731  uint256 amount */\n      0x00\n        /* \"contracts/roy.sol\":13734:13740  stakes */\n      dup4\n        /* \"contracts/roy.sol\":13741:13742  i */\n      dup3\n        /* \"contracts/roy.sol\":13734:13743  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_318\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_318:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":13734:13750  stakes[i].amount */\n      0x02\n        /* \"contracts/roy.sol\":13734:13743  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":13734:13750  stakes[i].amount */\n      add\n      sload\n      swap2\n      pop\n        /* \"contracts/roy.sol\":13802:13805  100 */\n      0x64\n        /* \"contracts/roy.sol\":13788:13798  amount * 5 */\n      tag_320\n        /* \"contracts/roy.sol\":13734:13750  stakes[i].amount */\n      dup4\n        /* \"contracts/roy.sol\":13797:13798  5 */\n      0x05\n        /* \"contracts/roy.sol\":13788:13798  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_320:\n        /* \"contracts/roy.sol\":13787:13805  (amount * 5) / 100 */\n      tag_321\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_321:\n        /* \"contracts/roy.sol\":13768:13805  uint256 adminFee = (amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13823:13841  uint256 userAmount */\n      0x00\n        /* \"contracts/roy.sol\":13844:13861  amount - adminFee */\n      tag_322\n        /* \"contracts/roy.sol\":13768:13805  uint256 adminFee = (amount * 5) / 100 */\n      dup3\n        /* \"contracts/roy.sol\":13844:13850  amount */\n      dup5\n        /* \"contracts/roy.sol\":13844:13861  amount - adminFee */\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"contracts/roy.sol\":13909:13918  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":13909:13943  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":13823:13861  uint256 userAmount = amount - adminFee */\n      swap2\n      swap3\n      pop\n        /* \"contracts/roy.sol\":13947:13953  amount */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":13909:13918  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":13909:13928  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":13909:13943  usdtToken.balanceOf(address(this)) */\n      tag_324\n      swap1\n        /* \"contracts/roy.sol\":13937:13941  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":13909:13943  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_324:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_328:\n        /* \"contracts/roy.sol\":13909:13953  usdtToken.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":13880:14024  require(... */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_237\n      jump\t// in\n    tag_329:\n        /* \"contracts/roy.sol\":14063:14067  true */\n      0x01\n        /* \"contracts/roy.sol\":14043:14049  stakes */\n      dup7\n        /* \"contracts/roy.sol\":14050:14051  i */\n      dup6\n        /* \"contracts/roy.sol\":14043:14052  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_331\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_331:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":14043:14060  stakes[i].claimed */\n      0x05\n      add\n        /* \"contracts/roy.sol\":14043:14067  stakes[i].claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":14146:14155  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":14146:14189  usdtToken.transfer(userAddress, userAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14146:14155  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":14146:14164  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":14146:14189  usdtToken.transfer(userAddress, userAmount) */\n      tag_333\n      swap1\n        /* \"contracts/roy.sol\":14165:14176  userAddress */\n      dup13\n      swap1\n        /* \"contracts/roy.sol\":14178:14188  userAmount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":14146:14189  usdtToken.transfer(userAddress, userAmount) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_333:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_334:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_337:\n        /* \"contracts/roy.sol\":14127:14189  bool successUser = usdtToken.transfer(userAddress, userAmount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":14215:14226  successUser */\n      dup1\n        /* \"contracts/roy.sol\":14207:14251  require(successUser, \"User transfer failed\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_340\n      jump\t// in\n    tag_338:\n        /* \"contracts/roy.sol\":14328:14337  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":14328:14458  usdtToken.transfer(... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":14308:14325  bool successAdmin */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14328:14337  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":14328:14346  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":14328:14458  usdtToken.transfer(... */\n      tag_341\n      swap1\n        /* \"contracts/roy.sol\":14368:14410  0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd */\n      0x9ab49a6105a768ed88b8afd9cca7f6886f739aad\n      swap1\n        /* \"contracts/roy.sol\":14432:14440  adminFee */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":14328:14458  usdtToken.transfer(... */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_341:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_342:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_345\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_345:\n        /* \"contracts/roy.sol\":14308:14458  bool successAdmin = usdtToken.transfer(... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":14484:14496  successAdmin */\n      dup1\n        /* \"contracts/roy.sol\":14476:14526  require(successAdmin, \"Admin fee transfer failed\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_348\n      jump\t// in\n    tag_346:\n        /* \"contracts/roy.sol\":14558:14569  userAddress */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14550:14604  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      and\n      0x9cdcf2f7714cca3508c7f0110b04a90a80a3a8dd0e35de99689db74d28c5383e\n        /* \"contracts/roy.sol\":14571:14577  stakes */\n      dup10\n        /* \"contracts/roy.sol\":14578:14579  i */\n      dup9\n        /* \"contracts/roy.sol\":14571:14580  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_349\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_349:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":14571:14588  stakes[i].stakeId */\n      sload\n        /* \"contracts/roy.sol\":14550:14604  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      mload(0x40)\n      tag_351\n      swap3\n        /* \"contracts/roy.sol\":14590:14600  userAmount */\n      dup9\n      swap2\n        /* \"contracts/roy.sol\":14550:14604  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/roy.sol\":14631:14635  true */\n      0x01\n        /* \"contracts/roy.sol\":14623:14635  found = true */\n      swap7\n      pop\n        /* \"contracts/roy.sol\":14653:14658  break */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_197)\n        /* \"contracts/roy.sol\":13394:14673  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n    tag_311:\n        /* \"contracts/roy.sol\":13375:13378  i++ */\n      dup1\n      tag_353\n      dup2\n      tag_190\n      jump\t// in\n    tag_353:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":13336:14683  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_303)\n        /* \"contracts/roy.sol\":10614:10734  function getContractBalance() external view returns (uint256) {... */\n    tag_91:\n        /* \"contracts/roy.sol\":10693:10702  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":10693:10727  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10667:10674  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10693:10702  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":10693:10712  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":10693:10727  usdtToken.balanceOf(address(this)) */\n      tag_357\n      swap1\n        /* \"contracts/roy.sol\":10721:10725  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":10693:10727  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_357:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_358:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_361\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_361:\n        /* \"contracts/roy.sol\":10686:10727  return usdtToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":10614:10734  function getContractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/roy.sol\":14758:16132  function getStakeByPositionId(uint256 _positionId)... */\n    tag_95:\n        /* \"contracts/roy.sol\":14869:14881  address user */\n      0x00\n        /* \"contracts/roy.sol\":15128:15157  positionIdToUser[_positionId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":15128:15144  positionIdToUser */\n      0x05\n        /* \"contracts/roy.sol\":15128:15157  positionIdToUser[_positionId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":14869:14881  address user */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":15128:15157  positionIdToUser[_positionId] */\n      and\n        /* \"contracts/roy.sol\":15175:15197  userAddr != address(0) */\n      dup1\n        /* \"contracts/roy.sol\":15167:15220  require(userAddr != address(0), \"Invalid positionId\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_365\n      jump\t// in\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":15255:15270  users[userAddr] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":15231:15252  Stake[] memory stakes */\n      0x00\n        /* \"contracts/roy.sol\":15255:15270  users[userAddr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":15255:15260  users */\n      0x03\n        /* \"contracts/roy.sol\":15255:15270  users[userAddr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/roy.sol\":15255:15277  users[userAddr].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":15231:15277  Stake[] memory stakes = users[userAddr].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n      swap2\n      swap3\n        /* \"contracts/roy.sol\":15255:15277  users[userAddr].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":15231:15277  Stake[] memory stakes = users[userAddr].stakes */\n      swap1\n        /* \"contracts/roy.sol\":15231:15252  Stake[] memory stakes */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":15231:15277  Stake[] memory stakes = users[userAddr].stakes */\n      dup5\n      add\n    tag_366:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_366)\n    tag_367:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15292:15301  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":15287:16090  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_369:\n        /* \"contracts/roy.sol\":15311:15317  stakes */\n      dup2\n        /* \"contracts/roy.sol\":15311:15324  stakes.length */\n      mload\n        /* \"contracts/roy.sol\":15307:15308  i */\n      dup2\n        /* \"contracts/roy.sol\":15307:15324  i < stakes.length */\n      lt\n        /* \"contracts/roy.sol\":15287:16090  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"contracts/roy.sol\":15373:15384  _positionId */\n      dup12\n        /* \"contracts/roy.sol\":15349:15355  stakes */\n      dup3\n        /* \"contracts/roy.sol\":15356:15357  i */\n      dup3\n        /* \"contracts/roy.sol\":15349:15358  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_372:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":15349:15369  stakes[i].positionId */\n      0x20\n      add\n      mload\n        /* \"contracts/roy.sol\":15349:15384  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":15345:16080  if (stakes[i].positionId == _positionId) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"contracts/roy.sol\":15404:15418  Stake memory s */\n      0x00\n        /* \"contracts/roy.sol\":15421:15427  stakes */\n      dup3\n        /* \"contracts/roy.sol\":15428:15429  i */\n      dup3\n        /* \"contracts/roy.sol\":15421:15430  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_374\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_374:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":15404:15430  Stake memory s = stakes[i] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15449:15464  uint256 apyRate */\n      0x00\n        /* \"contracts/roy.sol\":15467:15477  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":15467:15488  stakingAPY[s.numDays] */\n      0x00\n        /* \"contracts/roy.sol\":15478:15479  s */\n      dup4\n        /* \"contracts/roy.sol\":15478:15487  s.numDays */\n      0x80\n      add\n      mload\n        /* \"contracts/roy.sol\":15467:15488  stakingAPY[s.numDays] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":15449:15488  uint256 apyRate = stakingAPY[s.numDays] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15506:15517  uint256 end */\n      0x00\n        /* \"contracts/roy.sol\":15535:15536  s */\n      dup3\n        /* \"contracts/roy.sol\":15535:15544  s.numDays */\n      0x80\n      add\n      mload\n        /* \"contracts/roy.sol\":15547:15553  1 days */\n      0x015180\n        /* \"contracts/roy.sol\":15535:15553  s.numDays * 1 days */\n      tag_375\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_375:\n        /* \"contracts/roy.sol\":15520:15521  s */\n      dup4\n        /* \"contracts/roy.sol\":15520:15531  s.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":15520:15554  s.timestamp + (s.numDays * 1 days) */\n      tag_376\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_376:\n        /* \"contracts/roy.sol\":15506:15554  uint256 end = s.timestamp + (s.numDays * 1 days) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15572:15585  bool isActive */\n      0x00\n        /* \"contracts/roy.sol\":15589:15590  s */\n      dup4\n        /* \"contracts/roy.sol\":15589:15598  s.claimed */\n      0xa0\n      add\n      mload\n        /* \"contracts/roy.sol\":15588:15598  !s.claimed */\n      iszero\n        /* \"contracts/roy.sol\":15588:15623  !s.claimed && block.timestamp < end */\n      dup1\n      iszero\n      tag_377\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":15620:15623  end */\n      dup2\n        /* \"contracts/roy.sol\":15602:15617  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":15602:15623  block.timestamp < end */\n      lt\n        /* \"contracts/roy.sol\":15588:15623  !s.claimed && block.timestamp < end */\n    tag_377:\n        /* \"contracts/roy.sol\":15572:15623  bool isActive = !s.claimed && block.timestamp < end */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15722:15743  uint256 dailyInterest */\n      0x00\n        /* \"contracts/roy.sol\":15775:15778  365 */\n      0x016d\n        /* \"contracts/roy.sol\":15769:15772  100 */\n      0x64\n        /* \"contracts/roy.sol\":15758:15765  apyRate */\n      dup6\n        /* \"contracts/roy.sol\":15747:15748  s */\n      dup8\n        /* \"contracts/roy.sol\":15747:15755  s.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":15747:15765  s.amount * apyRate */\n      tag_378\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_378:\n        /* \"contracts/roy.sol\":15746:15772  (s.amount * apyRate) / 100 */\n      tag_379\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_379:\n        /* \"contracts/roy.sol\":15746:15778  (s.amount * apyRate) / 100 / 365 */\n      tag_380\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_380:\n        /* \"contracts/roy.sol\":15722:15778  uint256 dailyInterest = (s.amount * apyRate) / 100 / 365 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":15826:15834  userAddr */\n      dup8\n        /* \"contracts/roy.sol\":15856:15857  s */\n      dup6\n        /* \"contracts/roy.sol\":15856:15865  s.stakeId */\n      0x00\n      add\n      mload\n        /* \"contracts/roy.sol\":15887:15888  s */\n      dup7\n        /* \"contracts/roy.sol\":15887:15895  s.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":15917:15918  s */\n      dup8\n        /* \"contracts/roy.sol\":15917:15928  s.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":15950:15953  end */\n      dup7\n        /* \"contracts/roy.sol\":15975:15982  apyRate */\n      dup9\n        /* \"contracts/roy.sol\":16004:16017  dailyInterest */\n      dup7\n        /* \"contracts/roy.sol\":16039:16047  isActive */\n      dup9\n        /* \"contracts/roy.sol\":15797:16065  return (... */\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_362)\n        /* \"contracts/roy.sol\":15345:16080  if (stakes[i].positionId == _positionId) {... */\n    tag_373:\n        /* \"contracts/roy.sol\":15326:15329  i++ */\n      dup1\n      tag_381\n      dup2\n      tag_190\n      jump\t// in\n    tag_381:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":15287:16090  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_369)\n    tag_370:\n      pop\n        /* \"contracts/roy.sol\":16100:16125  revert(\"Stake not found\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_383\n      jump\t// in\n        /* \"contracts/roy.sol\":14758:16132  function getStakeByPositionId(uint256 _positionId)... */\n    tag_362:\n      swap2\n      swap4\n      swap6\n      swap8\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      jump\t// out\n        /* \"contracts/roy.sol\":6774:10609  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n    tag_100:\n        /* \"contracts/roy.sol\":2076:2086  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2070:2075  users */\n      0x03\n        /* \"contracts/roy.sol\":2070:2087  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2070:2098  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2062:2117  require(users[msg.sender].registered, \"Not registered\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_385:\n        /* \"contracts/roy.sol\":6873:6874  0 */\n      0x00\n        /* \"contracts/roy.sol\":6864:6870  amount */\n      dup2\n        /* \"contracts/roy.sol\":6864:6874  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":6856:6914  require(amount > 0, \"Stake amount must be greater than 0\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_390\n      jump\t// in\n    tag_388:\n        /* \"contracts/roy.sol\":6954:6955  0 */\n      0x00\n        /* \"contracts/roy.sol\":6932:6951  stakingAPY[numDays] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6932:6942  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":6932:6951  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":6924:6984  require(stakingAPY[numDays] > 0, \"Invalid staking duration\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_393\n      jump\t// in\n    tag_391:\n        /* \"contracts/roy.sol\":7020:7030  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":6995:7011  address referrer */\n      0x00\n        /* \"contracts/roy.sol\":7014:7031  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":7014:7019  users */\n      0x03\n        /* \"contracts/roy.sol\":7014:7031  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":7014:7040  users[msg.sender].referrer */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":7055:7077  referrer != address(0) */\n      dup1\n      iszero\n        /* \"contracts/roy.sol\":7051:7190  if (referrer != address(0)) {... */\n      tag_395\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7101:7116  users[referrer] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":7133:7134  0 */\n      0x00\n        /* \"contracts/roy.sol\":7101:7116  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":7101:7106  users */\n      0x03\n        /* \"contracts/roy.sol\":7101:7116  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":7101:7123  users[referrer].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":7101:7130  users[referrer].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":7093:7179  require(users[referrer].stakes.length > 0, \"Referrer must stake before you can stake\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_397\n      jump\t// in\n    tag_395:\n        /* \"contracts/roy.sol\":7215:7224  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":7215:7272  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":7200:7212  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7215:7224  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":7215:7237  usdtToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/roy.sol\":7215:7272  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      tag_398\n      swap1\n        /* \"contracts/roy.sol\":7238:7248  msg.sender */\n      caller\n      swap1\n        /* \"contracts/roy.sol\":7258:7262  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":7265:7271  amount */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":7215:7272  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      add\n      tag_399\n      jump\t// in\n    tag_398:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_400\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_400:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_402:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_403\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_403:\n        /* \"contracts/roy.sol\":7200:7272  bool success = usdtToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":7290:7297  success */\n      dup1\n        /* \"contracts/roy.sol\":7282:7322  require(success, \"USDT transfer failed\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_249\n      jump\t// in\n    tag_404:\n        /* \"contracts/roy.sol\":7333:7351  uint256 positionId */\n      0x00\n        /* \"contracts/roy.sol\":7356:7368  stakeCounter */\n      0x01\n      0x00\n        /* \"contracts/roy.sol\":7354:7368  ++stakeCounter */\n      dup2\n      sload\n      tag_406\n      swap1\n      tag_190\n      jump\t// in\n    tag_406:\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/roy.sol\":7333:7368  uint256 positionId = ++stakeCounter */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":7379:7384  users */\n      0x03\n        /* \"contracts/roy.sol\":7379:7396  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":7385:7395  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7379:7396  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":7379:7403  users[msg.sender].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/roy.sol\":7455:7467  stakeCounter */\n      sload(0x01)\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":7497:7507  positionId */\n      dup4\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":7533:7539  amount */\n      dup7\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":7568:7583  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":7610:7617  numDays */\n      dup8\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":7644:7649  false */\n      0x00\n        /* \"contracts/roy.sol\":7422:7664  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/roy.sol\":7379:7674  users[msg.sender].stakes.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":7716:7726  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":7685:7701  positionIdToUser */\n      0x05\n        /* \"contracts/roy.sol\":7685:7713  positionIdToUser[positionId] */\n      0x00\n        /* \"contracts/roy.sol\":7702:7712  positionId */\n      dup4\n        /* \"contracts/roy.sol\":7685:7713  positionIdToUser[positionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/roy.sol\":7685:7726  positionIdToUser[positionId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/roy.sol\":7737:7754  bool isFirstStake */\n      0x00\n        /* \"contracts/roy.sol\":7757:7762  users */\n      0x03\n        /* \"contracts/roy.sol\":7757:7774  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":7763:7773  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7757:7774  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":7757:7781  users[msg.sender].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":7757:7788  users[msg.sender].stakes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/roy.sol\":7792:7793  1 */\n      0x01\n        /* \"contracts/roy.sol\":7757:7793  users[msg.sender].stakes.length == 1 */\n      eq\n        /* \"contracts/roy.sol\":7737:7793  bool isFirstStake = users[msg.sender].stakes.length == 1 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":7804:7818  address upline */\n      0x00\n        /* \"contracts/roy.sol\":7821:7826  users */\n      0x03\n        /* \"contracts/roy.sol\":7821:7838  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":7827:7837  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7821:7838  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":7821:7847  users[msg.sender].referrer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":7804:7847  address upline = users[msg.sender].referrer */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":7863:7870  uint8 i */\n      0x00\n        /* \"contracts/roy.sol\":7858:10603  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n    tag_408:\n        /* \"contracts/roy.sol\":7880:7899  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":7876:7877  i */\n      dup2\n        /* \"contracts/roy.sol\":7876:7899  i < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":7876:7923  i < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_411\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7903:7923  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":7876:7923  i < levelRewards.length && upline != address(0) */\n    tag_411:\n        /* \"contracts/roy.sol\":7858:10603  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"contracts/roy.sol\":7944:7958  uint256 reward */\n      0x00\n        /* \"contracts/roy.sol\":7981:7987  i == 0 */\n      0xff\n      dup3\n      and\n        /* \"contracts/roy.sol\":7977:10108  if (i == 0) {... */\n      tag_412\n      jumpi\n        /* \"contracts/roy.sol\":8011:8023  isFirstStake */\n      dup4\n        /* \"contracts/roy.sol\":8007:9628  if (isFirstStake) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"contracts/roy.sol\":8093:8113  uint256 directReward */\n      0x00\n        /* \"contracts/roy.sol\":8131:8134  100 */\n      0x64\n        /* \"contracts/roy.sol\":8117:8127  amount * 5 */\n      tag_414\n        /* \"contracts/roy.sol\":8117:8123  amount */\n      dup11\n        /* \"contracts/roy.sol\":8126:8127  5 */\n      0x05\n        /* \"contracts/roy.sol\":8117:8127  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_414:\n        /* \"contracts/roy.sol\":8116:8134  (amount * 5) / 100 */\n      tag_415\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_415:\n        /* \"contracts/roy.sol\":8093:8134  uint256 directReward = (amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":8156:8176  uint256 level1Reward */\n      0x00\n        /* \"contracts/roy.sol\":8194:8197  100 */\n      0x64\n        /* \"contracts/roy.sol\":8180:8190  amount * 5 */\n      tag_416\n        /* \"contracts/roy.sol\":8180:8186  amount */\n      dup12\n        /* \"contracts/roy.sol\":8189:8190  5 */\n      0x05\n        /* \"contracts/roy.sol\":8180:8190  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_416:\n        /* \"contracts/roy.sol\":8179:8197  (amount * 5) / 100 */\n      tag_417\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_417:\n        /* \"contracts/roy.sol\":8228:8237  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":8228:8262  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8156:8197  uint256 level1Reward = (amount * 5) / 100 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/roy.sol\":8266:8278  directReward */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8228:8237  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":8228:8247  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":8228:8262  usdtToken.balanceOf(address(this)) */\n      tag_418\n      swap1\n        /* \"contracts/roy.sol\":8256:8260  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":8228:8262  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_418:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_419\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_419:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_421:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_422:\n        /* \"contracts/roy.sol\":8228:8278  usdtToken.balanceOf(address(this)) >= directReward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":8220:8323  require(usdtToken.balanceOf(address(this)) >= directReward, \"Insufficient contract balance for direct\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_425\n      jump\t// in\n    tag_423:\n        /* \"contracts/roy.sol\":8366:8375  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":8366:8406  usdtToken.transfer(upline, directReward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8345:8363  bool directSuccess */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8366:8375  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":8366:8384  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":8366:8406  usdtToken.transfer(upline, directReward) */\n      tag_426\n      swap1\n        /* \"contracts/roy.sol\":8385:8391  upline */\n      dup10\n      swap1\n        /* \"contracts/roy.sol\":8393:8405  directReward */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":8366:8406  usdtToken.transfer(upline, directReward) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_426:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_427\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_427:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_429\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_429:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_430\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_430:\n        /* \"contracts/roy.sol\":8345:8406  bool directSuccess = usdtToken.transfer(upline, directReward) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":8436:8449  directSuccess */\n      dup1\n        /* \"contracts/roy.sol\":8428:8485  require(directSuccess, \"Direct referral transfer failed\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_433\n      jump\t// in\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8508:8536  directReferralIncome[upline] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8508:8528  directReferralIncome */\n      0x07\n        /* \"contracts/roy.sol\":8508:8536  directReferralIncome[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":8508:8552  directReferralIncome[upline] += directReward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":8540:8552  directReward */\n      dup6\n      swap3\n        /* \"contracts/roy.sol\":8508:8536  directReferralIncome[upline] */\n      swap1\n        /* \"contracts/roy.sol\":8508:8552  directReferralIncome[upline] += directReward */\n      tag_434\n      swap1\n        /* \"contracts/roy.sol\":8540:8552  directReward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":8508:8552  directReferralIncome[upline] += directReward */\n      tag_212\n      jump\t// in\n    tag_434:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8574:8587  users[upline] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8574:8579  users */\n      0x03\n        /* \"contracts/roy.sol\":8574:8587  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":8574:8599  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":8574:8615  users[upline].totalIncome += directReward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":8603:8615  directReward */\n      dup6\n      swap3\n        /* \"contracts/roy.sol\":8574:8587  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":8574:8615  users[upline].totalIncome += directReward */\n      tag_435\n      swap1\n        /* \"contracts/roy.sol\":8603:8615  directReward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":8574:8615  users[upline].totalIncome += directReward */\n      tag_212\n      jump\t// in\n    tag_435:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":8646:8655  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":8646:8680  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8684:8696  level1Reward */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8646:8655  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":8646:8665  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":8646:8680  usdtToken.balanceOf(address(this)) */\n      tag_436\n      swap1\n        /* \"contracts/roy.sol\":8674:8678  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":8646:8680  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_436:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_437:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_439:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_440\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_440:\n        /* \"contracts/roy.sol\":8646:8696  usdtToken.balanceOf(address(this)) >= level1Reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":8638:8742  require(usdtToken.balanceOf(address(this)) >= level1Reward, \"Insufficient contract balance for level 1\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_443\n      jump\t// in\n    tag_441:\n        /* \"contracts/roy.sol\":8785:8794  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":8785:8825  usdtToken.transfer(upline, level1Reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8764:8782  bool level1Success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8785:8794  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":8785:8803  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":8785:8825  usdtToken.transfer(upline, level1Reward) */\n      tag_444\n      swap1\n        /* \"contracts/roy.sol\":8804:8810  upline */\n      dup11\n      swap1\n        /* \"contracts/roy.sol\":8812:8824  level1Reward */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":8785:8825  usdtToken.transfer(upline, level1Reward) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_444:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_445\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_445:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_447\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_447:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_448\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_448:\n        /* \"contracts/roy.sol\":8764:8825  bool level1Success = usdtToken.transfer(upline, level1Reward) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":8855:8868  level1Success */\n      dup1\n        /* \"contracts/roy.sol\":8847:8903  require(level1Success, \"Level 1 reward transfer failed\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_451\n      jump\t// in\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8926:8939  users[upline] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8926:8931  users */\n      0x03\n        /* \"contracts/roy.sol\":8926:8939  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":8926:8951  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":8926:8967  users[upline].totalIncome += level1Reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":8955:8967  level1Reward */\n      dup6\n      swap3\n        /* \"contracts/roy.sol\":8926:8939  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":8926:8967  users[upline].totalIncome += level1Reward */\n      tag_452\n      swap1\n        /* \"contracts/roy.sol\":8955:8967  level1Reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":8926:8967  users[upline].totalIncome += level1Reward */\n      tag_212\n      jump\t// in\n    tag_452:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":8989:9002  users[upline] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8989:8994  users */\n      0x03\n        /* \"contracts/roy.sol\":8989:9002  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":8989:9014  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":8989:9030  users[upline].levelIncome += level1Reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":9018:9030  level1Reward */\n      dup6\n      swap3\n        /* \"contracts/roy.sol\":8989:9002  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":8989:9030  users[upline].levelIncome += level1Reward */\n      tag_453\n      swap1\n        /* \"contracts/roy.sol\":9018:9030  level1Reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":8989:9030  users[upline].levelIncome += level1Reward */\n      tag_212\n      jump\t// in\n    tag_453:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/roy.sol\":9062:9074  level1Reward */\n      swap3\n      swap5\n      pop\n        /* \"contracts/roy.sol\":8007:9628  if (isFirstStake) {... */\n      tag_454\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_413:\n        /* \"contracts/roy.sol\":9227:9230  100 */\n      0x64\n        /* \"contracts/roy.sol\":9208:9220  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":9221:9222  i */\n      dup4\n        /* \"contracts/roy.sol\":9208:9223  levelRewards[i] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_455\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_455:\n      0x20\n      dup2\n      div\n      swap2\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/roy.sol\":9199:9223  amount * levelRewards[i] */\n      tag_457\n      swap2\n        /* \"contracts/roy.sol\":9208:9223  levelRewards[i] */\n      0x1f\n      and\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":9199:9205  amount */\n      dup11\n        /* \"contracts/roy.sol\":9199:9223  amount * levelRewards[i] */\n      tag_208\n      jump\t// in\n    tag_457:\n        /* \"contracts/roy.sol\":9198:9230  (amount * levelRewards[i]) / 100 */\n      tag_458\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_458:\n        /* \"contracts/roy.sol\":9261:9270  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":9261:9295  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9189:9230  reward = (amount * levelRewards[i]) / 100 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9261:9270  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":9261:9280  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":9261:9295  usdtToken.balanceOf(address(this)) */\n      tag_459\n      swap1\n        /* \"contracts/roy.sol\":9289:9293  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":9261:9295  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_459:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_460\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_460:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_462\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_462:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_463\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_463:\n        /* \"contracts/roy.sol\":9261:9305  usdtToken.balanceOf(address(this)) >= reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":9253:9339  require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\") */\n      tag_464\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_237\n      jump\t// in\n    tag_464:\n        /* \"contracts/roy.sol\":9382:9391  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":9382:9416  usdtToken.transfer(upline, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9361:9379  bool level1Success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9382:9391  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":9382:9400  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":9382:9416  usdtToken.transfer(upline, reward) */\n      tag_466\n      swap1\n        /* \"contracts/roy.sol\":9401:9407  upline */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":9409:9415  reward */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":9382:9416  usdtToken.transfer(upline, reward) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_466:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_467\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_467:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_469\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_469:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_470\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_470:\n        /* \"contracts/roy.sol\":9361:9416  bool level1Success = usdtToken.transfer(upline, reward) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":9446:9459  level1Success */\n      dup1\n        /* \"contracts/roy.sol\":9438:9494  require(level1Success, \"Level 1 reward transfer failed\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_451\n      jump\t// in\n    tag_471:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9517:9530  users[upline] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9517:9522  users */\n      0x03\n        /* \"contracts/roy.sol\":9517:9530  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":9517:9542  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":9517:9552  users[upline].totalIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":9546:9552  reward */\n      dup5\n      swap3\n        /* \"contracts/roy.sol\":9517:9530  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":9517:9552  users[upline].totalIncome += reward */\n      tag_473\n      swap1\n        /* \"contracts/roy.sol\":9546:9552  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":9517:9552  users[upline].totalIncome += reward */\n      tag_212\n      jump\t// in\n    tag_473:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9574:9587  users[upline] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9574:9579  users */\n      0x03\n        /* \"contracts/roy.sol\":9574:9587  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":9574:9599  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":9574:9609  users[upline].levelIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":9603:9609  reward */\n      dup5\n      swap3\n        /* \"contracts/roy.sol\":9574:9587  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":9574:9609  users[upline].levelIncome += reward */\n      tag_474\n      swap1\n        /* \"contracts/roy.sol\":9603:9609  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":9574:9609  users[upline].levelIncome += reward */\n      tag_212\n      jump\t// in\n    tag_474:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":8007:9628  if (isFirstStake) {... */\n    tag_454:\n        /* \"contracts/roy.sol\":7977:10108  if (i == 0) {... */\n      jump(tag_475)\n    tag_412:\n        /* \"contracts/roy.sol\":9735:9738  100 */\n      0x64\n        /* \"contracts/roy.sol\":9716:9728  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":9729:9730  i */\n      dup4\n        /* \"contracts/roy.sol\":9716:9731  levelRewards[i] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_476\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_476:\n      0x20\n      dup2\n      div\n      swap2\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/roy.sol\":9707:9731  amount * levelRewards[i] */\n      tag_478\n      swap2\n        /* \"contracts/roy.sol\":9716:9731  levelRewards[i] */\n      0x1f\n      and\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":9707:9713  amount */\n      dup11\n        /* \"contracts/roy.sol\":9707:9731  amount * levelRewards[i] */\n      tag_208\n      jump\t// in\n    tag_478:\n        /* \"contracts/roy.sol\":9706:9738  (amount * levelRewards[i]) / 100 */\n      tag_479\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_479:\n        /* \"contracts/roy.sol\":9765:9774  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":9765:9799  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9697:9738  reward = (amount * levelRewards[i]) / 100 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9765:9774  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":9765:9784  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":9765:9799  usdtToken.balanceOf(address(this)) */\n      tag_480\n      swap1\n        /* \"contracts/roy.sol\":9793:9797  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":9765:9799  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_480:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_481\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_481:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_483\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_483:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_484\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_484:\n        /* \"contracts/roy.sol\":9765:9809  usdtToken.balanceOf(address(this)) >= reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":9757:9843  require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_237\n      jump\t// in\n    tag_485:\n        /* \"contracts/roy.sol\":9881:9890  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":9881:9915  usdtToken.transfer(upline, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9861:9878  bool levelSuccess */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":9881:9890  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":9881:9899  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":9881:9915  usdtToken.transfer(upline, reward) */\n      tag_487\n      swap1\n        /* \"contracts/roy.sol\":9900:9906  upline */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":9908:9914  reward */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":9881:9915  usdtToken.transfer(upline, reward) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_487:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_488\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_488:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_490\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_490:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_491\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_491:\n        /* \"contracts/roy.sol\":9861:9915  bool levelSuccess = usdtToken.transfer(upline, reward) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":9941:9953  levelSuccess */\n      dup1\n        /* \"contracts/roy.sol\":9933:9986  require(levelSuccess, \"Level reward transfer failed\") */\n      tag_492\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_494\n      jump\t// in\n    tag_492:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10005:10018  users[upline] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10005:10010  users */\n      0x03\n        /* \"contracts/roy.sol\":10005:10018  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":10005:10030  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":10005:10040  users[upline].totalIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":10034:10040  reward */\n      dup5\n      swap3\n        /* \"contracts/roy.sol\":10005:10018  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":10005:10040  users[upline].totalIncome += reward */\n      tag_495\n      swap1\n        /* \"contracts/roy.sol\":10034:10040  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":10005:10040  users[upline].totalIncome += reward */\n      tag_212\n      jump\t// in\n    tag_495:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10058:10071  users[upline] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10058:10063  users */\n      0x03\n        /* \"contracts/roy.sol\":10058:10071  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":10058:10083  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":10058:10093  users[upline].levelIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":10087:10093  reward */\n      dup5\n      swap3\n        /* \"contracts/roy.sol\":10058:10071  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":10058:10093  users[upline].levelIncome += reward */\n      tag_496\n      swap1\n        /* \"contracts/roy.sol\":10087:10093  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":10058:10093  users[upline].levelIncome += reward */\n      tag_212\n      jump\t// in\n    tag_496:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":7977:10108  if (i == 0) {... */\n    tag_475:\n        /* \"contracts/roy.sol\":10201:10207  i == 0 */\n      0xff\n      dup3\n      and\n        /* \"contracts/roy.sol\":10197:10547  if (i == 0) {... */\n      tag_497\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10257:10280  directReferrals[upline] */\n      dup4\n      and\n        /* \"contracts/roy.sol\":10227:10254  ReferralInfo[] storage refs */\n      0x00\n        /* \"contracts/roy.sol\":10257:10280  directReferrals[upline] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10257:10272  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":10257:10280  directReferrals[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":10298:10533  for (uint256 j = 0; j < refs.length; j++) {... */\n    tag_498:\n        /* \"contracts/roy.sol\":10322:10333  refs.length */\n      dup2\n      sload\n        /* \"contracts/roy.sol\":10318:10333  j < refs.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":10298:10533  for (uint256 j = 0; j < refs.length; j++) {... */\n      iszero\n      tag_499\n      jumpi\n        /* \"contracts/roy.sol\":10393:10403  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10366:10403  refs[j].referralAddress == msg.sender */\n      and\n        /* \"contracts/roy.sol\":10366:10370  refs */\n      dup3\n        /* \"contracts/roy.sol\":10371:10372  j */\n      dup3\n        /* \"contracts/roy.sol\":10366:10373  refs[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_501\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_501:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":10366:10389  refs[j].referralAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":10366:10403  refs[j].referralAddress == msg.sender */\n      eq\n        /* \"contracts/roy.sol\":10362:10515  if (refs[j].referralAddress == msg.sender) {... */\n      iszero\n      tag_503\n      jumpi\n        /* \"contracts/roy.sol\":10455:10461  reward */\n      dup3\n        /* \"contracts/roy.sol\":10431:10435  refs */\n      dup3\n        /* \"contracts/roy.sol\":10436:10437  j */\n      dup3\n        /* \"contracts/roy.sol\":10431:10438  refs[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_504\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_504:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":10431:10451  refs[j].incomeEarned */\n      0x01\n      add\n      0x00\n        /* \"contracts/roy.sol\":10431:10461  refs[j].incomeEarned += reward */\n      dup3\n      dup3\n      sload\n      tag_506\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_506:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/roy.sol\":10487:10492  break */\n      tag_499\n      swap1\n      pop\n      jump\n        /* \"contracts/roy.sol\":10362:10515  if (refs[j].referralAddress == msg.sender) {... */\n    tag_503:\n        /* \"contracts/roy.sol\":10335:10338  j++ */\n      dup1\n      tag_507\n      dup2\n      tag_190\n      jump\t// in\n    tag_507:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":10298:10533  for (uint256 j = 0; j < refs.length; j++) {... */\n      jump(tag_498)\n    tag_499:\n      pop\n        /* \"contracts/roy.sol\":10197:10547  if (i == 0) {... */\n      pop\n    tag_497:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10570:10583  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10570:10575  users */\n      0x03\n        /* \"contracts/roy.sol\":10570:10583  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":10570:10592  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":7925:7928  i++ */\n      dup1\n      tag_508\n      dup2\n      tag_509\n      jump\t// in\n    tag_508:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":7858:10603  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n      jump(tag_408)\n    tag_409:\n      pop\n        /* \"contracts/roy.sol\":2127:2128  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":6774:10609  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1700:1745  mapping(uint256 => uint256) public stakingAPY */\n    tag_103:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":424:444  address public owner */\n    tag_106:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":16498:16656  function getDirectReferralCount(address user)... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16621:16642  directReferrals[user] */\n      and\n        /* \"contracts/roy.sol\":16591:16598  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":16621:16642  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16621:16636  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":16621:16642  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":16621:16649  directReferrals[user].length */\n      sload\n      swap1\n        /* \"contracts/roy.sol\":16498:16656  function getDirectReferralCount(address user)... */\n      jump\t// out\n        /* \"contracts/roy.sol\":20564:20660  function getTotalUsers() external view returns (uint256) {... */\n    tag_113:\n        /* \"contracts/roy.sol\":20638:20646  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":20638:20653  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":20564:20660  function getTotalUsers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/roy.sol\":16950:17694  function getReferralIncomeDetails(address user)... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17226:17247  directReferrals[user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":17196:17223  ReferralInfo[] storage refs */\n      0x00\n        /* \"contracts/roy.sol\":17226:17247  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":17226:17241  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":17226:17247  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":17273:17284  refs.length */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":17058:17092  address[] memory referralAddresses */\n      0x60\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"contracts/roy.sol\":17226:17247  directReferrals[user] */\n      swap1\n        /* \"contracts/roy.sol\":17273:17284  refs.length */\n      dup1\n        /* \"contracts/roy.sol\":17315:17335  new address[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_513\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_513:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_514\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_514:\n      pop\n        /* \"contracts/roy.sol\":17295:17335  referralAddresses = new address[](count) */\n      swap5\n      pop\n        /* \"contracts/roy.sol\":17369:17374  count */\n      dup1\n        /* \"contracts/roy.sol\":17355:17375  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_515\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_515:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_516\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_516:\n      pop\n        /* \"contracts/roy.sol\":17345:17375  incomes = new uint256[](count) */\n      swap4\n      pop\n        /* \"contracts/roy.sol\":17412:17417  count */\n      dup1\n        /* \"contracts/roy.sol\":17398:17418  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_517\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_517:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_518\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_518:\n      pop\n        /* \"contracts/roy.sol\":17385:17418  timestamps = new uint256[](count) */\n      swap3\n      pop\n        /* \"contracts/roy.sol\":17434:17443  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":17429:17630  for (uint256 i = 0; i < count; i++) {... */\n    tag_519:\n        /* \"contracts/roy.sol\":17453:17458  count */\n      dup2\n        /* \"contracts/roy.sol\":17449:17450  i */\n      dup2\n        /* \"contracts/roy.sol\":17449:17458  i < count */\n      lt\n        /* \"contracts/roy.sol\":17429:17630  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_520\n      jumpi\n        /* \"contracts/roy.sol\":17502:17506  refs */\n      dup3\n        /* \"contracts/roy.sol\":17507:17508  i */\n      dup2\n        /* \"contracts/roy.sol\":17502:17509  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_522\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_522:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":17502:17525  refs[i].referralAddress */\n      sload\n        /* \"contracts/roy.sol\":17479:17499  referralAddresses[i] */\n      dup7\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17502:17525  refs[i].referralAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":17479:17496  referralAddresses */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":17497:17498  i */\n      dup4\n      swap1\n        /* \"contracts/roy.sol\":17479:17499  referralAddresses[i] */\n      dup2\n      lt\n      tag_524\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_524:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":17479:17525  referralAddresses[i] = refs[i].referralAddress */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":17552:17556  refs */\n      dup3\n        /* \"contracts/roy.sol\":17557:17558  i */\n      dup2\n        /* \"contracts/roy.sol\":17552:17559  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_525\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_525:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":17552:17572  refs[i].incomeEarned */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":17539:17546  incomes */\n      dup6\n        /* \"contracts/roy.sol\":17547:17548  i */\n      dup3\n        /* \"contracts/roy.sol\":17539:17549  incomes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_527\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_527:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":17539:17572  incomes[i] = refs[i].incomeEarned */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":17602:17606  refs */\n      dup3\n        /* \"contracts/roy.sol\":17607:17608  i */\n      dup2\n        /* \"contracts/roy.sol\":17602:17609  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_528\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_528:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":17602:17619  refs[i].timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":17586:17596  timestamps */\n      dup5\n        /* \"contracts/roy.sol\":17597:17598  i */\n      dup3\n        /* \"contracts/roy.sol\":17586:17599  timestamps[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_530\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_530:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/roy.sol\":17586:17619  timestamps[i] = refs[i].timestamp */\n      mstore\n        /* \"contracts/roy.sol\":17460:17463  i++ */\n      dup1\n      tag_531\n      dup2\n      tag_190\n      jump\t// in\n    tag_531:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17429:17630  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_519)\n    tag_520:\n      pop\n        /* \"contracts/roy.sol\":17640:17687  return (referralAddresses, incomes, timestamps) */\n      pop\n      pop\n        /* \"contracts/roy.sol\":16950:17694  function getReferralIncomeDetails(address user)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1813:1838  address[] public allUsers */\n    tag_122:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_532\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_532:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":1537:1574  mapping(address => User) public users */\n    tag_126:\n      0x03\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x04\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup5\n      jump\t// out\n        /* \"contracts/roy.sol\":483:506  IERC20 public usdtToken */\n    tag_130:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":16662:16819  function getDirectReferralIncome(address user)... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16786:16812  directReferralIncome[user] */\n      and\n        /* \"contracts/roy.sol\":16756:16763  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":16786:16812  directReferralIncome[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16786:16806  directReferralIncome */\n      0x07\n        /* \"contracts/roy.sol\":16786:16812  directReferralIncome[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/roy.sol\":16662:16819  function getDirectReferralIncome(address user)... */\n      jump\t// out\n        /* \"contracts/roy.sol\":10740:11215  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n    tag_139:\n        /* \"contracts/roy.sol\":10848:10864  uint256 interest */\n      0x00\n        /* \"contracts/roy.sol\":10866:10885  uint256 totalReturn */\n      dup1\n        /* \"contracts/roy.sol\":10918:10919  0 */\n      0x00\n        /* \"contracts/roy.sol\":10909:10915  amount */\n      dup5\n        /* \"contracts/roy.sol\":10909:10919  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":10901:10953  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_536\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_538\n      jump\t// in\n    tag_536:\n        /* \"contracts/roy.sol\":10993:10994  0 */\n      0x00\n        /* \"contracts/roy.sol\":10971:10990  stakingAPY[numDays] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10971:10981  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":10971:10990  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":10963:11023  require(stakingAPY[numDays] > 0, \"Invalid staking duration\") */\n      tag_539\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_393\n      jump\t// in\n    tag_539:\n        /* \"contracts/roy.sol\":11034:11045  uint256 apy */\n      0x00\n        /* \"contracts/roy.sol\":11048:11067  stakingAPY[numDays] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":11048:11058  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":11048:11067  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":11116:11125  100 * 365 */\n      0x8e94\n        /* \"contracts/roy.sol\":11059:11066  numDays */\n      dup5\n        /* \"contracts/roy.sol\":11089:11101  amount * apy */\n      tag_541\n        /* \"contracts/roy.sol\":11048:11067  stakingAPY[numDays] */\n      dup4\n        /* \"contracts/roy.sol\":11089:11095  amount */\n      dup9\n        /* \"contracts/roy.sol\":11089:11101  amount * apy */\n      tag_208\n      jump\t// in\n    tag_541:\n        /* \"contracts/roy.sol\":11089:11111  amount * apy * numDays */\n      tag_542\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_542:\n        /* \"contracts/roy.sol\":11088:11126  (amount * apy * numDays) / (100 * 365) */\n      tag_543\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_543:\n        /* \"contracts/roy.sol\":11077:11126  interest = (amount * apy * numDays) / (100 * 365) */\n      swap3\n      pop\n        /* \"contracts/roy.sol\":11150:11167  amount + interest */\n      tag_544\n        /* \"contracts/roy.sol\":11077:11126  interest = (amount * apy * numDays) / (100 * 365) */\n      dup4\n        /* \"contracts/roy.sol\":11150:11156  amount */\n      dup7\n        /* \"contracts/roy.sol\":11150:11167  amount + interest */\n      tag_212\n      jump\t// in\n    tag_544:\n        /* \"contracts/roy.sol\":11136:11167  totalReturn = amount + interest */\n      swap2\n      pop\n        /* \"contracts/roy.sol\":11178:11208  return (interest, totalReturn) */\n      pop\n        /* \"contracts/roy.sol\":10740:11215  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":17700:17817  function getTotalIncome(address user) external view returns (uint256) {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17787:17798  users[user] */\n      and\n        /* \"contracts/roy.sol\":17761:17768  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":17787:17798  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":17787:17792  users */\n      0x03\n        /* \"contracts/roy.sol\":17787:17798  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":17787:17810  users[user].totalIncome */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/roy.sol\":17700:17817  function getTotalIncome(address user) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":20447:20558  function isRegistered(address user) external view returns (bool) {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":20529:20540  users[user] */\n      and\n        /* \"contracts/roy.sol\":20506:20510  bool */\n      0x00\n        /* \"contracts/roy.sol\":20529:20540  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":20529:20534  users */\n      0x03\n        /* \"contracts/roy.sol\":20529:20540  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":20529:20551  users[user].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/roy.sol\":20447:20558  function isRegistered(address user) external view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":20666:20979  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_157:\n        /* \"contracts/roy.sol\":2194:2199  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2180:2190  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2180:2199  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2172:2228  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_549\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_287\n      jump\t// in\n    tag_549:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":20754:20770  to != address(0) */\n      dup3\n      and\n        /* \"contracts/roy.sol\":20746:20800  require(to != address(0), \"Invalid recipient address\") */\n      tag_552\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_554\n      jump\t// in\n    tag_552:\n        /* \"contracts/roy.sol\":20827:20828  0 */\n      0x00\n        /* \"contracts/roy.sol\":20818:20824  amount */\n      dup2\n        /* \"contracts/roy.sol\":20818:20828  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":20810:20865  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_555\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_557\n      jump\t// in\n    tag_555:\n        /* \"contracts/roy.sol\":20891:20900  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":20891:20921  usdtToken.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":20876:20888  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":20891:20900  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":20891:20909  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":20891:20921  usdtToken.transfer(to, amount) */\n      tag_558\n      swap1\n        /* \"contracts/roy.sol\":20910:20912  to */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":20914:20920  amount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":20891:20921  usdtToken.transfer(to, amount) */\n      0x04\n      add\n      tag_241\n      jump\t// in\n    tag_558:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_559\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_559:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_561\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_561:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_562\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_562:\n        /* \"contracts/roy.sol\":20876:20921  bool success = usdtToken.transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":20939:20946  success */\n      dup1\n        /* \"contracts/roy.sol\":20931:20972  require(success, \"Token transfer failed\") */\n      tag_563\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_565\n      jump\t// in\n    tag_563:\n        /* \"contracts/roy.sol\":2238:2239  _ */\n      pop\n        /* \"contracts/roy.sol\":20666:20979  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1844:1890  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n    tag_160:\n      0x09\n      dup2\n      0x05\n      dup2\n      lt\n      tag_566\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_566:\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":18205:20273  function getLevelIncomeDistribution(address _user)... */\n    tag_164:\n        /* \"contracts/roy.sol\":18303:18327  LevelIncomeData[] memory */\n      0x60\n        /* \"contracts/roy.sol\":18343:18361  uint256 totalCount */\n      0x00\n        /* \"contracts/roy.sol\":18381:18390  uint256 i */\n      dup1\n        /* \"contracts/roy.sol\":18376:18916  for (uint256 i = 0; i < allUsers.length; i++) {... */\n    tag_569:\n        /* \"contracts/roy.sol\":18400:18408  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":18400:18415  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":18396:18415  i < allUsers.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":18376:18916  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      iszero\n      tag_570\n      jumpi\n        /* \"contracts/roy.sol\":18436:18450  address staker */\n      0x00\n        /* \"contracts/roy.sol\":18453:18461  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":18462:18463  i */\n      dup3\n        /* \"contracts/roy.sol\":18453:18464  allUsers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_572\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_572:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":18502:18515  users[staker] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":18502:18507  users */\n      0x03\n        /* \"contracts/roy.sol\":18502:18515  users[staker] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":18453:18464  allUsers[i] */\n      0x01\n        /* \"contracts/roy.sol\":18502:18522  users[staker].stakes */\n      add\n        /* \"contracts/roy.sol\":18478:18522  Stake[] memory stakes = users[staker].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup7\n      mul\n      dup2\n      add\n      dup7\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":18453:18464  allUsers[i] */\n      swap3\n      swap6\n      pop\n        /* \"contracts/roy.sol\":18478:18522  Stake[] memory stakes = users[staker].stakes */\n      swap1\n      swap3\n        /* \"contracts/roy.sol\":18502:18522  users[staker].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":18478:18522  Stake[] memory stakes = users[staker].stakes */\n      swap1\n        /* \"contracts/roy.sol\":18453:18464  allUsers[i] */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":18478:18522  Stake[] memory stakes = users[staker].stakes */\n      dup5\n      add\n    tag_574:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_575\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_574)\n    tag_575:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18553:18566  users[staker] */\n      dup4\n      dup2\n      and\n        /* \"contracts/roy.sol\":18536:18550  address upline */\n      0x00\n        /* \"contracts/roy.sol\":18553:18566  users[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":18553:18558  users */\n      0x03\n        /* \"contracts/roy.sol\":18553:18566  users[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":18553:18575  users[staker].referrer */\n      sload\n        /* \"contracts/roy.sol\":18478:18522  Stake[] memory stakes = users[staker].stakes */\n      swap3\n      swap4\n      pop\n        /* \"contracts/roy.sol\":18553:18575  users[staker].referrer */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":18590:18906  for (... */\n    tag_577:\n        /* \"contracts/roy.sol\":18653:18672  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":18645:18650  level */\n      dup2\n        /* \"contracts/roy.sol\":18645:18672  level < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":18645:18696  level < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_580\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18676:18696  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":18645:18696  level < levelRewards.length && upline != address(0) */\n    tag_580:\n        /* \"contracts/roy.sol\":18590:18906  for (... */\n      iszero\n      tag_578\n      jumpi\n        /* \"contracts/roy.sol\":18768:18773  _user */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18758:18773  upline == _user */\n      and\n        /* \"contracts/roy.sol\":18758:18764  upline */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18758:18773  upline == _user */\n      and\n      eq\n        /* \"contracts/roy.sol\":18754:18843  if (upline == _user) {... */\n      iszero\n      tag_581\n      jumpi\n        /* \"contracts/roy.sol\":18811:18824  stakes.length */\n      dup3\n      mload\n        /* \"contracts/roy.sol\":18797:18824  totalCount += stakes.length */\n      tag_582\n      swap1\n      dup8\n      tag_212\n      jump\t// in\n    tag_582:\n      swap6\n      pop\n        /* \"contracts/roy.sol\":18754:18843  if (upline == _user) {... */\n    tag_581:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18869:18882  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":18869:18874  users */\n      0x03\n        /* \"contracts/roy.sol\":18869:18882  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":18869:18891  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":18714:18721  level++ */\n      dup1\n      tag_583\n      dup2\n      tag_509\n      jump\t// in\n    tag_583:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":18590:18906  for (... */\n      jump(tag_577)\n    tag_578:\n      pop\n        /* \"contracts/roy.sol\":18376:18916  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":18417:18420  i++ */\n      dup1\n      dup1\n      tag_584\n      swap1\n      tag_190\n      jump\t// in\n    tag_584:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":18376:18916  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      jump(tag_569)\n    tag_570:\n      pop\n        /* \"contracts/roy.sol\":18926:18961  LevelIncomeData[] memory incomeData */\n      0x00\n        /* \"contracts/roy.sol\":18986:18996  totalCount */\n      dup2\n        /* \"contracts/roy.sol\":18964:18997  new LevelIncomeData[](totalCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_585\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_585:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_586\n      jumpi\n      dup2\n      0x20\n      add\n    tag_587:\n      tag_588\n      tag_589\n      jump\t// in\n    tag_588:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_587\n      jumpi\n      swap1\n      pop\n    tag_586:\n      pop\n        /* \"contracts/roy.sol\":18926:18997  LevelIncomeData[] memory incomeData = new LevelIncomeData[](totalCount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":19007:19020  uint256 index */\n      0x00\n        /* \"contracts/roy.sol\":19040:19049  uint256 i */\n      dup1\n        /* \"contracts/roy.sol\":19035:20239  for (uint256 i = 0; i < allUsers.length; i++) {... */\n    tag_590:\n        /* \"contracts/roy.sol\":19059:19067  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":19059:19074  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":19055:19074  i < allUsers.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":19035:20239  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      iszero\n      tag_591\n      jumpi\n        /* \"contracts/roy.sol\":19095:19109  address staker */\n      0x00\n        /* \"contracts/roy.sol\":19112:19120  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":19121:19122  i */\n      dup3\n        /* \"contracts/roy.sol\":19112:19123  allUsers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_593\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_593:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":19161:19174  users[staker] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":19161:19166  users */\n      0x03\n        /* \"contracts/roy.sol\":19161:19174  users[staker] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":19112:19123  allUsers[i] */\n      0x01\n        /* \"contracts/roy.sol\":19161:19181  users[staker].stakes */\n      add\n        /* \"contracts/roy.sol\":19137:19181  Stake[] memory stakes = users[staker].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup7\n      mul\n      dup2\n      add\n      dup7\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":19112:19123  allUsers[i] */\n      swap3\n      swap6\n      pop\n        /* \"contracts/roy.sol\":19137:19181  Stake[] memory stakes = users[staker].stakes */\n      swap1\n      swap3\n        /* \"contracts/roy.sol\":19161:19181  users[staker].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":19137:19181  Stake[] memory stakes = users[staker].stakes */\n      swap1\n        /* \"contracts/roy.sol\":19112:19123  allUsers[i] */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":19137:19181  Stake[] memory stakes = users[staker].stakes */\n      dup5\n      add\n    tag_595:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_596\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_595)\n    tag_596:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19212:19225  users[staker] */\n      dup4\n      dup2\n      and\n        /* \"contracts/roy.sol\":19195:19209  address upline */\n      0x00\n        /* \"contracts/roy.sol\":19212:19225  users[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":19212:19217  users */\n      0x03\n        /* \"contracts/roy.sol\":19212:19225  users[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":19212:19234  users[staker].referrer */\n      sload\n        /* \"contracts/roy.sol\":19137:19181  Stake[] memory stakes = users[staker].stakes */\n      swap3\n      swap4\n      pop\n        /* \"contracts/roy.sol\":19212:19234  users[staker].referrer */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":19249:20229  for (... */\n    tag_598:\n        /* \"contracts/roy.sol\":19312:19331  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":19304:19309  level */\n      dup2\n        /* \"contracts/roy.sol\":19304:19331  level < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":19304:19355  level < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_601\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19335:19355  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":19304:19355  level < levelRewards.length && upline != address(0) */\n    tag_601:\n        /* \"contracts/roy.sol\":19249:20229  for (... */\n      iszero\n      tag_599\n      jumpi\n        /* \"contracts/roy.sol\":19427:19432  _user */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19417:19432  upline == _user */\n      and\n        /* \"contracts/roy.sol\":19417:19423  upline */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19417:19432  upline == _user */\n      and\n      eq\n        /* \"contracts/roy.sol\":19413:20166  if (upline == _user) {... */\n      iszero\n      tag_602\n      jumpi\n        /* \"contracts/roy.sol\":19461:19470  uint256 j */\n      0x00\n        /* \"contracts/roy.sol\":19456:20148  for (uint256 j = 0; j < stakes.length; j++) {... */\n    tag_603:\n        /* \"contracts/roy.sol\":19480:19486  stakes */\n      dup4\n        /* \"contracts/roy.sol\":19480:19493  stakes.length */\n      mload\n        /* \"contracts/roy.sol\":19476:19477  j */\n      dup2\n        /* \"contracts/roy.sol\":19476:19493  j < stakes.length */\n      lt\n        /* \"contracts/roy.sol\":19456:20148  for (uint256 j = 0; j < stakes.length; j++) {... */\n      iszero\n      tag_604\n      jumpi\n        /* \"contracts/roy.sol\":19526:19544  Stake memory stake */\n      0x00\n        /* \"contracts/roy.sol\":19547:19553  stakes */\n      dup5\n        /* \"contracts/roy.sol\":19554:19555  j */\n      dup3\n        /* \"contracts/roy.sol\":19547:19556  stakes[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_606\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_606:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":19526:19556  Stake memory stake = stakes[j] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":19582:19596  uint256 income */\n      0x00\n        /* \"contracts/roy.sol\":19666:19669  100 */\n      0x64\n        /* \"contracts/roy.sol\":19615:19627  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":19628:19633  level */\n      dup6\n        /* \"contracts/roy.sol\":19615:19634  levelRewards[level] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_607\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_607:\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":19600:19634  stake.amount * levelRewards[level] */\n      0xff\n      and\n        /* \"contracts/roy.sol\":19600:19605  stake */\n      dup4\n        /* \"contracts/roy.sol\":19600:19612  stake.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":19600:19634  stake.amount * levelRewards[level] */\n      tag_609\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_609:\n        /* \"contracts/roy.sol\":19599:19669  (stake.amount * levelRewards[level]) /... */\n      tag_610\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_610:\n        /* \"contracts/roy.sol\":19582:19669  uint256 income = (stake.amount * levelRewards[level]) /... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/roy.sol\":19781:19786  _user */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":19825:19830  stake */\n      dup4\n        /* \"contracts/roy.sol\":19825:19838  stake.stakeId */\n      0x00\n      add\n      mload\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":19881:19886  stake */\n      dup4\n        /* \"contracts/roy.sol\":19881:19893  stake.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":19939:19945  income */\n      dup3\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":19990:19996  staker */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":20037:20042  stake */\n      dup4\n        /* \"contracts/roy.sol\":20037:20052  stake.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":20089:20094  level */\n      dup6\n        /* \"contracts/roy.sol\":20097:20098  1 */\n      0x01\n        /* \"contracts/roy.sol\":20089:20098  level + 1 */\n      tag_611\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n    tag_611:\n        /* \"contracts/roy.sol\":19718:20125  LevelIncomeData({... */\n      0xff\n      and\n      swap1\n      mstore\n        /* \"contracts/roy.sol\":19696:19706  incomeData */\n      dup11\n        /* \"contracts/roy.sol\":19707:19714  index++ */\n      dup11\n      tag_613\n      dup2\n      tag_190\n      jump\t// in\n    tag_613:\n      swap12\n      pop\n        /* \"contracts/roy.sol\":19696:19715  incomeData[index++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_614\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_614:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":19696:20125  incomeData[index++] = LevelIncomeData({... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/roy.sol\":19456:20148  for (uint256 j = 0; j < stakes.length; j++) {... */\n      pop\n      pop\n        /* \"contracts/roy.sol\":19495:19498  j++ */\n      dup1\n      dup1\n      tag_615\n      swap1\n      tag_190\n      jump\t// in\n    tag_615:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":19456:20148  for (uint256 j = 0; j < stakes.length; j++) {... */\n      jump(tag_603)\n    tag_604:\n      pop\n        /* \"contracts/roy.sol\":19413:20166  if (upline == _user) {... */\n    tag_602:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":20192:20205  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":20192:20197  users */\n      0x03\n        /* \"contracts/roy.sol\":20192:20205  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":20192:20214  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":19373:19380  level++ */\n      dup1\n      tag_616\n      dup2\n      tag_509\n      jump\t// in\n    tag_616:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":19249:20229  for (... */\n      jump(tag_598)\n    tag_599:\n      pop\n        /* \"contracts/roy.sol\":19035:20239  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":19076:19079  i++ */\n      dup1\n      dup1\n      tag_617\n      swap1\n      tag_190\n      jump\t// in\n    tag_617:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":19035:20239  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      jump(tag_590)\n    tag_591:\n      pop\n        /* \"contracts/roy.sol\":20256:20266  incomeData */\n      swap1\n      swap5\n        /* \"contracts/roy.sol\":18205:20273  function getLevelIncomeDistribution(address _user)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1751:1806  mapping(address => uint256) public directReferralIncome */\n    tag_169:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":450:477  uint256 public stakeCounter */\n    tag_172:\n      sload(0x01)\n      dup2\n      jump\t// out\n    tag_298:\n      0x01\n      dup4\n      add\n      swap2\n      dup4\n      swap1\n      dup3\n      iszero\n      tag_618\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n      0x00\n    tag_619:\n      dup4\n      dup3\n      gt\n      iszero\n      tag_620\n      jumpi\n      dup4\n      mload\n      dup4\n      dup3\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap3\n      0x20\n      add\n      swap3\n      0x01\n      add\n      0x20\n      dup2\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_619)\n    tag_620:\n      dup1\n      iszero\n      tag_621\n      jumpi\n      dup3\n      dup2\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      add\n      0x20\n      dup2\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_620)\n    tag_621:\n      pop\n    tag_618:\n      pop\n      tag_622\n      swap3\n      swap2\n      pop\n      tag_623\n      jump\t// in\n    tag_622:\n      pop\n      swap1\n      jump\t// out\n    tag_589:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_623:\n    tag_624:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_622\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_624)\n        /* \"#utility.yul\":14:189   */\n    tag_627:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_631:\n        /* \"#utility.yul\":355:386   */\n      tag_632\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_627\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:663   */\n    tag_44:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_634:\n        /* \"#utility.yul\":575:606   */\n      tag_635\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_627\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":565:606   */\n      swap5\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":625:657   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":484:663   */\n      jump\t// out\n        /* \"#utility.yul\":668:1607   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":801:804   */\n      0xa0\n        /* \"#utility.yul\":789:798   */\n      dup3\n        /* \"#utility.yul\":780:787   */\n      dup5\n        /* \"#utility.yul\":776:799   */\n      sub\n        /* \"#utility.yul\":772:805   */\n      slt\n        /* \"#utility.yul\":769:771   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":823:829   */\n      dup1\n        /* \"#utility.yul\":815:821   */\n      dup2\n        /* \"#utility.yul\":808:830   */\n      revert\n        /* \"#utility.yul\":769:771   */\n    tag_637:\n        /* \"#utility.yul\":877:884   */\n      dup3\n        /* \"#utility.yul\":870:874   */\n      0x1f\n        /* \"#utility.yul\":859:868   */\n      dup4\n        /* \"#utility.yul\":855:875   */\n      add\n        /* \"#utility.yul\":851:885   */\n      slt\n        /* \"#utility.yul\":841:843   */\n      tag_638\n      jumpi\n        /* \"#utility.yul\":904:910   */\n      dup1\n        /* \"#utility.yul\":896:902   */\n      dup2\n        /* \"#utility.yul\":889:911   */\n      revert\n        /* \"#utility.yul\":841:843   */\n    tag_638:\n        /* \"#utility.yul\":942:944   */\n      0x40\n        /* \"#utility.yul\":936:945   */\n      mload\n        /* \"#utility.yul\":984:987   */\n      0xa0\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":972:988   */\n      add\n        /* \"#utility.yul\":1054:1060   */\n      dup2\n        /* \"#utility.yul\":1042:1052   */\n      dup2\n        /* \"#utility.yul\":1039:1061   */\n      lt\n        /* \"#utility.yul\":1018:1036   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1006:1016   */\n      dup3\n        /* \"#utility.yul\":1003:1037   */\n      gt\n        /* \"#utility.yul\":1000:1062   */\n      or\n        /* \"#utility.yul\":997:999   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":1065:1083   */\n      tag_640\n      tag_641\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":1101:1103   */\n      0x40\n        /* \"#utility.yul\":1094:1116   */\n      mstore\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1162:1171   */\n      dup4\n        /* \"#utility.yul\":1201:1204   */\n      0xa0\n        /* \"#utility.yul\":1186:1205   */\n      dup2\n      add\n        /* \"#utility.yul\":1183:1215   */\n      dup7\n      lt\n        /* \"#utility.yul\":1180:1182   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":1233:1239   */\n      dup4\n        /* \"#utility.yul\":1225:1231   */\n      dup5\n        /* \"#utility.yul\":1218:1240   */\n      revert\n        /* \"#utility.yul\":1180:1182   */\n    tag_642:\n        /* \"#utility.yul\":1260:1266   */\n      dup4\n        /* \"#utility.yul\":1275:1576   */\n    tag_643:\n        /* \"#utility.yul\":1289:1293   */\n      0x05\n        /* \"#utility.yul\":1286:1287   */\n      dup2\n        /* \"#utility.yul\":1283:1294   */\n      lt\n        /* \"#utility.yul\":1275:1576   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":1362:1365   */\n      dup2\n        /* \"#utility.yul\":1349:1366   */\n      calldataload\n        /* \"#utility.yul\":1410:1414   */\n      0xff\n        /* \"#utility.yul\":1403:1408   */\n      dup2\n        /* \"#utility.yul\":1399:1415   */\n      and\n        /* \"#utility.yul\":1392:1397   */\n      dup2\n        /* \"#utility.yul\":1389:1416   */\n      eq\n        /* \"#utility.yul\":1379:1381   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":1435:1441   */\n      dup6\n        /* \"#utility.yul\":1427:1433   */\n      dup7\n        /* \"#utility.yul\":1420:1442   */\n      revert\n        /* \"#utility.yul\":1379:1381   */\n    tag_646:\n        /* \"#utility.yul\":1457:1475   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1498:1502   */\n      0x20\n        /* \"#utility.yul\":1522:1534   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":1554:1566   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":1309:1310   */\n      0x01\n        /* \"#utility.yul\":1302:1311   */\n      add\n        /* \"#utility.yul\":1275:1576   */\n      jump(tag_643)\n    tag_645:\n      pop\n        /* \"#utility.yul\":1595:1601   */\n      swap2\n      swap6\n        /* \"#utility.yul\":759:1607   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1909   */\n    tag_246:\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1711:1718   */\n      dup5\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1702   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":1753:1759   */\n      dup1\n        /* \"#utility.yul\":1745:1751   */\n      dup2\n        /* \"#utility.yul\":1738:1760   */\n      revert\n        /* \"#utility.yul\":1700:1702   */\n    tag_648:\n        /* \"#utility.yul\":1790:1799   */\n      dup2\n        /* \"#utility.yul\":1784:1800   */\n      mload\n        /* \"#utility.yul\":1843:1848   */\n      dup1\n        /* \"#utility.yul\":1836:1849   */\n      iszero\n        /* \"#utility.yul\":1829:1850   */\n      iszero\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1851   */\n      eq\n        /* \"#utility.yul\":1809:1811   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1862:1868   */\n      dup3\n        /* \"#utility.yul\":1855:1877   */\n      revert\n        /* \"#utility.yul\":1914:2104   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2014:2023   */\n      dup3\n        /* \"#utility.yul\":2005:2012   */\n      dup5\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:1996   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":2047:2053   */\n      dup1\n        /* \"#utility.yul\":2039:2045   */\n      dup2\n        /* \"#utility.yul\":2032:2054   */\n      revert\n        /* \"#utility.yul\":1994:1996   */\n    tag_651:\n      pop\n        /* \"#utility.yul\":2075:2098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1984:2104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2109:2303   */\n    tag_234:\n      0x00\n        /* \"#utility.yul\":2232:2234   */\n      0x20\n        /* \"#utility.yul\":2220:2229   */\n      dup3\n        /* \"#utility.yul\":2211:2218   */\n      dup5\n        /* \"#utility.yul\":2207:2230   */\n      sub\n        /* \"#utility.yul\":2203:2235   */\n      slt\n        /* \"#utility.yul\":2200:2202   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":2253:2259   */\n      dup1\n        /* \"#utility.yul\":2245:2251   */\n      dup2\n        /* \"#utility.yul\":2238:2260   */\n      revert\n        /* \"#utility.yul\":2200:2202   */\n    tag_653:\n      pop\n        /* \"#utility.yul\":2281:2297   */\n      mload\n      swap2\n        /* \"#utility.yul\":2190:2303   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2566   */\n    tag_76:\n      0x00\n      dup1\n        /* \"#utility.yul\":2437:2439   */\n      0x40\n        /* \"#utility.yul\":2425:2434   */\n      dup4\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2412:2435   */\n      sub\n        /* \"#utility.yul\":2408:2440   */\n      slt\n        /* \"#utility.yul\":2405:2407   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":2458:2464   */\n      dup2\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2443:2465   */\n      revert\n        /* \"#utility.yul\":2405:2407   */\n    tag_655:\n      pop\n      pop\n        /* \"#utility.yul\":2486:2509   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2556:2558   */\n      0x20\n        /* \"#utility.yul\":2541:2559   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2528:2560   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2395:2566   */\n      jump\t// out\n        /* \"#utility.yul\":2571:3014   */\n    tag_656:\n      0x00\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2662:2674   */\n      mload\n        /* \"#utility.yul\":2695:2701   */\n      dup1\n        /* \"#utility.yul\":2690:2693   */\n      dup5\n        /* \"#utility.yul\":2683:2702   */\n      mstore\n        /* \"#utility.yul\":2721:2725   */\n      0x20\n        /* \"#utility.yul\":2750:2752   */\n      dup1\n        /* \"#utility.yul\":2745:2748   */\n      dup6\n        /* \"#utility.yul\":2741:2753   */\n      add\n        /* \"#utility.yul\":2734:2753   */\n      swap5\n      pop\n        /* \"#utility.yul\":2787:2789   */\n      dup1\n        /* \"#utility.yul\":2780:2785   */\n      dup5\n        /* \"#utility.yul\":2776:2790   */\n      add\n        /* \"#utility.yul\":2808:2811   */\n      dup4\n        /* \"#utility.yul\":2820:2989   */\n    tag_658:\n        /* \"#utility.yul\":2834:2840   */\n      dup4\n        /* \"#utility.yul\":2831:2832   */\n      dup2\n        /* \"#utility.yul\":2828:2841   */\n      lt\n        /* \"#utility.yul\":2820:2989   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":2895:2908   */\n      dup2\n      mload\n        /* \"#utility.yul\":2883:2909   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2929:2941   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":2964:2979   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2856:2857   */\n      0x01\n        /* \"#utility.yul\":2849:2858   */\n      add\n        /* \"#utility.yul\":2820:2989   */\n      jump(tag_658)\n    tag_660:\n      pop\n        /* \"#utility.yul\":3005:3008   */\n      swap5\n      swap6\n        /* \"#utility.yul\":2638:3014   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3222   */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3183:3215   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3165:3216   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3153:3155   */\n      0x20\n        /* \"#utility.yul\":3138:3156   */\n      add\n      swap1\n        /* \"#utility.yul\":3120:3222   */\n      jump\t// out\n        /* \"#utility.yul\":3227:3602   */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3485:3500   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":3467:3501   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3537:3552   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3532:3534   */\n      0x20\n        /* \"#utility.yul\":3517:3535   */\n      dup3\n      add\n        /* \"#utility.yul\":3510:3553   */\n      mstore\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3569:3587   */\n      dup2\n      add\n        /* \"#utility.yul\":3562:3596   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3417:3419   */\n      0x60\n        /* \"#utility.yul\":3402:3420   */\n      add\n      swap1\n        /* \"#utility.yul\":3384:3602   */\n      jump\t// out\n        /* \"#utility.yul\":3607:3881   */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3799:3831   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3781:3832   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3848:3866   */\n      dup3\n      add\n        /* \"#utility.yul\":3841:3875   */\n      mstore\n        /* \"#utility.yul\":3769:3771   */\n      0x40\n        /* \"#utility.yul\":3754:3772   */\n      add\n      swap1\n        /* \"#utility.yul\":3736:3881   */\n      jump\t// out\n        /* \"#utility.yul\":3886:4231   */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4106:4138   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4088:4139   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4155:4173   */\n      dup4\n      add\n        /* \"#utility.yul\":4148:4182   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4213:4215   */\n      0x40\n        /* \"#utility.yul\":4198:4216   */\n      dup3\n      add\n        /* \"#utility.yul\":4191:4225   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x60\n        /* \"#utility.yul\":4061:4079   */\n      add\n      swap1\n        /* \"#utility.yul\":4043:4231   */\n      jump\t// out\n        /* \"#utility.yul\":4236:4663   */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4479:4511   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4461:4512   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4543:4545   */\n      0x20\n        /* \"#utility.yul\":4528:4546   */\n      dup5\n      add\n        /* \"#utility.yul\":4521:4555   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4571:4589   */\n      dup4\n      add\n        /* \"#utility.yul\":4564:4598   */\n      mstore\n        /* \"#utility.yul\":4641:4655   */\n      iszero\n        /* \"#utility.yul\":4634:4656   */\n      iszero\n        /* \"#utility.yul\":4629:4631   */\n      0x60\n        /* \"#utility.yul\":4614:4632   */\n      dup3\n      add\n        /* \"#utility.yul\":4607:4657   */\n      mstore\n        /* \"#utility.yul\":4448:4451   */\n      0x80\n        /* \"#utility.yul\":4433:4452   */\n      add\n      swap1\n        /* \"#utility.yul\":4415:4663   */\n      jump\t// out\n        /* \"#utility.yul\":4668:5383   */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5023:5055   */\n      swap9\n      swap1\n      swap9\n      and\n        /* \"#utility.yul\":5005:5056   */\n      dup9\n      mstore\n        /* \"#utility.yul\":5087:5089   */\n      0x20\n        /* \"#utility.yul\":5072:5090   */\n      dup9\n      add\n        /* \"#utility.yul\":5065:5099   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":5130:5132   */\n      0x40\n        /* \"#utility.yul\":5115:5133   */\n      dup8\n      add\n        /* \"#utility.yul\":5108:5142   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5173:5175   */\n      0x60\n        /* \"#utility.yul\":5158:5176   */\n      dup7\n      add\n        /* \"#utility.yul\":5151:5185   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5216:5219   */\n      0x80\n        /* \"#utility.yul\":5201:5220   */\n      dup6\n      add\n        /* \"#utility.yul\":5194:5229   */\n      mstore\n        /* \"#utility.yul\":5043:5046   */\n      0xa0\n        /* \"#utility.yul\":5245:5264   */\n      dup5\n      add\n        /* \"#utility.yul\":5238:5273   */\n      mstore\n        /* \"#utility.yul\":5304:5307   */\n      0xc0\n        /* \"#utility.yul\":5289:5308   */\n      dup4\n      add\n        /* \"#utility.yul\":5282:5317   */\n      mstore\n        /* \"#utility.yul\":5361:5375   */\n      iszero\n        /* \"#utility.yul\":5354:5376   */\n      iszero\n        /* \"#utility.yul\":5348:5351   */\n      0xe0\n        /* \"#utility.yul\":5333:5352   */\n      dup3\n      add\n        /* \"#utility.yul\":5326:5377   */\n      mstore\n        /* \"#utility.yul\":4992:4995   */\n      0x0100\n        /* \"#utility.yul\":4977:4996   */\n      add\n      swap1\n        /* \"#utility.yul\":4959:5383   */\n      jump\t// out\n        /* \"#utility.yul\":5388:6440   */\n    tag_119:\n        /* \"#utility.yul\":5734:5736   */\n      0x60\n        /* \"#utility.yul\":5746:5767   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5816:5829   */\n      dup5\n      mload\n        /* \"#utility.yul\":5719:5737   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5838:5860   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5388:6440   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5914:5918   */\n      0x20\n      swap1\n        /* \"#utility.yul\":5891:5894   */\n      0x80\n        /* \"#utility.yul\":5876:5895   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5941:5956   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":5388:6440   */\n      dup5\n        /* \"#utility.yul\":5987:6182   */\n    tag_668:\n        /* \"#utility.yul\":6001:6007   */\n      dup3\n        /* \"#utility.yul\":5998:5999   */\n      dup2\n        /* \"#utility.yul\":5995:6008   */\n      lt\n        /* \"#utility.yul\":5987:6182   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":6066:6079   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6062:6101   */\n      and\n        /* \"#utility.yul\":6050:6102   */\n      dup5\n      mstore\n        /* \"#utility.yul\":6122:6134   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6157:6172   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6098:6099   */\n      0x01\n        /* \"#utility.yul\":6016:6025   */\n      add\n        /* \"#utility.yul\":5987:6182   */\n      jump(tag_668)\n    tag_670:\n        /* \"#utility.yul\":5991:5994   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6227:6236   */\n      dup4\n        /* \"#utility.yul\":6222:6225   */\n      dup2\n        /* \"#utility.yul\":6218:6237   */\n      sub\n        /* \"#utility.yul\":6213:6215   */\n      dup3\n        /* \"#utility.yul\":6202:6211   */\n      dup6\n        /* \"#utility.yul\":6198:6216   */\n      add\n        /* \"#utility.yul\":6191:6238   */\n      mstore\n        /* \"#utility.yul\":6261:6308   */\n      tag_671\n        /* \"#utility.yul\":6304:6307   */\n      dup2\n        /* \"#utility.yul\":6296:6302   */\n      dup8\n        /* \"#utility.yul\":6261:6308   */\n      tag_656\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":6247:6308   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6356:6365   */\n      dup3\n        /* \"#utility.yul\":6348:6354   */\n      dup2\n        /* \"#utility.yul\":6344:6366   */\n      sub\n        /* \"#utility.yul\":6339:6341   */\n      0x40\n        /* \"#utility.yul\":6328:6337   */\n      dup5\n        /* \"#utility.yul\":6324:6342   */\n      add\n        /* \"#utility.yul\":6317:6367   */\n      mstore\n        /* \"#utility.yul\":6384:6434   */\n      tag_672\n        /* \"#utility.yul\":6427:6433   */\n      dup2\n        /* \"#utility.yul\":6419:6425   */\n      dup6\n        /* \"#utility.yul\":6384:6434   */\n      tag_656\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":6376:6434   */\n      swap7\n        /* \"#utility.yul\":5695:6440   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6445:7696   */\n    tag_166:\n        /* \"#utility.yul\":6680:6682   */\n      0x20\n        /* \"#utility.yul\":6732:6753   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6802:6815   */\n      dup3\n      mload\n        /* \"#utility.yul\":6705:6723   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6824:6846   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6445:7696   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6680:6682   */\n      swap1\n        /* \"#utility.yul\":6865:6867   */\n      0x40\n      swap1\n        /* \"#utility.yul\":6883:6901   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6924:6939   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":6445:7696   */\n      dup6\n        /* \"#utility.yul\":6970:7670   */\n    tag_674:\n        /* \"#utility.yul\":6984:6990   */\n      dup3\n        /* \"#utility.yul\":6981:6982   */\n      dup2\n        /* \"#utility.yul\":6978:6991   */\n      lt\n        /* \"#utility.yul\":6970:7670   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":7043:7056   */\n      dup2\n      mload\n        /* \"#utility.yul\":7127:7136   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7123:7141   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":7111:7142   */\n      dup7\n      mstore\n        /* \"#utility.yul\":7182:7193   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":7176:7194   */\n      mload\n        /* \"#utility.yul\":7162:7174   */\n      dup9\n      dup8\n      add\n        /* \"#utility.yul\":7155:7195   */\n      mstore\n        /* \"#utility.yul\":7235:7246   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":7229:7247   */\n      mload\n        /* \"#utility.yul\":7215:7227   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":7208:7248   */\n      mstore\n        /* \"#utility.yul\":7271:7275   */\n      0x60\n        /* \"#utility.yul\":7315:7326   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":7309:7327   */\n      mload\n        /* \"#utility.yul\":7295:7307   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":7288:7328   */\n      mstore\n        /* \"#utility.yul\":7351:7355   */\n      0x80\n        /* \"#utility.yul\":7399:7410   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":7393:7411   */\n      mload\n        /* \"#utility.yul\":7389:7416   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7375:7387   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7368:7417   */\n      mstore\n        /* \"#utility.yul\":7087:7090   */\n      0xa0\n        /* \"#utility.yul\":7484:7495   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7478:7496   */\n      mload\n        /* \"#utility.yul\":7464:7476   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7457:7497   */\n      mstore\n        /* \"#utility.yul\":7520:7524   */\n      0xc0\n        /* \"#utility.yul\":7568:7579   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7562:7580   */\n      mload\n        /* \"#utility.yul\":7582:7586   */\n      0xff\n        /* \"#utility.yul\":7558:7587   */\n      and\n        /* \"#utility.yul\":7544:7556   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":7537:7588   */\n      mstore\n        /* \"#utility.yul\":7617:7621   */\n      0xe0\n        /* \"#utility.yul\":7608:7622   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7645:7660   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7096:7097   */\n      0x01\n        /* \"#utility.yul\":6999:7008   */\n      add\n        /* \"#utility.yul\":6970:7670   */\n      jump(tag_674)\n    tag_676:\n      pop\n        /* \"#utility.yul\":7687:7690   */\n      swap2\n      swap8\n        /* \"#utility.yul\":6660:7696   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7701:7968   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":7880:7882   */\n      0x20\n        /* \"#utility.yul\":7869:7878   */\n      dup3\n        /* \"#utility.yul\":7862:7883   */\n      mstore\n        /* \"#utility.yul\":7900:7962   */\n      tag_632\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7947:7956   */\n      dup4\n        /* \"#utility.yul\":7943:7961   */\n      add\n        /* \"#utility.yul\":7935:7941   */\n      dup5\n        /* \"#utility.yul\":7900:7962   */\n      tag_656\n      jump\t// in\n        /* \"#utility.yul\":7973:8160   */\n    tag_150:\n        /* \"#utility.yul\":8138:8152   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8131:8153   */\n      iszero\n        /* \"#utility.yul\":8113:8154   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8101:8103   */\n      0x20\n        /* \"#utility.yul\":8086:8104   */\n      add\n      swap1\n        /* \"#utility.yul\":8068:8160   */\n      jump\t// out\n        /* \"#utility.yul\":8386:8733   */\n    tag_278:\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8570:8591   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8627:8629   */\n      0x17\n        /* \"#utility.yul\":8607:8625   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8600:8630   */\n      mstore\n        /* \"#utility.yul\":8666:8691   */\n      0x5265666572726572206e6f742072656769737465726564000000000000000000\n        /* \"#utility.yul\":8661:8663   */\n      0x40\n        /* \"#utility.yul\":8646:8664   */\n      dup3\n      add\n        /* \"#utility.yul\":8639:8692   */\n      mstore\n        /* \"#utility.yul\":8724:8726   */\n      0x60\n        /* \"#utility.yul\":8709:8727   */\n      add\n      swap1\n        /* \"#utility.yul\":8560:8733   */\n      jump\t// out\n        /* \"#utility.yul\":8738:9076   */\n    tag_194:\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8922:8943   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8979:8981   */\n      0x0e\n        /* \"#utility.yul\":8959:8977   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8952:8982   */\n      mstore\n      shl(0x92, 0x139bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":9013:9015   */\n      0x40\n        /* \"#utility.yul\":8998:9016   */\n      dup3\n      add\n        /* \"#utility.yul\":8991:9035   */\n      mstore\n        /* \"#utility.yul\":9067:9069   */\n      0x60\n        /* \"#utility.yul\":9052:9070   */\n      add\n      swap1\n        /* \"#utility.yul\":8912:9076   */\n      jump\t// out\n        /* \"#utility.yul\":9081:9426   */\n    tag_275:\n        /* \"#utility.yul\":9283:9285   */\n      0x20\n        /* \"#utility.yul\":9265:9286   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9322:9324   */\n      0x15\n        /* \"#utility.yul\":9302:9320   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9295:9325   */\n      mstore\n      shl(0x59, 0x21b0b73737ba103932b332b9103cb7bab939b2b633)\n        /* \"#utility.yul\":9356:9358   */\n      0x40\n        /* \"#utility.yul\":9341:9359   */\n      dup3\n      add\n        /* \"#utility.yul\":9334:9385   */\n      mstore\n        /* \"#utility.yul\":9417:9419   */\n      0x60\n        /* \"#utility.yul\":9402:9420   */\n      add\n      swap1\n        /* \"#utility.yul\":9255:9426   */\n      jump\t// out\n        /* \"#utility.yul\":9431:9786   */\n    tag_433:\n        /* \"#utility.yul\":9633:9635   */\n      0x20\n        /* \"#utility.yul\":9615:9636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9672:9674   */\n      0x1f\n        /* \"#utility.yul\":9652:9670   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9645:9675   */\n      mstore\n        /* \"#utility.yul\":9711:9744   */\n      0x44697265637420726566657272616c207472616e73666572206661696c656400\n        /* \"#utility.yul\":9706:9708   */\n      0x40\n        /* \"#utility.yul\":9691:9709   */\n      dup3\n      add\n        /* \"#utility.yul\":9684:9745   */\n      mstore\n        /* \"#utility.yul\":9777:9779   */\n      0x60\n        /* \"#utility.yul\":9762:9780   */\n      add\n      swap1\n        /* \"#utility.yul\":9605:9786   */\n      jump\t// out\n        /* \"#utility.yul\":9791:10145   */\n    tag_451:\n        /* \"#utility.yul\":9993:9995   */\n      0x20\n        /* \"#utility.yul\":9975:9996   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10032:10034   */\n      0x1e\n        /* \"#utility.yul\":10012:10030   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10005:10035   */\n      mstore\n        /* \"#utility.yul\":10071:10103   */\n      0x4c6576656c203120726577617264207472616e73666572206661696c65640000\n        /* \"#utility.yul\":10066:10068   */\n      0x40\n        /* \"#utility.yul\":10051:10069   */\n      dup3\n      add\n        /* \"#utility.yul\":10044:10104   */\n      mstore\n        /* \"#utility.yul\":10136:10138   */\n      0x60\n        /* \"#utility.yul\":10121:10139   */\n      add\n      swap1\n        /* \"#utility.yul\":9965:10145   */\n      jump\t// out\n        /* \"#utility.yul\":10150:10506   */\n    tag_557:\n        /* \"#utility.yul\":10352:10354   */\n      0x20\n        /* \"#utility.yul\":10334:10355   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10371:10389   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10364:10394   */\n      mstore\n        /* \"#utility.yul\":10430:10464   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":10425:10427   */\n      0x40\n        /* \"#utility.yul\":10410:10428   */\n      dup3\n      add\n        /* \"#utility.yul\":10403:10465   */\n      mstore\n        /* \"#utility.yul\":10497:10499   */\n      0x60\n        /* \"#utility.yul\":10482:10500   */\n      add\n      swap1\n        /* \"#utility.yul\":10324:10506   */\n      jump\t// out\n        /* \"#utility.yul\":10511:10864   */\n    tag_538:\n        /* \"#utility.yul\":10713:10715   */\n      0x20\n        /* \"#utility.yul\":10695:10716   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10752:10754   */\n      0x1d\n        /* \"#utility.yul\":10732:10750   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10725:10755   */\n      mstore\n        /* \"#utility.yul\":10791:10822   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":10786:10788   */\n      0x40\n        /* \"#utility.yul\":10771:10789   */\n      dup3\n      add\n        /* \"#utility.yul\":10764:10823   */\n      mstore\n        /* \"#utility.yul\":10855:10857   */\n      0x60\n        /* \"#utility.yul\":10840:10858   */\n      add\n      swap1\n        /* \"#utility.yul\":10685:10864   */\n      jump\t// out\n        /* \"#utility.yul\":10869:11211   */\n    tag_272:\n        /* \"#utility.yul\":11071:11073   */\n      0x20\n        /* \"#utility.yul\":11053:11074   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11110:11112   */\n      0x12\n        /* \"#utility.yul\":11090:11108   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11083:11113   */\n      mstore\n      shl(0x72, 0x105b1c9958591e481c9959da5cdd195c9959)\n        /* \"#utility.yul\":11144:11146   */\n      0x40\n        /* \"#utility.yul\":11129:11147   */\n      dup3\n      add\n        /* \"#utility.yul\":11122:11170   */\n      mstore\n        /* \"#utility.yul\":11202:11204   */\n      0x60\n        /* \"#utility.yul\":11187:11205   */\n      add\n      swap1\n        /* \"#utility.yul\":11043:11211   */\n      jump\t// out\n        /* \"#utility.yul\":11216:11568   */\n    tag_494:\n        /* \"#utility.yul\":11418:11420   */\n      0x20\n        /* \"#utility.yul\":11400:11421   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11457:11459   */\n      0x1c\n        /* \"#utility.yul\":11437:11455   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11430:11460   */\n      mstore\n        /* \"#utility.yul\":11496:11526   */\n      0x4c6576656c20726577617264207472616e73666572206661696c656400000000\n        /* \"#utility.yul\":11491:11493   */\n      0x40\n        /* \"#utility.yul\":11476:11494   */\n      dup3\n      add\n        /* \"#utility.yul\":11469:11527   */\n      mstore\n        /* \"#utility.yul\":11559:11561   */\n      0x60\n        /* \"#utility.yul\":11544:11562   */\n      add\n      swap1\n        /* \"#utility.yul\":11390:11568   */\n      jump\t// out\n        /* \"#utility.yul\":11573:11978   */\n    tag_443:\n        /* \"#utility.yul\":11775:11777   */\n      0x20\n        /* \"#utility.yul\":11757:11778   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11814:11816   */\n      0x29\n        /* \"#utility.yul\":11794:11812   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11787:11817   */\n      mstore\n        /* \"#utility.yul\":11853:11887   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e636520666f\n        /* \"#utility.yul\":11848:11850   */\n      0x40\n        /* \"#utility.yul\":11833:11851   */\n      dup3\n      add\n        /* \"#utility.yul\":11826:11888   */\n      mstore\n      shl(0xb8, 0x72206c6576656c2031)\n        /* \"#utility.yul\":11919:11921   */\n      0x60\n        /* \"#utility.yul\":11904:11922   */\n      dup3\n      add\n        /* \"#utility.yul\":11897:11936   */\n      mstore\n        /* \"#utility.yul\":11968:11971   */\n      0x80\n        /* \"#utility.yul\":11953:11972   */\n      add\n      swap1\n        /* \"#utility.yul\":11747:11978   */\n      jump\t// out\n        /* \"#utility.yul\":11983:12387   */\n    tag_397:\n        /* \"#utility.yul\":12185:12187   */\n      0x20\n        /* \"#utility.yul\":12167:12188   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12224:12226   */\n      0x28\n        /* \"#utility.yul\":12204:12222   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12197:12227   */\n      mstore\n        /* \"#utility.yul\":12263:12297   */\n      0x5265666572726572206d757374207374616b65206265666f726520796f752063\n        /* \"#utility.yul\":12258:12260   */\n      0x40\n        /* \"#utility.yul\":12243:12261   */\n      dup3\n      add\n        /* \"#utility.yul\":12236:12298   */\n      mstore\n      shl(0xc0, 0x616e207374616b65)\n        /* \"#utility.yul\":12329:12331   */\n      0x60\n        /* \"#utility.yul\":12314:12332   */\n      dup3\n      add\n        /* \"#utility.yul\":12307:12345   */\n      mstore\n        /* \"#utility.yul\":12377:12380   */\n      0x80\n        /* \"#utility.yul\":12362:12381   */\n      add\n      swap1\n        /* \"#utility.yul\":12157:12387   */\n      jump\t// out\n        /* \"#utility.yul\":12392:12739   */\n    tag_263:\n        /* \"#utility.yul\":12594:12596   */\n      0x20\n        /* \"#utility.yul\":12576:12597   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12633:12635   */\n      0x17\n        /* \"#utility.yul\":12613:12631   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12606:12636   */\n      mstore\n        /* \"#utility.yul\":12672:12697   */\n      0x4f6e6c79206f776e65722063616e207769746864726177000000000000000000\n        /* \"#utility.yul\":12667:12669   */\n      0x40\n        /* \"#utility.yul\":12652:12670   */\n      dup3\n      add\n        /* \"#utility.yul\":12645:12698   */\n      mstore\n        /* \"#utility.yul\":12730:12732   */\n      0x60\n        /* \"#utility.yul\":12715:12733   */\n      add\n      swap1\n        /* \"#utility.yul\":12566:12739   */\n      jump\t// out\n        /* \"#utility.yul\":12744:13142   */\n    tag_259:\n        /* \"#utility.yul\":12946:12948   */\n      0x20\n        /* \"#utility.yul\":12928:12949   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12985:12987   */\n      0x22\n        /* \"#utility.yul\":12965:12983   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12958:12988   */\n      mstore\n        /* \"#utility.yul\":13024:13058   */\n      0x5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d\n        /* \"#utility.yul\":13019:13021   */\n      0x40\n        /* \"#utility.yul\":13004:13022   */\n      dup3\n      add\n        /* \"#utility.yul\":12997:13059   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":13090:13092   */\n      0x60\n        /* \"#utility.yul\":13075:13093   */\n      dup3\n      add\n        /* \"#utility.yul\":13068:13100   */\n      mstore\n        /* \"#utility.yul\":13132:13135   */\n      0x80\n        /* \"#utility.yul\":13117:13136   */\n      add\n      swap1\n        /* \"#utility.yul\":12918:13142   */\n      jump\t// out\n        /* \"#utility.yul\":13147:13492   */\n    tag_565:\n        /* \"#utility.yul\":13349:13351   */\n      0x20\n        /* \"#utility.yul\":13331:13352   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13388:13390   */\n      0x15\n        /* \"#utility.yul\":13368:13386   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13361:13391   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":13422:13424   */\n      0x40\n        /* \"#utility.yul\":13407:13425   */\n      dup3\n      add\n        /* \"#utility.yul\":13400:13451   */\n      mstore\n        /* \"#utility.yul\":13483:13485   */\n      0x60\n        /* \"#utility.yul\":13468:13486   */\n      add\n      swap1\n        /* \"#utility.yul\":13321:13492   */\n      jump\t// out\n        /* \"#utility.yul\":13497:13845   */\n    tag_393:\n        /* \"#utility.yul\":13699:13701   */\n      0x20\n        /* \"#utility.yul\":13681:13702   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13738:13740   */\n      0x18\n        /* \"#utility.yul\":13718:13736   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13711:13741   */\n      mstore\n        /* \"#utility.yul\":13777:13803   */\n      0x496e76616c6964207374616b696e67206475726174696f6e0000000000000000\n        /* \"#utility.yul\":13772:13774   */\n      0x40\n        /* \"#utility.yul\":13757:13775   */\n      dup3\n      add\n        /* \"#utility.yul\":13750:13804   */\n      mstore\n        /* \"#utility.yul\":13836:13838   */\n      0x60\n        /* \"#utility.yul\":13821:13839   */\n      add\n      swap1\n        /* \"#utility.yul\":13671:13845   */\n      jump\t// out\n        /* \"#utility.yul\":13850:14199   */\n    tag_554:\n        /* \"#utility.yul\":14052:14054   */\n      0x20\n        /* \"#utility.yul\":14034:14055   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14091:14093   */\n      0x19\n        /* \"#utility.yul\":14071:14089   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14064:14094   */\n      mstore\n        /* \"#utility.yul\":14130:14157   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":14125:14127   */\n      0x40\n        /* \"#utility.yul\":14110:14128   */\n      dup3\n      add\n        /* \"#utility.yul\":14103:14158   */\n      mstore\n        /* \"#utility.yul\":14190:14192   */\n      0x60\n        /* \"#utility.yul\":14175:14193   */\n      add\n      swap1\n        /* \"#utility.yul\":14024:14199   */\n      jump\t// out\n        /* \"#utility.yul\":14204:14608   */\n    tag_425:\n        /* \"#utility.yul\":14406:14408   */\n      0x20\n        /* \"#utility.yul\":14388:14409   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14445:14447   */\n      0x28\n        /* \"#utility.yul\":14425:14443   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14418:14448   */\n      mstore\n        /* \"#utility.yul\":14484:14518   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e636520666f\n        /* \"#utility.yul\":14479:14481   */\n      0x40\n        /* \"#utility.yul\":14464:14482   */\n      dup3\n      add\n        /* \"#utility.yul\":14457:14519   */\n      mstore\n      shl(0xc2, 0x1c88191a5c9958dd)\n        /* \"#utility.yul\":14550:14552   */\n      0x60\n        /* \"#utility.yul\":14535:14553   */\n      dup3\n      add\n        /* \"#utility.yul\":14528:14566   */\n      mstore\n        /* \"#utility.yul\":14598:14601   */\n      0x80\n        /* \"#utility.yul\":14583:14602   */\n      add\n      swap1\n        /* \"#utility.yul\":14378:14608   */\n      jump\t// out\n        /* \"#utility.yul\":14613:14969   */\n    tag_215:\n        /* \"#utility.yul\":14815:14817   */\n      0x20\n        /* \"#utility.yul\":14797:14818   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14834:14852   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14827:14857   */\n      mstore\n        /* \"#utility.yul\":14893:14927   */\n      0x5374616b696e6720706572696f64206e6f742079657420636f6d706c65746564\n        /* \"#utility.yul\":14888:14890   */\n      0x40\n        /* \"#utility.yul\":14873:14891   */\n      dup3\n      add\n        /* \"#utility.yul\":14866:14928   */\n      mstore\n        /* \"#utility.yul\":14960:14962   */\n      0x60\n        /* \"#utility.yul\":14945:14963   */\n      add\n      swap1\n        /* \"#utility.yul\":14787:14969   */\n      jump\t// out\n        /* \"#utility.yul\":14974:15318   */\n    tag_249:\n        /* \"#utility.yul\":15176:15178   */\n      0x20\n        /* \"#utility.yul\":15158:15179   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15215:15217   */\n      0x14\n        /* \"#utility.yul\":15195:15213   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15188:15218   */\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":15249:15251   */\n      0x40\n        /* \"#utility.yul\":15234:15252   */\n      dup3\n      add\n        /* \"#utility.yul\":15227:15277   */\n      mstore\n        /* \"#utility.yul\":15309:15311   */\n      0x60\n        /* \"#utility.yul\":15294:15312   */\n      add\n      swap1\n        /* \"#utility.yul\":15148:15318   */\n      jump\t// out\n        /* \"#utility.yul\":15323:15730   */\n    tag_281:\n        /* \"#utility.yul\":15525:15527   */\n      0x20\n        /* \"#utility.yul\":15507:15528   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15564:15566   */\n      0x2b\n        /* \"#utility.yul\":15544:15562   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15537:15567   */\n      mstore\n        /* \"#utility.yul\":15603:15637   */\n      0x5265666572726572206d757374207374616b65206265666f726520796f752063\n        /* \"#utility.yul\":15598:15600   */\n      0x40\n        /* \"#utility.yul\":15583:15601   */\n      dup3\n      add\n        /* \"#utility.yul\":15576:15638   */\n      mstore\n      shl(0xa9, 0x30b7103932b3b4b9ba32b9)\n        /* \"#utility.yul\":15669:15671   */\n      0x60\n        /* \"#utility.yul\":15654:15672   */\n      dup3\n      add\n        /* \"#utility.yul\":15647:15688   */\n      mstore\n        /* \"#utility.yul\":15720:15723   */\n      0x80\n        /* \"#utility.yul\":15705:15724   */\n      add\n      swap1\n        /* \"#utility.yul\":15497:15730   */\n      jump\t// out\n        /* \"#utility.yul\":15735:16074   */\n    tag_383:\n        /* \"#utility.yul\":15937:15939   */\n      0x20\n        /* \"#utility.yul\":15919:15940   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15976:15978   */\n      0x0f\n        /* \"#utility.yul\":15956:15974   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15949:15979   */\n      mstore\n      shl(0x8a, 0x14dd185ad9481b9bdd08199bdd5b99)\n        /* \"#utility.yul\":16010:16012   */\n      0x40\n        /* \"#utility.yul\":15995:16013   */\n      dup3\n      add\n        /* \"#utility.yul\":15988:16033   */\n      mstore\n        /* \"#utility.yul\":16065:16067   */\n      0x60\n        /* \"#utility.yul\":16050:16068   */\n      add\n      swap1\n        /* \"#utility.yul\":15909:16074   */\n      jump\t// out\n        /* \"#utility.yul\":16079:16485   */\n    tag_317:\n        /* \"#utility.yul\":16281:16283   */\n      0x20\n        /* \"#utility.yul\":16263:16284   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16320:16322   */\n      0x2a\n        /* \"#utility.yul\":16300:16318   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16293:16323   */\n      mstore\n        /* \"#utility.yul\":16359:16393   */\n      0x456d657267656e637920636c61696d20616c6c6f776564206f6e6c7920616674\n        /* \"#utility.yul\":16354:16356   */\n      0x40\n        /* \"#utility.yul\":16339:16357   */\n      dup3\n      add\n        /* \"#utility.yul\":16332:16394   */\n      mstore\n      shl(0xb0, 0x65722031302064617973)\n        /* \"#utility.yul\":16425:16427   */\n      0x60\n        /* \"#utility.yul\":16410:16428   */\n      dup3\n      add\n        /* \"#utility.yul\":16403:16443   */\n      mstore\n        /* \"#utility.yul\":16475:16478   */\n      0x80\n        /* \"#utility.yul\":16460:16479   */\n      add\n      swap1\n        /* \"#utility.yul\":16253:16485   */\n      jump\t// out\n        /* \"#utility.yul\":16490:16889   */\n    tag_390:\n        /* \"#utility.yul\":16692:16694   */\n      0x20\n        /* \"#utility.yul\":16674:16695   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16731:16733   */\n      0x23\n        /* \"#utility.yul\":16711:16729   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16704:16734   */\n      mstore\n        /* \"#utility.yul\":16770:16804   */\n      0x5374616b6520616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":16765:16767   */\n      0x40\n        /* \"#utility.yul\":16750:16768   */\n      dup3\n      add\n        /* \"#utility.yul\":16743:16805   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":16836:16838   */\n      0x60\n        /* \"#utility.yul\":16821:16839   */\n      dup3\n      add\n        /* \"#utility.yul\":16814:16847   */\n      mstore\n        /* \"#utility.yul\":16879:16882   */\n      0x80\n        /* \"#utility.yul\":16864:16883   */\n      add\n      swap1\n        /* \"#utility.yul\":16664:16889   */\n      jump\t// out\n        /* \"#utility.yul\":16894:17238   */\n    tag_340:\n        /* \"#utility.yul\":17096:17098   */\n      0x20\n        /* \"#utility.yul\":17078:17099   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17135:17137   */\n      0x14\n        /* \"#utility.yul\":17115:17133   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17108:17138   */\n      mstore\n      shl(0x62, 0x155cd95c881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":17169:17171   */\n      0x40\n        /* \"#utility.yul\":17154:17172   */\n      dup3\n      add\n        /* \"#utility.yul\":17147:17197   */\n      mstore\n        /* \"#utility.yul\":17229:17231   */\n      0x60\n        /* \"#utility.yul\":17214:17232   */\n      add\n      swap1\n        /* \"#utility.yul\":17068:17238   */\n      jump\t// out\n        /* \"#utility.yul\":17243:17592   */\n    tag_348:\n        /* \"#utility.yul\":17445:17447   */\n      0x20\n        /* \"#utility.yul\":17427:17448   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17484:17486   */\n      0x19\n        /* \"#utility.yul\":17464:17482   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17457:17487   */\n      mstore\n        /* \"#utility.yul\":17523:17550   */\n      0x41646d696e20666565207472616e73666572206661696c656400000000000000\n        /* \"#utility.yul\":17518:17520   */\n      0x40\n        /* \"#utility.yul\":17503:17521   */\n      dup3\n      add\n        /* \"#utility.yul\":17496:17551   */\n      mstore\n        /* \"#utility.yul\":17583:17585   */\n      0x60\n        /* \"#utility.yul\":17568:17586   */\n      add\n      swap1\n        /* \"#utility.yul\":17417:17592   */\n      jump\t// out\n        /* \"#utility.yul\":17597:17950   */\n    tag_237:\n        /* \"#utility.yul\":17799:17801   */\n      0x20\n        /* \"#utility.yul\":17781:17802   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17838:17840   */\n      0x1d\n        /* \"#utility.yul\":17818:17836   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17811:17841   */\n      mstore\n        /* \"#utility.yul\":17877:17908   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":17872:17874   */\n      0x40\n        /* \"#utility.yul\":17857:17875   */\n      dup3\n      add\n        /* \"#utility.yul\":17850:17909   */\n      mstore\n        /* \"#utility.yul\":17941:17943   */\n      0x60\n        /* \"#utility.yul\":17926:17944   */\n      add\n      swap1\n        /* \"#utility.yul\":17771:17950   */\n      jump\t// out\n        /* \"#utility.yul\":17955:18303   */\n    tag_287:\n        /* \"#utility.yul\":18157:18159   */\n      0x20\n        /* \"#utility.yul\":18139:18160   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18196:18198   */\n      0x18\n        /* \"#utility.yul\":18176:18194   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18169:18199   */\n      mstore\n        /* \"#utility.yul\":18235:18261   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000\n        /* \"#utility.yul\":18230:18232   */\n      0x40\n        /* \"#utility.yul\":18215:18233   */\n      dup3\n      add\n        /* \"#utility.yul\":18208:18262   */\n      mstore\n        /* \"#utility.yul\":18294:18296   */\n      0x60\n        /* \"#utility.yul\":18279:18297   */\n      add\n      swap1\n        /* \"#utility.yul\":18129:18303   */\n      jump\t// out\n        /* \"#utility.yul\":18308:18648   */\n    tag_291:\n        /* \"#utility.yul\":18510:18512   */\n      0x20\n        /* \"#utility.yul\":18492:18513   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18549:18551   */\n      0x10\n        /* \"#utility.yul\":18529:18547   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18522:18552   */\n      mstore\n      shl(0x84, 0x044617973206d757374206265203e203)\n        /* \"#utility.yul\":18583:18585   */\n      0x40\n        /* \"#utility.yul\":18568:18586   */\n      dup3\n      add\n        /* \"#utility.yul\":18561:18607   */\n      mstore\n        /* \"#utility.yul\":18639:18641   */\n      0x60\n        /* \"#utility.yul\":18624:18642   */\n      add\n      swap1\n        /* \"#utility.yul\":18482:18648   */\n      jump\t// out\n        /* \"#utility.yul\":18653:18995   */\n    tag_365:\n        /* \"#utility.yul\":18855:18857   */\n      0x20\n        /* \"#utility.yul\":18837:18858   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18894:18896   */\n      0x12\n        /* \"#utility.yul\":18874:18892   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18867:18897   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1bdcda5d1a5bdb9259)\n        /* \"#utility.yul\":18928:18930   */\n      0x40\n        /* \"#utility.yul\":18913:18931   */\n      dup3\n      add\n        /* \"#utility.yul\":18906:18954   */\n      mstore\n        /* \"#utility.yul\":18986:18988   */\n      0x60\n        /* \"#utility.yul\":18971:18989   */\n      add\n      swap1\n        /* \"#utility.yul\":18827:18995   */\n      jump\t// out\n        /* \"#utility.yul\":19000:19177   */\n    tag_82:\n        /* \"#utility.yul\":19146:19171   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":19134:19136   */\n      0x20\n        /* \"#utility.yul\":19119:19137   */\n      add\n      swap1\n        /* \"#utility.yul\":19101:19177   */\n      jump\t// out\n        /* \"#utility.yul\":19182:19430   */\n    tag_141:\n        /* \"#utility.yul\":19356:19381   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":19412:19414   */\n      0x20\n        /* \"#utility.yul\":19397:19415   */\n      dup3\n      add\n        /* \"#utility.yul\":19390:19424   */\n      mstore\n        /* \"#utility.yul\":19344:19346   */\n      0x40\n        /* \"#utility.yul\":19329:19347   */\n      add\n      swap1\n        /* \"#utility.yul\":19311:19430   */\n      jump\t// out\n        /* \"#utility.yul\":19435:19762   */\n    tag_352:\n        /* \"#utility.yul\":19645:19670   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":19701:19703   */\n      0x20\n        /* \"#utility.yul\":19686:19704   */\n      dup4\n      add\n        /* \"#utility.yul\":19679:19713   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":19744:19746   */\n      0x40\n        /* \"#utility.yul\":19729:19747   */\n      dup3\n      add\n        /* \"#utility.yul\":19722:19756   */\n      mstore\n        /* \"#utility.yul\":19633:19635   */\n      0x60\n        /* \"#utility.yul\":19618:19636   */\n      add\n      swap1\n        /* \"#utility.yul\":19600:19762   */\n      jump\t// out\n        /* \"#utility.yul\":20091:20275   */\n    tag_59:\n        /* \"#utility.yul\":20263:20267   */\n      0xff\n        /* \"#utility.yul\":20251:20268   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":20233:20269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":20221:20223   */\n      0x20\n        /* \"#utility.yul\":20206:20224   */\n      add\n      swap1\n        /* \"#utility.yul\":20188:20275   */\n      jump\t// out\n        /* \"#utility.yul\":20280:20408   */\n    tag_212:\n      0x00\n        /* \"#utility.yul\":20351:20352   */\n      dup3\n        /* \"#utility.yul\":20347:20353   */\n      not\n        /* \"#utility.yul\":20344:20345   */\n      dup3\n        /* \"#utility.yul\":20341:20354   */\n      gt\n        /* \"#utility.yul\":20338:20340   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":20357:20375   */\n      tag_717\n      tag_718\n      jump\t// in\n    tag_717:\n      pop\n        /* \"#utility.yul\":20393:20402   */\n      add\n      swap1\n        /* \"#utility.yul\":20328:20408   */\n      jump\t// out\n        /* \"#utility.yul\":20413:20617   */\n    tag_612:\n      0x00\n        /* \"#utility.yul\":20487:20491   */\n      0xff\n        /* \"#utility.yul\":20484:20485   */\n      dup3\n        /* \"#utility.yul\":20480:20492   */\n      and\n        /* \"#utility.yul\":20519:20523   */\n      0xff\n        /* \"#utility.yul\":20516:20517   */\n      dup5\n        /* \"#utility.yul\":20512:20524   */\n      and\n        /* \"#utility.yul\":20554:20557   */\n      dup1\n        /* \"#utility.yul\":20548:20552   */\n      0xff\n        /* \"#utility.yul\":20544:20558   */\n      sub\n        /* \"#utility.yul\":20539:20542   */\n      dup3\n        /* \"#utility.yul\":20536:20559   */\n      gt\n        /* \"#utility.yul\":20533:20535   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":20562:20580   */\n      tag_721\n      tag_718\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":20598:20611   */\n      add\n      swap4\n        /* \"#utility.yul\":20459:20617   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20622:20839   */\n    tag_225:\n      0x00\n        /* \"#utility.yul\":20688:20689   */\n      dup3\n        /* \"#utility.yul\":20678:20680   */\n      tag_723\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":20713:20744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":20767:20771   */\n      0x12\n        /* \"#utility.yul\":20764:20765   */\n      0x04\n        /* \"#utility.yul\":20757:20772   */\n      mstore\n        /* \"#utility.yul\":20795:20799   */\n      0x24\n        /* \"#utility.yul\":20720:20721   */\n      dup2\n        /* \"#utility.yul\":20785:20800   */\n      revert\n        /* \"#utility.yul\":20678:20680   */\n    tag_723:\n      pop\n        /* \"#utility.yul\":20824:20833   */\n      div\n      swap1\n        /* \"#utility.yul\":20668:20839   */\n      jump\t// out\n        /* \"#utility.yul\":20844:21012   */\n    tag_208:\n      0x00\n        /* \"#utility.yul\":20950:20951   */\n      dup2\n        /* \"#utility.yul\":20946:20947   */\n      0x00\n        /* \"#utility.yul\":20942:20948   */\n      not\n        /* \"#utility.yul\":20938:20952   */\n      div\n        /* \"#utility.yul\":20935:20936   */\n      dup4\n        /* \"#utility.yul\":20932:20953   */\n      gt\n        /* \"#utility.yul\":20927:20928   */\n      dup3\n        /* \"#utility.yul\":20920:20929   */\n      iszero\n        /* \"#utility.yul\":20913:20930   */\n      iszero\n        /* \"#utility.yul\":20909:20954   */\n      and\n        /* \"#utility.yul\":20906:20908   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":20957:20975   */\n      tag_726\n      tag_718\n      jump\t// in\n    tag_726:\n      pop\n        /* \"#utility.yul\":20997:21006   */\n      mul\n      swap1\n        /* \"#utility.yul\":20896:21012   */\n      jump\t// out\n        /* \"#utility.yul\":21017:21142   */\n    tag_323:\n      0x00\n        /* \"#utility.yul\":21085:21086   */\n      dup3\n        /* \"#utility.yul\":21082:21083   */\n      dup3\n        /* \"#utility.yul\":21079:21087   */\n      lt\n        /* \"#utility.yul\":21076:21078   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":21090:21108   */\n      tag_729\n      tag_718\n      jump\t// in\n    tag_729:\n      pop\n        /* \"#utility.yul\":21127:21136   */\n      sub\n      swap1\n        /* \"#utility.yul\":21066:21142   */\n      jump\t// out\n        /* \"#utility.yul\":21147:21282   */\n    tag_190:\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":21207:21224   */\n      dup3\n      eq\n        /* \"#utility.yul\":21204:21206   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":21227:21245   */\n      tag_732\n      tag_718\n      jump\t// in\n    tag_732:\n      pop\n        /* \"#utility.yul\":21274:21275   */\n      0x01\n        /* \"#utility.yul\":21263:21276   */\n      add\n      swap1\n        /* \"#utility.yul\":21194:21282   */\n      jump\t// out\n        /* \"#utility.yul\":21287:21462   */\n    tag_509:\n      0x00\n        /* \"#utility.yul\":21368:21372   */\n      0xff\n        /* \"#utility.yul\":21361:21366   */\n      dup3\n        /* \"#utility.yul\":21357:21373   */\n      and\n        /* \"#utility.yul\":21397:21401   */\n      0xff\n        /* \"#utility.yul\":21388:21395   */\n      dup2\n        /* \"#utility.yul\":21385:21402   */\n      eq\n        /* \"#utility.yul\":21382:21384   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":21405:21423   */\n      tag_735\n      tag_718\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":21454:21455   */\n      0x01\n        /* \"#utility.yul\":21441:21456   */\n      add\n      swap3\n        /* \"#utility.yul\":21332:21462   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21467:21594   */\n    tag_718:\n        /* \"#utility.yul\":21528:21538   */\n      0x4e487b71\n        /* \"#utility.yul\":21523:21526   */\n      0xe0\n        /* \"#utility.yul\":21519:21539   */\n      shl\n        /* \"#utility.yul\":21516:21517   */\n      0x00\n        /* \"#utility.yul\":21509:21540   */\n      mstore\n        /* \"#utility.yul\":21559:21563   */\n      0x11\n        /* \"#utility.yul\":21556:21557   */\n      0x04\n        /* \"#utility.yul\":21549:21564   */\n      mstore\n        /* \"#utility.yul\":21583:21587   */\n      0x24\n        /* \"#utility.yul\":21580:21581   */\n      0x00\n        /* \"#utility.yul\":21573:21588   */\n      revert\n        /* \"#utility.yul\":21599:21726   */\n    tag_641:\n        /* \"#utility.yul\":21660:21670   */\n      0x4e487b71\n        /* \"#utility.yul\":21655:21658   */\n      0xe0\n        /* \"#utility.yul\":21651:21671   */\n      shl\n        /* \"#utility.yul\":21648:21649   */\n      0x00\n        /* \"#utility.yul\":21641:21672   */\n      mstore\n        /* \"#utility.yul\":21691:21695   */\n      0x41\n        /* \"#utility.yul\":21688:21689   */\n      0x04\n        /* \"#utility.yul\":21681:21696   */\n      mstore\n        /* \"#utility.yul\":21715:21719   */\n      0x24\n        /* \"#utility.yul\":21712:21713   */\n      0x00\n        /* \"#utility.yul\":21705:21720   */\n      revert\n\n    auxdata: 0xa26469706673582212201aef4beb5884c496a14ae026a7952b3d6e8508963fde82035faf129edcb4e17764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:326:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0xA0 MSTORE PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xE0 DUP2 SWAP1 MSTORE PUSH2 0x100 MSTORE PUSH3 0x30 SWAP2 PUSH1 0x9 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A99 CODESIZE SUB DUP1 PUSH3 0x3A99 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x61 SWAP2 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP1 DUP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR DUP3 SSTORE SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP3 DUP4 SWAP1 MSTORE PUSH32 0xB6BA906FF52451A7A924E2EAEB8AEA3EBEE7350A8703E5E417EDB25358C7DCC1 SSTORE PUSH32 0x6CA6DCAFC04B6E03616746C3528366F990E332021E35D59275BE746D65CAE0A7 SWAP4 SWAP1 SWAP4 SSTORE PUSH32 0x1727C0104C2870C3003671480695F7DAB262614528B49265008E76FD3D48C5FE SWAP3 SWAP1 SWAP3 SSTORE PUSH32 0x5451FE6494362676DDB91456D9957C85D968E6F82956407C931A14C023049E6A SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 PUSH32 0xFB78EB295A86B096B5F095822BD250A277112BE4103EA4A7608D96ECA726B2C1 SSTORE PUSH2 0x16D SWAP1 MSTORE PUSH1 0x14 PUSH32 0xBBF8ADEA84D189C39869A372AB30AEBA9246EEA044EDC5A37AC100921B2C4E1 SSTORE PUSH3 0x27A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH3 0x221 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1F0 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1B0 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x21F JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1F0 JUMP JUMPDEST POP JUMPDEST POP PUSH3 0x22F SWAP3 SWAP2 POP PUSH3 0x233 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x273 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x380F DUP1 PUSH3 0x28A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98278EFB GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC2D3C677 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE45A57D0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE45A57D0 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF71AE56 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF6E88873 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF7B17D10 EQ PUSH2 0x4AC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xC2D3C677 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xC5B89C0A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD85C8966 EQ PUSH2 0x453 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAA7ED462 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xBD297178 EQ PUSH2 0x3FF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x98278EFB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x9D747BAD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x797C7F5F GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x797C7F5F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x875BB4E2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x656596A5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x6C8C2156 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x314 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x4850D2A2 EQ PUSH2 0x2BB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5AD3935 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E43EB27 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x21923BDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x28FE7031 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2E5A JUMP JUMPDEST PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x303F JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x217B JUMP JUMPDEST PUSH2 0x233 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x219C JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x24A8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x253 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x26B0 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 SWAP2 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP2 LT PUSH2 0x546 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x558 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x56A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x60 SWAP2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x674 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB56 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x753 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xB44 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH3 0x15180 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8E94 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP4 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x93A SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x9CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xA1F SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x344C JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SLOAD DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xB2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP6 POP POP POP POP POP PUSH2 0xB56 JUMP JUMPDEST DUP1 PUSH2 0xB4E DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D6 JUMP JUMPDEST POP DUP1 PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xBDB SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x30BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xCC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x347A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x4 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD DUP5 AND DUP11 OR SWAP1 SSTORE SWAP1 DUP8 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE SWAP8 DUP9 MSTORE DUP8 DUP6 ADD DUP8 DUP2 MSTORE TIMESTAMP SWAP5 DUP10 ADD SWAP5 DUP6 MSTORE DUP2 SLOAD DUP1 DUP6 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 SWAP1 SWAP7 KECCAK256 SWAP7 MLOAD SWAP6 SWAP1 SWAP5 MUL SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR DUP5 SSTORE SWAP1 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x9 DUP3 PUSH1 0x5 PUSH2 0x2BC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB56 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEF5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xF48 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12CA JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH3 0xD2F00 PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34EE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFCE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP2 POP PUSH1 0x64 PUSH2 0xFF0 DUP4 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1008 DUP3 DUP5 PUSH2 0x375B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x103D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108D SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x10CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1122 SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x11DA SWAP1 PUSH20 0x9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1296 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x12B4 SWAP3 DUP9 SWAP2 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP PUSH2 0xB56 JUMP JUMPDEST DUP1 PUSH2 0x12D4 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xECB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x130D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13DE JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1583 JUMPI DUP12 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x147E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH3 0x15180 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x1511 JUMPI POP DUP2 TIMESTAMP LT JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x64 DUP6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x152A SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP7 DUP9 DUP7 DUP9 SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP POP POP POP POP POP POP POP POP PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH2 0x157B DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1454 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34C5 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x15D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3538 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3361 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x167B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x167B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3271 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x16B0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x1732 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x18DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x1E72 JUMPI DUP4 ISZERO PUSH2 0x1C75 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x18FE DUP11 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1908 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1919 DUP12 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1958 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A8 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x19F9 SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4B SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x30EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1A92 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1AC2 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AF7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B47 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1B98 SWAP1 DUP11 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1C34 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1C64 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP3 SWAP5 POP PUSH2 0x1E6D SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1C9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1CBA SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1CF9 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1D9A SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E36 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E66 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1E98 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1EB7 SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1EC1 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1EF6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F46 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1F97 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FE9 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2033 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2063 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0xFF DUP3 AND PUSH2 0x2140 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x213D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x212B JUMPI DUP3 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2100 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2120 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x213D SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2135 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x208C JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2169 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18BF JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2206 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x222F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2259 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2282 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x242F JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2342 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2382 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2412 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2427 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22DB JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x24E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E94 DUP5 PUSH2 0x252E DUP4 DUP9 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2542 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP3 POP PUSH2 0x254E DUP4 DUP7 PUSH2 0x36DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x263A SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268C SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x26AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3332 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x26C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2873 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x270D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2751 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x27FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x285C JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x282C JUMPI DUP3 MLOAD PUSH2 0x2829 SWAP1 DUP8 PUSH2 0x36DF JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2854 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E3 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x286B SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26E0 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x289D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28D6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x28C3 PUSH2 0x2C56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x28BB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2BA1 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x290A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x29BB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x294E JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x29FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2B8A JUMPI DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 DUP6 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x2A7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2AA2 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2AAC SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE DUP11 DUP11 PUSH2 0x2B18 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x2B38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2B50 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2B82 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29E0 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2B99 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28DD JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0x2C46 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2C17 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C44 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2C17 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2C52 SWAP3 SWAP2 POP PUSH2 0x2CA8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C52 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CA9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CEE DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2D10 DUP4 PUSH2 0x2CBD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D2F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D3D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D60 JUMPI PUSH2 0x2D60 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0xA0 DUP2 ADD DUP7 LT ISZERO PUSH2 0x2D74 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP4 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2DA4 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D8F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D76 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CEE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE0 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E11 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E4F JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E33 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F79 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F54 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x2F8D DUP2 DUP8 PUSH2 0x2E20 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2FA2 DUP2 DUP6 PUSH2 0x2E20 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3032 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FC9 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x2CEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E20 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206E6F742072656769737465726564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD081C9959DA5CDD195C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x44697265637420726566657272616C207472616E73666572206661696C656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C203120726577617264207472616E73666572206661696C65640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C20726577617264207472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x72206C6576656C2031 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x616E207374616B65 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E67206475726174696F6E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x1C88191A5C9958DD PUSH1 0xC2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x30B7103932B3B4B9BA32B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x14DD185AD9481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x65722031302064617973 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x155CD95C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E20666565207472616E73666572206661696C656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x44617973206D757374206265203E203 PUSH1 0x84 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1BDCDA5D1A5BDB9259 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x36F2 JUMPI PUSH2 0x36F2 PUSH2 0x37AD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3714 PUSH2 0x37AD JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3737 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3756 JUMPI PUSH2 0x3756 PUSH2 0x37AD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x376D JUMPI PUSH2 0x376D PUSH2 0x37AD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3786 JUMPI PUSH2 0x3786 PUSH2 0x37AD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A4 PUSH2 0x37AD JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEF 0x4B 0xEB PC DUP5 0xC4 SWAP7 LOG1 0x4A 0xE0 0x26 0xA7 SWAP6 0x2B RETURNDATASIZE PUSH15 0x8508963FDE82035FAF129EDCB4E177 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "1844:46:0:-:0;384:20597;1844:46;1876:1;384:20597;1844:46;;;1879:1;1844:46;;1882:1;1844:46;;1885:1;1844:46;;;;;;;;;;384:20597;1844:46;:::i;:::-;;513:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;555:5;:18;;563:10;-1:-1:-1;;;;;;555:18:0;;;;;;;583:9;:30;;;;;-1:-1:-1;;;;;583:30:0;;;;;;629:5;;;;623:12;;:5;:12;;;;;;;:23;;;;:30;;-1:-1:-1;;623:30:0;-1:-1:-1;623:30:0;;;;;;664:10;:14;;;;;:18;692:14;:18;;;;721:14;:18;;;;749:15;:19;;;;796:1;778:15;:19;818:3;807:15;;825:2;807:15;:20;384:20597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;384:20597:0;;;-1:-1:-1;384:20597:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:1;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;:::-;384:20597:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21728:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "397:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:848:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "823:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "780:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "789:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "776:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "801:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:33:1"
															},
															"nodeType": "YulIf",
															"src": "769:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "887:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "896:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "904:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "889:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "889:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "889:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "859:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "870:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "855:20:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:42:1"
															},
															"nodeType": "YulIf",
															"src": "841:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "942:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "926:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "954:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "984:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:16:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "958:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1063:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1065:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1065:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1065:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1006:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1018:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1003:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1003:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1042:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1039:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1000:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:62:1"
															},
															"nodeType": "YulIf",
															"src": "997:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1101:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1105:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1125:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1136:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1129:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:20:1",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1162:9:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1216:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1225:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1233:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1218:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1218:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1218:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1201:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1186:19:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1207:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:32:1"
															},
															"nodeType": "YulIf",
															"src": "1180:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1251:15:1",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1260:6:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1255:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1322:254:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1362:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1349:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1349:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1418:26:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "1427:6:1"
																							},
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "1435:6:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1420:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:22:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1420:22:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "1392:5:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "1403:5:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1410:4:1",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "1399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1399:16:1"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "1389:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1389:27:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:35:1"
																		},
																		"nodeType": "YulIf",
																		"src": "1379:2:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1464:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1469:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:18:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1488:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1498:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1492:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1515:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1526:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1531:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1522:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1522:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1515:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1547:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1558:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1563:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1554:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1554:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1547:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1286:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:4:1",
																		"type": "",
																		"value": "0x05"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:11:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1295:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1297:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1306:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1309:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1302:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1297:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1279:3:1",
																"statements": []
															},
															"src": "1275:301:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1585:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1595:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint8_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													}
												],
												"src": "668:939:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1736:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1745:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1753:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1738:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:1"
															},
															"nodeType": "YulIf",
															"src": "1700:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1784:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1775:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1853:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1862:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1870:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1855:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1843:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1836:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1836:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1829:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:40:1"
															},
															"nodeType": "YulIf",
															"src": "1809:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1888:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1898:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1656:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1679:6:1",
														"type": ""
													}
												],
												"src": "1612:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2039:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2047:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:1"
															},
															"nodeType": "YulIf",
															"src": "1994:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2065:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2088:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2075:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1950:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1961:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:1",
														"type": ""
													}
												],
												"src": "1914:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2236:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2245:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2253:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2238:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2238:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2211:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:32:1"
															},
															"nodeType": "YulIf",
															"src": "2200:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2287:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2281:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2156:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2167:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2179:6:1",
														"type": ""
													}
												],
												"src": "2109:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2441:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2450:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2458:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2443:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2443:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:32:1"
															},
															"nodeType": "YulIf",
															"src": "2405:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2476:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2518:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2556:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2528:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2353:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2364:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2376:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2384:6:1",
														"type": ""
													}
												],
												"src": "2308:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:376:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2668:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2662:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2652:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2690:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2711:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2721:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2715:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2734:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2745:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2750:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2780:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2787:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2766:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2799:12:1",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "2808:3:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2803:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2869:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2890:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2901:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2895:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2883:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2883:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2883:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2922:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2933:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2938:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2929:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2929:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2922:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2954:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2968:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2976:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2964:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2964:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2954:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2831:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2828:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2842:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2844:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2853:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2856:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2849:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2849:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2844:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2824:3:1",
																"statements": []
															},
															"src": "2820:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2998:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3005:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2998:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2615:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2622:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2630:3:1",
														"type": ""
													}
												],
												"src": "2571:443:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3130:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3172:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3203:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3208:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3199:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3199:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3212:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3195:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3183:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3089:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3100:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3111:4:1",
														"type": ""
													}
												],
												"src": "3019:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3394:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3394:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3429:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3452:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3433:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3474:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3497:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3485:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3467:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3541:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3537:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3589:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3562:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3337:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3348:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3356:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3375:4:1",
														"type": ""
													}
												],
												"src": "3227:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3736:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3746:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3788:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3819:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3824:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3815:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3815:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3828:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3852:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3868:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3697:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3708:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3716:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3727:4:1",
														"type": ""
													}
												],
												"src": "3607:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4043:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4053:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4053:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4095:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4110:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4126:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4131:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4122:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4122:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4135:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4118:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4118:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4175:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4213:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4218:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4191:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3996:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4007:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4015:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4023:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4034:4:1",
														"type": ""
													}
												],
												"src": "3886:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4415:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4468:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4483:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4499:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4504:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4495:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4495:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4508:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4491:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4491:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4548:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "4648:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4641:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4641:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4634:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4360:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4371:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4379:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4387:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4395:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4406:4:1",
														"type": ""
													}
												],
												"src": "4236:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4959:424:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4969:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4969:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5012:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5027:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5043:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5048:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5039:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5039:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5052:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5035:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5087:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5092:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5065:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5119:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5130:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5115:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5135:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5173:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5158:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5151:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5216:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5201:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5222:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5194:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5260:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5266:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5238:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5293:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5304:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5282:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5348:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value7",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5361:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5361:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5354:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4872:9:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4883:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4891:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4899:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4907:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4915:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4931:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4950:4:1",
														"type": ""
													}
												],
												"src": "4668:715:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5695:745:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5705:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5723:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5709:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5746:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5776:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5787:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5780:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5802:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5822:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5816:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5806:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5845:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5869:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5869:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5904:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5914:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5908:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5927:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5945:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5953:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5931:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5965:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5974:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6036:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6057:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6072:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6066:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6066:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6089:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6094:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6085:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6085:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6098:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "6081:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6081:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6062:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6062:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6050:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6050:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6050:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6115:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6126:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6131:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6122:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6122:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6115:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6147:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6161:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6169:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6157:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6157:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6147:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5998:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6001:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5995:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6009:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6011:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6020:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6023:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6016:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6016:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6011:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5991:3:1",
																"statements": []
															},
															"src": "5987:195:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6202:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6213:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6222:3:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6227:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6191:47:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6247:61:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6296:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6304:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6261:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6261:47:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "6251:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "6348:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6356:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6376:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6419:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6384:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:50:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6376:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5648:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5659:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5667:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5686:4:1",
														"type": ""
													}
												],
												"src": "5388:1052:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6660:1036:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6670:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6680:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6674:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6691:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6709:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6720:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6695:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6750:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6732:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6732:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6762:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6773:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6766:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6788:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6808:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6792:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6831:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6839:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6824:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6855:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6865:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6859:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6876:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6887:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6898:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6910:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6928:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6936:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6924:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6914:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6948:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6957:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6952:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7019:651:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7033:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7049:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7043:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "7037:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7069:29:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7087:3:1",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7092:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7083:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7083:11:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7096:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7079:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7079:19:1"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "7073:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7118:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7133:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7127:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7127:9:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7138:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7123:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7123:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7111:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7166:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7171:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7162:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7162:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7186:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7190:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7182:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7182:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7176:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7176:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7155:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7155:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7219:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "7224:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7215:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7215:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7239:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "7243:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7235:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7235:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7229:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7229:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7208:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7208:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7208:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7261:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7271:4:1",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "7265:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7299:3:1"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7304:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7295:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7295:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7319:2:1"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "7323:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7315:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7315:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7309:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7309:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7288:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7288:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7341:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7351:4:1",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "7345:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7379:3:1"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "7384:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7375:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7375:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "7403:2:1"
																										},
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "7407:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7399:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7399:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7393:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7393:18:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7413:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7389:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7389:27:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7368:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7368:49:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7430:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7440:4:1",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "7434:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7468:3:1"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "7473:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7464:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7464:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7488:2:1"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "7492:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7484:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7484:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7478:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7478:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7457:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7457:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7510:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7520:4:1",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "7514:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7548:3:1"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "7553:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7544:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7544:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "7572:2:1"
																										},
																										{
																											"name": "_8",
																											"nodeType": "YulIdentifier",
																											"src": "7576:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7568:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7568:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7562:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7562:18:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7582:4:1",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7558:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7537:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7537:51:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:51:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7601:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7612:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7617:4:1",
																					"type": "",
																					"value": "0xe0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7608:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7608:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7601:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7635:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7649:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7657:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7645:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7645:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6981:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6984:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6978:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6978:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6992:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6994:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7003:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7006:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6999:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6999:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6994:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6974:3:1",
																"statements": []
															},
															"src": "6970:700:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7679:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7687:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6629:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6640:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6651:4:1",
														"type": ""
													}
												],
												"src": "6445:1251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7862:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7892:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7900:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:62:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7892:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7821:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7843:4:1",
														"type": ""
													}
												],
												"src": "7701:267:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8068:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8120:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8138:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8138:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8131:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8131:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8037:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8059:4:1",
														"type": ""
													}
												],
												"src": "7973:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8279:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8331:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8346:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8362:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8367:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8358:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8358:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8371:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8354:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8354:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8324:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$29__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8248:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8270:4:1",
														"type": ""
													}
												],
												"src": "8165:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8560:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8622:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8627:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8600:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8661:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8666:25:1",
																		"type": "",
																		"value": "Referrer not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8639:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8701:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8713:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8724:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8709:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8709:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8701:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8537:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8551:4:1",
														"type": ""
													}
												],
												"src": "8386:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8979:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9002:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9013:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8998:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9018:16:1",
																		"type": "",
																		"value": "Not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8991:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9044:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9067:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9044:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8889:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8903:4:1",
														"type": ""
													}
												],
												"src": "8738:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9255:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9265:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9356:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9341:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9361:23:1",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9334:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9334:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9394:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9417:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9394:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9232:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9246:4:1",
														"type": ""
													}
												],
												"src": "9081:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9605:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9615:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9615:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9667:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9652:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9672:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9645:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9695:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9706:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9691:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9711:33:1",
																		"type": "",
																		"value": "Direct referral transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9684:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9684:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9754:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9766:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9777:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9754:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9582:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9596:4:1",
														"type": ""
													}
												],
												"src": "9431:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9965:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9982:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9993:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10027:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10012:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10005:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10055:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10066:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10071:32:1",
																		"type": "",
																		"value": "Level 1 reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10044:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10113:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10136:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9942:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9956:4:1",
														"type": ""
													}
												],
												"src": "9791:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10324:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10334:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10334:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10371:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10364:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10364:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10414:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10425:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10410:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10430:34:1",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10403:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10403:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10474:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10482:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10474:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10301:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10315:4:1",
														"type": ""
													}
												],
												"src": "10150:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10685:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10702:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10713:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10747:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10732:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10752:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10786:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10791:31:1",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10764:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10764:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10832:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10844:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10855:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10840:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10840:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10832:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10662:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10676:4:1",
														"type": ""
													}
												],
												"src": "10511:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11043:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11071:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11105:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11090:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11110:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11083:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11149:20:1",
																		"type": "",
																		"value": "Already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11122:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11122:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11179:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11191:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11187:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11187:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11179:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11020:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11034:4:1",
														"type": ""
													}
												],
												"src": "10869:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11390:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11407:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11400:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11400:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11452:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11437:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11430:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11430:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11491:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11496:30:1",
																		"type": "",
																		"value": "Level reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11469:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11469:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11536:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11548:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11559:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11544:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11367:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11381:4:1",
														"type": ""
													}
												],
												"src": "11216:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11764:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11775:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11757:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11757:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11814:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11787:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11853:34:1",
																		"type": "",
																		"value": "Insufficient contract balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11908:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11924:11:1",
																		"type": "",
																		"value": "r level 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11897:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11945:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11957:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11968:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11945:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ad7fc72a5fc2e73c5922d3eef96b67678198cd06175204a5cb6a0d211807e05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11724:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11738:4:1",
														"type": ""
													}
												],
												"src": "11573:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12157:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12185:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12167:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12219:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12204:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12224:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12197:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12197:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12258:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12243:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12263:34:1",
																		"type": "",
																		"value": "Referrer must stake before you c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12236:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12236:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12329:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12314:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12334:10:1",
																		"type": "",
																		"value": "an stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12307:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12307:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12366:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12377:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12362:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12354:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12148:4:1",
														"type": ""
													}
												],
												"src": "11983:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12566:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12583:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12576:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12576:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12617:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12628:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12613:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12633:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12606:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12606:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12667:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12652:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12672:25:1",
																		"type": "",
																		"value": "Only owner can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12645:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12645:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12707:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12730:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12715:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12707:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12543:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12557:4:1",
														"type": ""
													}
												],
												"src": "12392:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12918:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12935:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12946:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12928:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12928:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12980:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12965:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12985:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12958:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12958:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13008:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13019:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13004:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13024:34:1",
																		"type": "",
																		"value": "Stake not found or already claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12997:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12997:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13079:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13090:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13075:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13095:4:1",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13068:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13109:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13117:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13109:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12895:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12909:4:1",
														"type": ""
													}
												],
												"src": "12744:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13321:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13338:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13349:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13331:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13331:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13372:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13368:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13388:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13361:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13361:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13422:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13407:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13427:23:1",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13400:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13400:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13460:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13472:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13483:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13460:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13298:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13312:4:1",
														"type": ""
													}
												],
												"src": "13147:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13671:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13688:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13699:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13681:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13681:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13722:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13733:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13718:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13738:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13711:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13711:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13772:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13757:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13777:26:1",
																		"type": "",
																		"value": "Invalid staking duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13750:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13836:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13813:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13648:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13662:4:1",
														"type": ""
													}
												],
												"src": "13497:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14024:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14052:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14034:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14034:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14071:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14091:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14110:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14130:27:1",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14103:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14103:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14167:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14190:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14175:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14167:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14015:4:1",
														"type": ""
													}
												],
												"src": "13850:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14378:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14395:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14388:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14440:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14425:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14445:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14479:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14464:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14484:34:1",
																		"type": "",
																		"value": "Insufficient contract balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14457:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14550:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14555:10:1",
																		"type": "",
																		"value": "r direct"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14528:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14575:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14587:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14598:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14583:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14583:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14575:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dcabded8f9dcd67a0e25713e7a9c0f41408268fe2d1863405487c387ca8473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14355:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14369:4:1",
														"type": ""
													}
												],
												"src": "14204:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14787:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14804:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14815:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14797:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14797:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14849:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14834:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14827:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14827:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14877:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14888:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14893:34:1",
																		"type": "",
																		"value": "Staking period not yet completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14866:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14937:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14949:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14960:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14945:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14937:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14764:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14778:4:1",
														"type": ""
													}
												],
												"src": "14613:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15148:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15165:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15176:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15158:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15158:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15210:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15195:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15215:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15188:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15188:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15238:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15249:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15234:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15254:22:1",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15227:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15227:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15286:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15298:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15309:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15286:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15125:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15139:4:1",
														"type": ""
													}
												],
												"src": "14974:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15497:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15507:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15507:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15559:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15544:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15564:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15537:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15537:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15598:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15583:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15603:34:1",
																		"type": "",
																		"value": "Referrer must stake before you c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15576:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15576:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15669:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15654:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15674:13:1",
																		"type": "",
																		"value": "an register"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15647:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15647:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15697:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15709:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15720:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15705:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15697:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15474:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15488:4:1",
														"type": ""
													}
												],
												"src": "15323:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15909:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15926:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15937:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15919:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15919:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15956:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15976:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15949:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16010:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15995:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16015:17:1",
																		"type": "",
																		"value": "Stake not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15988:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15988:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16042:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16065:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16050:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16042:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15886:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15900:4:1",
														"type": ""
													}
												],
												"src": "15735:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16253:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16270:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16263:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16263:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16304:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16315:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16300:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16320:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16293:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16293:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16293:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16343:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16354:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16339:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16359:34:1",
																		"type": "",
																		"value": "Emergency claim allowed only aft"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16332:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16332:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16414:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16425:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16410:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16430:12:1",
																		"type": "",
																		"value": "er 10 days"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16403:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16403:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16452:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16475:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16460:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16452:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16230:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16244:4:1",
														"type": ""
													}
												],
												"src": "16079:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16664:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16711:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16731:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16704:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16750:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16770:34:1",
																		"type": "",
																		"value": "Stake amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16743:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16743:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16836:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16821:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16841:5:1",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16814:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16814:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16856:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16868:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16879:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16864:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16856:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16655:4:1",
														"type": ""
													}
												],
												"src": "16490:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17068:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17085:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17096:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17078:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17078:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17119:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17130:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17115:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17135:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17108:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17108:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17169:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17154:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17174:22:1",
																		"type": "",
																		"value": "User transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17147:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17147:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17206:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17229:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17214:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17206:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17045:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17059:4:1",
														"type": ""
													}
												],
												"src": "16894:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17417:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17434:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17445:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17427:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17427:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17464:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17484:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17457:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17457:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17518:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17503:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17523:27:1",
																		"type": "",
																		"value": "Admin fee transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17496:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17496:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17560:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17572:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17583:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17568:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17568:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17560:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17394:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17408:4:1",
														"type": ""
													}
												],
												"src": "17243:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17771:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17788:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17799:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17781:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17781:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17822:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17833:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17818:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17818:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17838:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17811:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17811:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17811:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17872:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17857:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17877:31:1",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17850:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17850:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17930:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17941:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17926:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17926:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17918:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17748:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17762:4:1",
														"type": ""
													}
												],
												"src": "17597:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18129:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18146:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18157:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18139:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18139:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18180:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18191:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18176:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18196:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18169:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18230:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18235:26:1",
																		"type": "",
																		"value": "Only owner can call this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18208:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18208:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18271:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18283:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18294:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18279:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18271:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18106:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18120:4:1",
														"type": ""
													}
												],
												"src": "17955:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18482:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18499:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18510:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18492:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18492:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18544:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18529:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18549:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18522:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18522:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18572:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18583:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18568:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18588:18:1",
																		"type": "",
																		"value": "Days must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18561:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18561:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18616:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18628:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18639:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18624:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18616:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18459:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18473:4:1",
														"type": ""
													}
												],
												"src": "18308:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18827:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18844:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18855:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18837:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18837:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18878:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18889:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18874:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18894:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18867:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18867:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18867:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18928:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18913:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18933:20:1",
																		"type": "",
																		"value": "Invalid positionId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18906:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18906:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18963:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18975:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18986:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18971:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18963:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18804:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18818:4:1",
														"type": ""
													}
												],
												"src": "18653:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19101:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19111:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19119:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19111:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19153:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19164:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19146:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19146:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19070:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19081:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19092:4:1",
														"type": ""
													}
												],
												"src": "19000:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19311:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19321:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19333:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19344:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19329:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19329:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19321:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19363:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19374:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19356:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19356:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19401:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19412:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19397:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19417:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19390:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19390:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19272:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19283:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19291:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19302:4:1",
														"type": ""
													}
												],
												"src": "19182:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19600:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19633:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19610:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19652:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19663:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19645:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19645:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19686:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19706:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19679:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19679:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19733:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19744:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19729:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19749:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19722:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19722:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19553:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19564:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19572:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19580:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19591:4:1",
														"type": ""
													}
												],
												"src": "19435:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19924:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19934:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19946:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19957:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19942:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19934:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19976:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19987:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19969:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19969:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20010:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20030:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20003:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20003:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20068:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20053:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20046:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20046:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19877:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19888:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19896:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19904:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19915:4:1",
														"type": ""
													}
												],
												"src": "19767:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20188:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20198:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20210:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20221:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20206:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20198:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20240:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20255:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20263:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20251:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20233:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20233:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20157:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20168:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20179:4:1",
														"type": ""
													}
												],
												"src": "20091:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20328:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20355:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20357:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20357:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20357:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20344:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20351:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20347:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20341:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20341:13:1"
															},
															"nodeType": "YulIf",
															"src": "20338:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20386:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20397:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20400:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20393:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20386:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20311:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20314:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20320:3:1",
														"type": ""
													}
												],
												"src": "20280:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20459:158:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20469:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20484:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20487:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20480:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "20473:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20501:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20516:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20519:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20512:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "20505:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20560:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20562:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20562:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20562:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "20539:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20548:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "20554:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20544:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20536:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20536:23:1"
															},
															"nodeType": "YulIf",
															"src": "20533:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20591:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "20602:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "20607:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20598:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20598:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20591:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20442:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20445:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20451:3:1",
														"type": ""
													}
												],
												"src": "20413:204:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20668:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20699:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "20720:1:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20727:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20732:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "20723:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20723:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20713:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20713:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20764:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20767:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20757:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20757:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20757:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "20792:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20795:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20785:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20785:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20785:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20688:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20681:9:1"
															},
															"nodeType": "YulIf",
															"src": "20678:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20819:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20828:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20831:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20824:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20819:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20653:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20656:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20662:1:1",
														"type": ""
													}
												],
												"src": "20622:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20896:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20955:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20957:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20957:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20957:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20927:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20920:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20920:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20913:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20913:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20935:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20946:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "20942:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20942:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20950:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20938:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20938:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20932:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20932:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20909:45:1"
															},
															"nodeType": "YulIf",
															"src": "20906:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20986:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21001:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21004:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20997:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20986:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20875:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20878:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20884:7:1",
														"type": ""
													}
												],
												"src": "20844:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21066:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21088:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21090:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21090:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21090:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21082:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21085:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21079:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21079:8:1"
															},
															"nodeType": "YulIf",
															"src": "21076:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21119:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21131:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21134:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "21127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21127:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "21119:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21048:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21051:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "21057:4:1",
														"type": ""
													}
												],
												"src": "21017:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21194:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21225:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21227:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21227:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21227:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21210:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21221:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21217:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21207:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21207:17:1"
															},
															"nodeType": "YulIf",
															"src": "21204:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21256:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21267:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21274:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21263:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21256:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21176:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21186:3:1",
														"type": ""
													}
												],
												"src": "21147:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21332:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21342:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21361:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21368:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21357:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "21346:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21403:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21405:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21405:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21405:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "21388:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21397:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21385:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21385:17:1"
															},
															"nodeType": "YulIf",
															"src": "21382:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21434:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "21445:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21454:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21441:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21434:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21314:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21324:3:1",
														"type": ""
													}
												],
												"src": "21287:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21499:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21516:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21523:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21528:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21519:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21509:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21509:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21556:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21559:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21549:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21549:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21549:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21580:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21583:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21573:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21573:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21467:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21631:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21648:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21655:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21660:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21651:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21641:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21641:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21641:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21688:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21691:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21681:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21681:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21712:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21715:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21705:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21705:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "21599:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_uint8_$5_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value0, value0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := headStart\n        if gt(add(headStart, 160), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, 0x05) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n            mstore(dst, value)\n            let _1 := 0x20\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value1, pos)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value2, tail_2)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := sub(shl(160, 1), 1)\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _5 := 0x60\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            let _6 := 0x80\n            mstore(add(pos, _6), and(mload(add(_3, _6)), _4))\n            let _7 := 0xa0\n            mstore(add(pos, _7), mload(add(_3, _7)))\n            let _8 := 0xc0\n            mstore(add(pos, _8), and(mload(add(_3, _8)), 0xff))\n            pos := add(pos, 0xe0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$29__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Referrer not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Cannot refer yourself\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Direct referral transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Level 1 reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Level reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ad7fc72a5fc2e73c5922d3eef96b67678198cd06175204a5cb6a0d211807e05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Insufficient contract balance fo\")\n        mstore(add(headStart, 96), \"r level 1\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Referrer must stake before you c\")\n        mstore(add(headStart, 96), \"an stake\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only owner can withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Stake not found or already claim\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid staking duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9dcabded8f9dcd67a0e25713e7a9c0f41408268fe2d1863405487c387ca8473b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Insufficient contract balance fo\")\n        mstore(add(headStart, 96), \"r direct\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Staking period not yet completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDT transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Referrer must stake before you c\")\n        mstore(add(headStart, 96), \"an register\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Stake not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Emergency claim allowed only aft\")\n        mstore(add(headStart, 96), \"er 10 days\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"User transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Admin fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient contract balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Only owner can call this\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Days must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid positionId\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98278EFB GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC2D3C677 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE45A57D0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE45A57D0 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF71AE56 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF6E88873 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF7B17D10 EQ PUSH2 0x4AC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xC2D3C677 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xC5B89C0A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD85C8966 EQ PUSH2 0x453 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAA7ED462 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xBD297178 EQ PUSH2 0x3FF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x98278EFB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x9D747BAD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x797C7F5F GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x797C7F5F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x875BB4E2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x656596A5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x6C8C2156 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x314 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x4850D2A2 EQ PUSH2 0x2BB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5AD3935 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E43EB27 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x21923BDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x28FE7031 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2E5A JUMP JUMPDEST PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x303F JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x217B JUMP JUMPDEST PUSH2 0x233 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x219C JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x24A8 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x253 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x26B0 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 SWAP2 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP2 LT PUSH2 0x546 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x558 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x56A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x60 SWAP2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x674 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB56 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x753 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xB44 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH3 0x15180 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8E94 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP4 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x93A SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x9CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xA1F SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x344C JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xADB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SLOAD DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xB2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP6 POP POP POP POP POP PUSH2 0xB56 JUMP JUMPDEST DUP1 PUSH2 0xB4E DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D6 JUMP JUMPDEST POP DUP1 PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xBDB SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x30BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xCC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x347A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x4 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD DUP5 AND DUP11 OR SWAP1 SSTORE SWAP1 DUP8 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE SWAP8 DUP9 MSTORE DUP8 DUP6 ADD DUP8 DUP2 MSTORE TIMESTAMP SWAP5 DUP10 ADD SWAP5 DUP6 MSTORE DUP2 SLOAD DUP1 DUP6 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 SWAP1 SWAP7 KECCAK256 SWAP7 MLOAD SWAP6 SWAP1 SWAP5 MUL SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR DUP5 SSTORE SWAP1 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x9 DUP3 PUSH1 0x5 PUSH2 0x2BC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB56 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEF5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xF48 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12CA JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH3 0xD2F00 PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34EE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFCE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP2 POP PUSH1 0x64 PUSH2 0xFF0 DUP4 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1008 DUP3 DUP5 PUSH2 0x375B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x103D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108D SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x10CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1122 SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x11DA SWAP1 PUSH20 0x9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1296 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x12B4 SWAP3 DUP9 SWAP2 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP PUSH2 0xB56 JUMP JUMPDEST DUP1 PUSH2 0x12D4 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xECB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x130D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13DE JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1583 JUMPI DUP12 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x147E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH3 0x15180 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x1511 JUMPI POP DUP2 TIMESTAMP LT JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x64 DUP6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x152A SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP7 DUP9 DUP7 DUP9 SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP POP POP POP POP POP POP POP POP PUSH2 0x159C JUMP JUMPDEST DUP1 PUSH2 0x157B DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1454 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34C5 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x15D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3538 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3361 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x167B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x167B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3271 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x16B0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x1732 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x18DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x1E72 JUMPI DUP4 ISZERO PUSH2 0x1C75 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x18FE DUP11 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1908 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1919 DUP12 PUSH1 0x5 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1958 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A8 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x19F9 SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4B SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x30EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1A92 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1AC2 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AF7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B47 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1B98 SWAP1 DUP11 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1C34 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1C64 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP3 SWAP5 POP PUSH2 0x1E6D SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1C9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1CBA SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1CF9 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1D9A SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E36 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E66 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH2 0x206A JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1E98 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1EB7 SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x1EC1 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1EF6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F46 SWAP2 SWAP1 PUSH2 0x2DE7 JUMP JUMPDEST LT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1F97 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FE9 SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2033 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2063 SWAP1 DUP5 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0xFF DUP3 AND PUSH2 0x2140 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x213D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x212B JUMPI DUP3 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2100 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2120 SWAP2 SWAP1 PUSH2 0x36DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x213D SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2135 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x208C JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2169 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18BF JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2206 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x222F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2259 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2282 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x242F JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2342 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2382 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2412 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2427 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22DB JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x24E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E94 DUP5 PUSH2 0x252E DUP4 DUP9 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2542 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP3 POP PUSH2 0x254E DUP4 DUP7 PUSH2 0x36DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x263A SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268C SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x26AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3332 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x26C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2873 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x270D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2751 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x27FE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x285C JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x282C JUMPI DUP3 MLOAD PUSH2 0x2829 SWAP1 DUP8 PUSH2 0x36DF JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2854 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E3 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x286B SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26E0 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x289D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28D6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x28C3 PUSH2 0x2C56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x28BB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2BA1 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x290A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x29BB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x294E JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x29FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2B8A JUMPI DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 DUP6 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x2A7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2AA2 SWAP2 SWAP1 PUSH2 0x373C JUMP JUMPDEST PUSH2 0x2AAC SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE DUP11 DUP11 PUSH2 0x2B18 DUP2 PUSH2 0x3772 JUMP JUMPDEST SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x2B38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2B50 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A1D JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2B82 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29E0 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2B99 SWAP1 PUSH2 0x3772 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28DD JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0x2C46 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2C17 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C44 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2C17 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2C52 SWAP3 SWAP2 POP PUSH2 0x2CA8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C52 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CA9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CEE DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2D10 DUP4 PUSH2 0x2CBD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D2F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D3D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D60 JUMPI PUSH2 0x2D60 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0xA0 DUP2 ADD DUP7 LT ISZERO PUSH2 0x2D74 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP4 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2DA4 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D8F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D76 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CEE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE0 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E11 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E4F JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E33 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F79 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F54 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x2F8D DUP2 DUP8 PUSH2 0x2E20 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2FA2 DUP2 DUP6 PUSH2 0x2E20 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3032 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FC9 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x2CEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E20 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206E6F742072656769737465726564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD081C9959DA5CDD195C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x44697265637420726566657272616C207472616E73666572206661696C656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C203120726577617264207472616E73666572206661696C65640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C20726577617264207472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x72206C6576656C2031 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x616E207374616B65 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E67206475726174696F6E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x1C88191A5C9958DD PUSH1 0xC2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x30B7103932B3B4B9BA32B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x14DD185AD9481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x65722031302064617973 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x155CD95C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E20666565207472616E73666572206661696C656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x44617973206D757374206265203E203 PUSH1 0x84 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1BDCDA5D1A5BDB9259 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x36F2 JUMPI PUSH2 0x36F2 PUSH2 0x37AD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3714 JUMPI PUSH2 0x3714 PUSH2 0x37AD JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3737 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3756 JUMPI PUSH2 0x3756 PUSH2 0x37AD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x376D JUMPI PUSH2 0x376D PUSH2 0x37AD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3786 JUMPI PUSH2 0x3786 PUSH2 0x37AD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A4 PUSH2 0x37AD JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEF 0x4B 0xEB PC DUP5 0xC4 SWAP7 LOG1 0x4A 0xE0 0x26 0xA7 SWAP6 0x2B RETURNDATASIZE PUSH15 0x8508963FDE82035FAF129EDCB4E177 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "384:20597:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:57;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1643:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17951:248::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16138:354::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11567:1518::-;;;;;;:::i;:::-;;:::i;:::-;;20279:162;;;;;;:::i;:::-;;:::i;2252:736::-;;;;;;:::i;:::-;;:::i;11248:164::-;;;;;;:::i;:::-;;:::i;16825:117::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11447:114::-;;;;;;:::i;:::-;;:::i;13091:1661::-;;;;;;:::i;:::-;;:::i;10614:120::-;;;:::i;14758:1374::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;6774:3835::-;;;;;;:::i;:::-;;:::i;1700:45::-;;;;;;:::i;:::-;;:::i;424:20::-;;;:::i;16498:158::-;;;;;;:::i;:::-;;:::i;20564:96::-;;;:::i;16950:744::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1813:25::-;;;;;;:::i;:::-;;:::i;1537:37::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;483:23::-;;;:::i;16662:157::-;;;;;;:::i;:::-;;:::i;10740:475::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;17700:117::-;;;;;;:::i;:::-;;:::i;20447:111::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;20666:313::-;;;;;;:::i;:::-;;:::i;1844:46::-;;;;;;:::i;:::-;;:::i;18205:2068::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1751:55::-;;;;;;:::i;:::-;;:::i;450:27::-;;;:::i;1580:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1580:57:0;;;;-1:-1:-1;1580:57:0;;-1:-1:-1;1580:57:0;:::o;1643:51::-;;;;;;;;;;;;-1:-1:-1;;;;;1643:51:0;;:::o;17951:248::-;-1:-1:-1;;;;;18043:21:0;;18010:5;18043:21;;;:15;:21;;;;;:28;18094:2;18085:11;;18081:25;;18105:1;18098:8;;;;;18081:25;18129:1;18120:5;:10;18116:24;;18139:1;18132:8;;;;;18116:24;18163:1;18154:5;:10;18150:24;;18173:1;18166:8;;;;;18150:24;18191:1;18184:8;;;17951:248;;;;:::o;16138:354::-;-1:-1:-1;;;;;16272:12:0;;16256:13;16272:12;;;:5;:12;;;;;:19;;:26;16224:16;;16272:26;16331:20;;;;;;-1:-1:-1;;;16331:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16331:20:0;;16308:43;;16367:9;16362:103;16386:5;16382:1;:9;16362:103;;;-1:-1:-1;;;;;16421:12:0;;;;;;:5;:12;;;;;:19;;:22;;16441:1;;16421:22;;;;-1:-1:-1;;;16421:22:0;;;;;;;;;;;;;;;;;;;:33;;;16412:3;16416:1;16412:6;;;;;;-1:-1:-1;;;16412:6:0;;;;;;;;;;;;;;;;;;:42;16393:3;;;;:::i;:::-;;;;16362:103;;;-1:-1:-1;16482:3:0;16138:354;-1:-1:-1;;;16138:354:0:o;11567:1518::-;2076:10;2070:17;;;;:5;:17;;;;;:28;;;;;2062:55;;;;-1:-1:-1;;;2062:55:0;;;;;;;:::i;:::-;;;;;;;;;11659:10:::1;11637:19;11699:18:::0;;;:5:::1;:18;::::0;;;;;11752:11:::1;::::0;::::1;::::0;11637:19;11803:1213:::1;11827:13:::0;;11823:17;::::1;11803:1213;;;11889:11;11865:6;11872:1;11865:9;;;;;;-1:-1:-1::0;;;11865:9:0::1;;;;;;;;;;;;;;;;;;;:20;;;:35;:57;;;;;11905:6;11912:1;11905:9;;;;;;-1:-1:-1::0;;;11905:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:17:::1;:9;::::0;;::::1;;:17;::::0;::::1;;11904:18;11865:57;11861:1145;;;12037:6;12044:1;12037:9;;;;;;-1:-1:-1::0;;;12037:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;12057:6;12037:26;;;;:::i;:::-;12014:6;12021:1;12014:9;;;;;;-1:-1:-1::0;;;12014:9:0::1;;;;;;;;;;;;;;;;;;;:19;;;:50;;;;:::i;:::-;11971:15;:93;;11942:196;;;;-1:-1:-1::0;;;11942:196:0::1;;;;;;;:::i;:::-;12157:11;12171:10;:29;12182:6;12189:1;12182:9;;;;;;-1:-1:-1::0;;;12182:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;12171:29;;;;;;;;;;;;12157:43;;12218:16;12325:9;12303:6;12310:1;12303:9;;;;;;-1:-1:-1::0;;;12303:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;12277:3;12238:6;12245:1;12238:9;;;;;;-1:-1:-1::0;;;12238:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;:42;;;;:::i;:::-;:82;;;;:::i;:::-;12237:98;;;;:::i;:::-;12218:117;;12353:19;12394:8;12375:6;12382:1;12375:9;;;;;;-1:-1:-1::0;;;12375:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;:27;;;;:::i;:::-;12450:9;::::0;:34:::1;::::0;-1:-1:-1;;;12450:34:0;;12353:49;;-1:-1:-1;12353:49:0;;-1:-1:-1;;;;;12450:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;12478:4:::1;::::0;12450:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;12421:149;;;;-1:-1:-1::0;;;12421:149:0::1;;;;;;;:::i;:::-;12609:4;12589:6;12596:1;12589:9;;;;;;-1:-1:-1::0;;;12589:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:17;;:24:::0;;-1:-1:-1;;12589:24:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;12646:9:::1;::::0;:44:::1;::::0;-1:-1:-1;;;12646:44:0;;-1:-1:-1;;;;;12646:9:0;;::::1;::::0;:18:::1;::::0;:44:::1;::::0;12665:11;;12678;;12646:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12631:59;;12716:7;12708:40;;;;-1:-1:-1::0;;;12708:40:0::1;;;;;;;:::i;:::-;12801:11;-1:-1:-1::0;;;;;12772:165:0::1;;12834:6;12841:1;12834:9;;;;;;-1:-1:-1::0;;;12834:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;12873:6;12880:1;12873:9;;;;;;-1:-1:-1::0;;;12873:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;12911:8;12772:165;;;;;;;;:::i;:::-;;;;;;;;12964:4;12956:12;;12986:5;;;;;;11861:1145;11842:3:::0;::::1;::::0;::::1;:::i;:::-;;;;11803:1213;;;;13034:5;13026:52;;;;-1:-1:-1::0;;;13026:52:0::1;;;;;;;:::i;:::-;2127:1;;;;11567:1518:::0;:::o;20279:162::-;20358:5;;-1:-1:-1;;;;;20358:5:0;20344:10;:19;20336:55;;;;-1:-1:-1;;;20336:55:0;;;;;;;:::i;:::-;20401:9;;;20420:5;20401:33;;-1:-1:-1;;;20401:33:0;;-1:-1:-1;;;;;20401:9:0;;;;:18;;:33;;20420:5;;;20427:6;;20401:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20279:162;:::o;2252:736::-;2322:10;2316:17;;;;:5;:17;;;;;:28;;;;;2315:29;2307:60;;;;-1:-1:-1;;;2307:60:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2385:22:0;;2397:10;2385:22;;2377:56;;;;-1:-1:-1;;;2377:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2451:15:0;;;;;;:5;:15;;;;;:26;;;;;2443:62;;;;-1:-1:-1;;;2443:62:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2536:15:0;;2568:1;2536:15;;;:5;:15;;;;;:22;;:29;2515:123;;;;-1:-1:-1;;;2515:123:0;;;;;;;:::i;:::-;2655:10;2649:17;;;;:5;:17;;;;;;;;:37;;-1:-1:-1;;;;;2649:37:0;;;-1:-1:-1;;;;;;2649:37:0;;;;;;;2696:28;;;;:35;;-1:-1:-1;;2696:35:0;2649:37;2696:35;;;;;;2741:8;:25;;;;;;;;;;;;;;;;;;2777;;;;;;;;;2821:150;;;;;;;;;;;;;;;;2941:15;2821:150;;;;;;2777:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:736::o;11248:164::-;2194:5;;-1:-1:-1;;;;;2194:5:0;2180:10;:19;2172:56;;;;-1:-1:-1;;;2172:56:0;;;;;;;:::i;:::-;11348:1:::1;11338:7;:11;11330:40;;;;-1:-1:-1::0;;;11330:40:0::1;;;;;;;:::i;:::-;11380:19;::::0;;;:10:::1;:19;::::0;;;;;:25;11248:164::o;16825:117::-;-1:-1:-1;;;;;16912:11:0;16886:7;16912:11;;;:5;:11;;;;;;;;:23;;;16825:117::o;11447:114::-;2194:5;;-1:-1:-1;;;;;2194:5:0;2180:10;:19;2172:56;;;;-1:-1:-1;;;2172:56:0;;;;;;;:::i;:::-;11529:25:::1;:12;11544:10:::0;11529:25:::1;;:::i;13091:1661::-:0;2076:10;2070:17;;;;:5;:17;;;;;:28;;;;;2062:55;;;;-1:-1:-1;;;2062:55:0;;;;;;;:::i;:::-;13192:10:::1;13170:19;13232:18:::0;;;:5:::1;:18;::::0;;;;;13285:11:::1;::::0;::::1;::::0;13170:19;13336:1347:::1;13360:13:::0;;13356:17;::::1;13336:1347;;;13422:11;13398:6;13405:1;13398:9;;;;;;-1:-1:-1::0;;;13398:9:0::1;;;;;;;;;;;;;;;;;;;:20;;;:35;:57;;;;;13438:6;13445:1;13438:9;;;;;;-1:-1:-1::0;;;13438:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:17:::1;:9;::::0;;::::1;;:17;::::0;::::1;;13437:18;13398:57;13394:1279;;;13585:6;13592:1;13585:9;;;;;;-1:-1:-1::0;;;13585:9:0::1;;;;;;;;;;;;;;;;;;;:19;;;13607:7;13585:29;;;;:::i;:::-;13566:15;:48;;13537:161;;;;-1:-1:-1::0;;;13537:161:0::1;;;;;;;:::i;:::-;13717:14;13734:6;13741:1;13734:9;;;;;;-1:-1:-1::0;;;13734:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;:16:::1;:9;::::0;;::::1;;:16;::::0;;-1:-1:-1;13802:3:0::1;13788:10;13734:16:::0;13797:1:::1;13788:10;:::i;:::-;13787:18;;;;:::i;:::-;13768:37:::0;-1:-1:-1;13823:18:0::1;13844:17;13768:37:::0;13844:6;:17:::1;:::i;:::-;13909:9;::::0;:34:::1;::::0;-1:-1:-1;;;13909:34:0;;13823:38;;-1:-1:-1;13947:6:0;;-1:-1:-1;;;;;13909:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;13937:4:::1;::::0;13909:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;13880:144;;;;-1:-1:-1::0;;;13880:144:0::1;;;;;;;:::i;:::-;14063:4;14043:6;14050:1;14043:9;;;;;;-1:-1:-1::0;;;14043:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:17;;:24:::0;;-1:-1:-1;;14043:24:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;14146:9:::1;::::0;:43:::1;::::0;-1:-1:-1;;;14146:43:0;;-1:-1:-1;;;;;14146:9:0;;::::1;::::0;:18:::1;::::0;:43:::1;::::0;14165:11;;14178:10;;14146:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14127:62;;14215:11;14207:44;;;;-1:-1:-1::0;;;14207:44:0::1;;;;;;;:::i;:::-;14328:9;::::0;:130:::1;::::0;-1:-1:-1;;;14328:130:0;;14308:17:::1;::::0;-1:-1:-1;;;;;14328:9:0::1;::::0;:18:::1;::::0;:130:::1;::::0;14368:42:::1;::::0;14432:8;;14328:130:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14308:150;;14484:12;14476:50;;;;-1:-1:-1::0;;;14476:50:0::1;;;;;;;:::i;:::-;14558:11;-1:-1:-1::0;;;;;14550:54:0::1;;14571:6;14578:1;14571:9;;;;;;-1:-1:-1::0;;;14571:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:17:::0;14550:54:::1;::::0;::::1;::::0;14590:10;;14550:54:::1;:::i;:::-;;;;;;;;14631:4;14623:12;;14653:5;;;;;;;13394:1279;13375:3:::0;::::1;::::0;::::1;:::i;:::-;;;;13336:1347;;10614:120:::0;10693:9;;:34;;-1:-1:-1;;;10693:34:0;;10667:7;;-1:-1:-1;;;;;10693:9:0;;:19;;:34;;10721:4;;10693:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10686:41;;10614:120;:::o;14758:1374::-;14869:12;15128:29;;;:16;:29;;;;;;14869:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15128:29:0;15175:22;15167:53;;;;-1:-1:-1;;;15167:53:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15255:15:0;;15231:21;15255:15;;;:5;:15;;;;;;;;:22;;15231:46;;;;;;;;;;;;;;;;;;;15255:22;;15231:46;:21;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15292:9;15287:803;15311:6;:13;15307:1;:17;15287:803;;;15373:11;15349:6;15356:1;15349:9;;;;;;-1:-1:-1;;;15349:9:0;;;;;;;;;;;;;;;:20;;;:35;15345:735;;;15404:14;15421:6;15428:1;15421:9;;;;;;-1:-1:-1;;;15421:9:0;;;;;;;;;;;;;;;15404:26;;15449:15;15467:10;:21;15478:1;:9;;;15467:21;;;;;;;;;;;;15449:39;;15506:11;15535:1;:9;;;15547:6;15535:18;;;;:::i;:::-;15520:1;:11;;;:34;;;;:::i;:::-;15506:48;;15572:13;15589:1;:9;;;15588:10;:35;;;;;15620:3;15602:15;:21;15588:35;15572:51;;15722:21;15775:3;15769;15758:7;15747:1;:8;;;:18;;;;:::i;:::-;15746:26;;;;:::i;:::-;:32;;;;:::i;:::-;15722:56;;15826:8;15856:1;:9;;;15887:1;:8;;;15917:1;:11;;;15950:3;15975:7;16004:13;16039:8;15797:268;;;;;;;;;;;;;;;;;;;;;;;;;;15345:735;15326:3;;;;:::i;:::-;;;;15287:803;;;;16100:25;;-1:-1:-1;;;16100:25:0;;;;;;;:::i;14758:1374::-;;;;;;;;;;:::o;6774:3835::-;2076:10;2070:17;;;;:5;:17;;;;;:28;;;;;2062:55;;;;-1:-1:-1;;;2062:55:0;;;;;;;:::i;:::-;6873:1:::1;6864:6;:10;6856:58;;;;-1:-1:-1::0;;;6856:58:0::1;;;;;;;:::i;:::-;6954:1;6932:19:::0;;;:10:::1;:19;::::0;;;;;6924:60:::1;;;;-1:-1:-1::0;;;6924:60:0::1;;;;;;;:::i;:::-;7020:10;6995:16;7014:17:::0;;;:5:::1;:17;::::0;;;;:26;-1:-1:-1;;;;;7014:26:0::1;7055:22:::0;;7051:139:::1;;-1:-1:-1::0;;;;;7101:15:0;::::1;7133:1;7101:15:::0;;;:5:::1;:15;::::0;;;;:22:::1;;:29:::0;7093:86:::1;;;;-1:-1:-1::0;;;7093:86:0::1;;;;;;;:::i;:::-;7215:9;::::0;:57:::1;::::0;-1:-1:-1;;;7215:57:0;;7200:12:::1;::::0;-1:-1:-1;;;;;7215:9:0::1;::::0;:22:::1;::::0;:57:::1;::::0;7238:10:::1;::::0;7258:4:::1;::::0;7265:6;;7215:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7200:72;;7290:7;7282:40;;;;-1:-1:-1::0;;;7282:40:0::1;;;;;;;:::i;:::-;7333:18;7356:12;;7354:14;;;;;:::i;:::-;;;;;;;7333:35;;7379:5;:17;7385:10;-1:-1:-1::0;;;;;7379:17:0::1;-1:-1:-1::0;;;;;7379:17:0::1;;;;;;;;;;;;:24;;7422:242;;;;;;;;7455:12;;7422:242;;;;7497:10;7422:242;;;;7533:6;7422:242;;;;7568:15;7422:242;;;;7610:7;7422:242;;;;7644:5;7422:242;;;;::::0;7379:295:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7716:10;7685:16;:28;7702:10;7685:28;;;;;;;;;;;;:41;;;;;-1:-1:-1::0;;;;;7685:41:0::1;;;;;-1:-1:-1::0;;;;;7685:41:0::1;;;;;;7737:17;7757:5;:17;7763:10;-1:-1:-1::0;;;;;7757:17:0::1;-1:-1:-1::0;;;;;7757:17:0::1;;;;;;;;;;;;:24;;:31;;;;7792:1;7757:36;7737:56;;7804:14;7821:5;:17;7827:10;-1:-1:-1::0;;;;;7821:17:0::1;-1:-1:-1::0;;;;;7821:17:0::1;;;;;;;;;;;;:26;;;;;;;;;;-1:-1:-1::0;;;;;7821:26:0::1;7804:43;;7863:7;7858:2745;7880:19;7876:1;:23;;;:47;;;;-1:-1:-1::0;;;;;;7903:20:0;::::1;::::0;::::1;7876:47;7858:2745;;;7944:14;7981:6;::::0;::::1;7977:2131;;8011:12;8007:1621;;;8093:20;8131:3;8117:10;:6:::0;8126:1:::1;8117:10;:::i;:::-;8116:18;;;;:::i;:::-;8093:41:::0;-1:-1:-1;8156:20:0::1;8194:3;8180:10;:6:::0;8189:1:::1;8180:10;:::i;:::-;8179:18;;;;:::i;:::-;8228:9;::::0;:34:::1;::::0;-1:-1:-1;;;8228:34:0;;8156:41;;-1:-1:-1;8266:12:0;;-1:-1:-1;;;;;8228:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;8256:4:::1;::::0;8228:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;8220:103;;;;-1:-1:-1::0;;;8220:103:0::1;;;;;;;:::i;:::-;8366:9;::::0;:40:::1;::::0;-1:-1:-1;;;8366:40:0;;8345:18:::1;::::0;-1:-1:-1;;;;;8366:9:0::1;::::0;:18:::1;::::0;:40:::1;::::0;8385:6;;8393:12;;8366:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8345:61;;8436:13;8428:57;;;;-1:-1:-1::0;;;8428:57:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8508:28:0;::::1;;::::0;;;:20:::1;:28;::::0;;;;:44;;8540:12;;8508:28;:44:::1;::::0;8540:12;;8508:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8574:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:41:::0;;8603:12;;8574:13;:41:::1;::::0;8603:12;;8574:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;8646:9:0::1;::::0;:34:::1;::::0;-1:-1:-1;;;8646:34:0;;8684:12;;-1:-1:-1;;;;;8646:9:0::1;::::0;:19:::1;::::0;:34:::1;::::0;8674:4:::1;::::0;8646:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;8638:104;;;;-1:-1:-1::0;;;8638:104:0::1;;;;;;;:::i;:::-;8785:9;::::0;:40:::1;::::0;-1:-1:-1;;;8785:40:0;;8764:18:::1;::::0;-1:-1:-1;;;;;8785:9:0::1;::::0;:18:::1;::::0;:40:::1;::::0;8804:6;;8812:12;;8785:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8764:61;;8855:13;8847:56;;;;-1:-1:-1::0;;;8847:56:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8926:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:41:::0;;8955:12;;8926:13;:41:::1;::::0;8955:12;;8926:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8989:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:41:::0;;9018:12;;8989:13;:41:::1;::::0;9018:12;;8989:41:::1;:::i;:::-;::::0;;;-1:-1:-1;9062:12:0;;-1:-1:-1;8007:1621:0::1;::::0;-1:-1:-1;;;;8007:1621:0::1;;9227:3;9208:12;9221:1;9208:15;;;;;;;-1:-1:-1::0;;;9208:15:0::1;;;;;;;;;;::::0;::::1;::::0;;;::::1;::::0;9199:24:::1;::::0;9208:15;;::::1;;::::0;::::1;;;9199:6:::0;:24:::1;:::i;:::-;9198:32;;;;:::i;:::-;9261:9;::::0;:34:::1;::::0;-1:-1:-1;;;9261:34:0;;9189:41;;-1:-1:-1;9189:41:0;;-1:-1:-1;;;;;9261:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;9289:4:::1;::::0;9261:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;9253:86;;;;-1:-1:-1::0;;;9253:86:0::1;;;;;;;:::i;:::-;9382:9;::::0;:34:::1;::::0;-1:-1:-1;;;9382:34:0;;9361:18:::1;::::0;-1:-1:-1;;;;;9382:9:0::1;::::0;:18:::1;::::0;:34:::1;::::0;9401:6;;9409;;9382:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9361:55;;9446:13;9438:56;;;;-1:-1:-1::0;;;9438:56:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9517:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:35:::0;;9546:6;;9517:13;:35:::1;::::0;9546:6;;9517:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;9574:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:35:::0;;9603:6;;9574:13;:35:::1;::::0;9603:6;;9574:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;8007:1621:0::1;7977:2131;;;9735:3;9716:12;9729:1;9716:15;;;;;;;-1:-1:-1::0;;;9716:15:0::1;;;;;;;;;;::::0;::::1;::::0;;;::::1;::::0;9707:24:::1;::::0;9716:15;;::::1;;::::0;::::1;;;9707:6:::0;:24:::1;:::i;:::-;9706:32;;;;:::i;:::-;9765:9;::::0;:34:::1;::::0;-1:-1:-1;;;9765:34:0;;9697:41;;-1:-1:-1;9697:41:0;;-1:-1:-1;;;;;9765:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;9793:4:::1;::::0;9765:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;9757:86;;;;-1:-1:-1::0;;;9757:86:0::1;;;;;;;:::i;:::-;9881:9;::::0;:34:::1;::::0;-1:-1:-1;;;9881:34:0;;9861:17:::1;::::0;-1:-1:-1;;;;;9881:9:0::1;::::0;:18:::1;::::0;:34:::1;::::0;9900:6;;9908;;9881:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9861:54;;9941:12;9933:53;;;;-1:-1:-1::0;;;9933:53:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10005:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:35:::0;;10034:6;;10005:13;:35:::1;::::0;10034:6;;10005:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;10058:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:35:::0;;10087:6;;10058:13;:35:::1;::::0;10087:6;;10058:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;7977:2131:0::1;10201:6;::::0;::::1;10197:350;;-1:-1:-1::0;;;;;10257:23:0;::::1;10227:27;10257:23:::0;;;:15:::1;:23;::::0;;;;;10298:235:::1;10322:11:::0;;10318:15;::::1;10298:235;;;10393:10;-1:-1:-1::0;;;;;10366:37:0::1;:4;10371:1;10366:7;;;;;;-1:-1:-1::0;;;10366:7:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:23:::0;-1:-1:-1;;;;;10366:23:0::1;:37;10362:153;;;10455:6;10431:4;10436:1;10431:7;;;;;;-1:-1:-1::0;;;10431:7:0::1;;;;;;;;;;;;;;;;;;;:20;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;10487:5:0::1;::::0;-1:-1:-1;10487:5:0::1;10362:153;10335:3:::0;::::1;::::0;::::1;:::i;:::-;;;;10298:235;;;;10197:350;;-1:-1:-1::0;;;;;;10570:13:0;;::::1;;::::0;;;:5:::1;:13;::::0;;;;:22;;;::::1;::::0;7925:3;::::1;::::0;::::1;:::i;:::-;;;;7858:2745;;;;2127:1;;;;;6774:3835:::0;;:::o;1700:45::-;;;;;;;;;;;;;:::o;424:20::-;;;-1:-1:-1;;;;;424:20:0;;:::o;16498:158::-;-1:-1:-1;;;;;16621:21:0;16591:7;16621:21;;;:15;:21;;;;;:28;;16498:158::o;20564:96::-;20638:8;:15;20564:96;:::o;16950:744::-;-1:-1:-1;;;;;17226:21:0;;17196:27;17226:21;;;:15;:21;;;;;17273:11;;17058:34;;;;;;17226:21;17273:11;17315:20;;;;;;-1:-1:-1;;;17315:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17315:20:0;;17295:40;;17369:5;17355:20;;;;;;-1:-1:-1;;;17355:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17355:20:0;;17345:30;;17412:5;17398:20;;;;;;-1:-1:-1;;;17398:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17398:20:0;;17385:33;;17434:9;17429:201;17453:5;17449:1;:9;17429:201;;;17502:4;17507:1;17502:7;;;;;;-1:-1:-1;;;17502:7:0;;;;;;;;;;;;;;;;;;;;;;:23;17479:20;;-1:-1:-1;;;;;17502:23:0;;;;17479:17;;17497:1;;17479:20;;;;-1:-1:-1;;;17479:20:0;;;;;;;;;;;;;;:46;-1:-1:-1;;;;;17479:46:0;;;-1:-1:-1;;;;;17479:46:0;;;;;17552:4;17557:1;17552:7;;;;;;-1:-1:-1;;;17552:7:0;;;;;;;;;;;;;;;;;;;:20;;;17539:7;17547:1;17539:10;;;;;;-1:-1:-1;;;17539:10:0;;;;;;;;;;;;;;:33;;;;;17602:4;17607:1;17602:7;;;;;;-1:-1:-1;;;17602:7:0;;;;;;;;;;;;;;;;;;;:17;;;17586:10;17597:1;17586:13;;;;;;-1:-1:-1;;;17586:13:0;;;;;;;;;;;;;;;;;;:33;17460:3;;;;:::i;:::-;;;;17429:201;;;;17640:47;;16950:744;;;;;:::o;1813:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1813:25:0;;-1:-1:-1;1813:25:0;:::o;1537:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:37:0;;;;;;;;;:::o;483:23::-;;;-1:-1:-1;;;;;483:23:0;;:::o;16662:157::-;-1:-1:-1;;;;;16786:26:0;16756:7;16786:26;;;:20;:26;;;;;;;16662:157::o;10740:475::-;10848:16;10866:19;10918:1;10909:6;:10;10901:52;;;;-1:-1:-1;;;10901:52:0;;;;;;;:::i;:::-;10993:1;10971:19;;;:10;:19;;;;;;10963:60;;;;-1:-1:-1;;;10963:60:0;;;;;;;:::i;:::-;11034:11;11048:19;;;:10;:19;;;;;;11116:9;11059:7;11089:12;11048:19;11089:6;:12;:::i;:::-;:22;;;;:::i;:::-;11088:38;;;;:::i;:::-;11077:49;-1:-1:-1;11150:17:0;11077:49;11150:6;:17;:::i;:::-;11136:31;;11178:30;10740:475;;;;;:::o;17700:117::-;-1:-1:-1;;;;;17787:11:0;17761:7;17787:11;;;:5;:11;;;;;:23;;;;17700:117::o;20447:111::-;-1:-1:-1;;;;;20529:11:0;20506:4;20529:11;;;:5;:11;;;;;:22;;;;;;20447:111::o;20666:313::-;2194:5;;-1:-1:-1;;;;;2194:5:0;2180:10;:19;2172:56;;;;-1:-1:-1;;;2172:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20754:16:0;::::1;20746:54;;;;-1:-1:-1::0;;;20746:54:0::1;;;;;;;:::i;:::-;20827:1;20818:6;:10;20810:55;;;;-1:-1:-1::0;;;20810:55:0::1;;;;;;;:::i;:::-;20891:9;::::0;:30:::1;::::0;-1:-1:-1;;;20891:30:0;;20876:12:::1;::::0;-1:-1:-1;;;;;20891:9:0::1;::::0;:18:::1;::::0;:30:::1;::::0;20910:2;;20914:6;;20891:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20876:45;;20939:7;20931:41;;;;-1:-1:-1::0;;;20931:41:0::1;;;;;;;:::i;:::-;2238:1;20666:313:::0;;:::o;1844:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18205:2068::-;18303:24;18343:18;18381:9;18376:540;18400:8;:15;18396:19;;18376:540;;;18436:14;18453:8;18462:1;18453:11;;;;;;-1:-1:-1;;;18453:11:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18453:11:0;18502:13;;;:5;:13;;;;;;18453:11;18502:20;18478:44;;;;;;;;;;;;;;;;;18453:11;;-1:-1:-1;18478:44:0;;18502:20;;18478:44;18453:11;;18478:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;18553:13:0;;;18536:14;18553:13;;;:5;:13;;;;;:22;18478:44;;-1:-1:-1;18553:22:0;;;18590:316;18653:19;18645:5;:27;;;:51;;;;-1:-1:-1;;;;;;18676:20:0;;;;18645:51;18590:316;;;18768:5;-1:-1:-1;;;;;18758:15:0;:6;-1:-1:-1;;;;;18758:15:0;;18754:89;;;18811:13;;18797:27;;;;:::i;:::-;;;18754:89;-1:-1:-1;;;;;18869:13:0;;;;;;;:5;:13;;;;;:22;;;;;18714:7;;;;:::i;:::-;;;;18590:316;;;;18376:540;;;18417:3;;;;;:::i;:::-;;;;18376:540;;;;18926:35;18986:10;18964:33;;;;;;-1:-1:-1;;;18964:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18926:71;;19007:13;19040:9;19035:1204;19059:8;:15;19055:19;;19035:1204;;;19095:14;19112:8;19121:1;19112:11;;;;;;-1:-1:-1;;;19112:11:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19112:11:0;19161:13;;;:5;:13;;;;;;19112:11;19161:20;19137:44;;;;;;;;;;;;;;;;;19112:11;;-1:-1:-1;19137:44:0;;19161:20;;19137:44;19112:11;;19137:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;19212:13:0;;;19195:14;19212:13;;;:5;:13;;;;;:22;19137:44;;-1:-1:-1;19212:22:0;;;19249:980;19312:19;19304:5;:27;;;:51;;;;-1:-1:-1;;;;;;19335:20:0;;;;19304:51;19249:980;;;19427:5;-1:-1:-1;;;;;19417:15:0;:6;-1:-1:-1;;;;;19417:15:0;;19413:753;;;19461:9;19456:692;19480:6;:13;19476:1;:17;19456:692;;;19526:18;19547:6;19554:1;19547:9;;;;;;-1:-1:-1;;;19547:9:0;;;;;;;;;;;;;;;19526:30;;19582:14;19666:3;19615:12;19628:5;19615:19;;;;;;;-1:-1:-1;;;19615:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;19600:34;;:5;:12;;;:34;;;;:::i;:::-;19599:70;;;;:::i;:::-;19582:87;;19718:407;;;;;;;;19781:5;-1:-1:-1;;;;;19718:407:0;;;;;19825:5;:13;;;19718:407;;;;19881:5;:12;;;19718:407;;;;19939:6;19718:407;;;;19990:6;-1:-1:-1;;;;;19718:407:0;;;;;20037:5;:15;;;19718:407;;;;20089:5;20097:1;20089:9;;;;:::i;:::-;19718:407;;;;19696:10;19707:7;;;;:::i;:::-;;;19696:19;;;;;;-1:-1:-1;;;19696:19:0;;;;;;;;;;;;;;:429;;;;19456:692;;19495:3;;;;;:::i;:::-;;;;19456:692;;;;19413:753;-1:-1:-1;;;;;20192:13:0;;;;;;;:5;:13;;;;;:22;;;;;19373:7;;;;:::i;:::-;;;;19249:980;;;;19035:1204;;;19076:3;;;;;:::i;:::-;;;;19035:1204;;;-1:-1:-1;20256:10:0;;18205:2068;-1:-1:-1;;;;18205:2068:0:o;1751:55::-;;;;;;;;;;;;;:::o;450:27::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:175:1;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:1:o;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:1:o;668:939::-;;801:3;789:9;780:7;776:23;772:33;769:2;;;823:6;815;808:22;769:2;877:7;870:4;859:9;855:20;851:34;841:2;;904:6;896;889:22;841:2;942;936:9;984:3;976:6;972:16;1054:6;1042:10;1039:22;1018:18;1006:10;1003:34;1000:62;997:2;;;1065:18;;:::i;:::-;1101:2;1094:22;1136:6;1162:9;1201:3;1186:19;;1183:32;-1:-1:-1;1180:2:1;;;1233:6;1225;1218:22;1180:2;1260:6;1275:301;1289:4;1286:1;1283:11;1275:301;;;1362:3;1349:17;1410:4;1403:5;1399:16;1392:5;1389:27;1379:2;;1435:6;1427;1420:22;1379:2;1457:18;;1498:4;1522:12;;;;1554;;;;;1309:1;1302:9;1275:301;;;-1:-1:-1;1595:6:1;;759:848;-1:-1:-1;;;;;759:848:1:o;1612:297::-;;1732:2;1720:9;1711:7;1707:23;1703:32;1700:2;;;1753:6;1745;1738:22;1700:2;1790:9;1784:16;1843:5;1836:13;1829:21;1822:5;1819:32;1809:2;;1870:6;1862;1855:22;1914:190;;2026:2;2014:9;2005:7;2001:23;1997:32;1994:2;;;2047:6;2039;2032:22;1994:2;-1:-1:-1;2075:23:1;;1984:120;-1:-1:-1;1984:120:1:o;2109:194::-;;2232:2;2220:9;2211:7;2207:23;2203:32;2200:2;;;2253:6;2245;2238:22;2200:2;-1:-1:-1;2281:16:1;;2190:113;-1:-1:-1;2190:113:1:o;2308:258::-;;;2437:2;2425:9;2416:7;2412:23;2408:32;2405:2;;;2458:6;2450;2443:22;2405:2;-1:-1:-1;;2486:23:1;;;2556:2;2541:18;;;2528:32;;-1:-1:-1;2395:171:1:o;2571:443::-;;2668:5;2662:12;2695:6;2690:3;2683:19;2721:4;2750:2;2745:3;2741:12;2734:19;;2787:2;2780:5;2776:14;2808:3;2820:169;2834:6;2831:1;2828:13;2820:169;;;2895:13;;2883:26;;2929:12;;;;2964:15;;;;2856:1;2849:9;2820:169;;;-1:-1:-1;3005:3:1;;2638:376;-1:-1:-1;;;;;2638:376:1:o;3019:203::-;-1:-1:-1;;;;;3183:32:1;;;;3165:51;;3153:2;3138:18;;3120:102::o;3227:375::-;-1:-1:-1;;;;;3485:15:1;;;3467:34;;3537:15;;;;3532:2;3517:18;;3510:43;3584:2;3569:18;;3562:34;;;;3417:2;3402:18;;3384:218::o;3607:274::-;-1:-1:-1;;;;;3799:32:1;;;;3781:51;;3863:2;3848:18;;3841:34;3769:2;3754:18;;3736:145::o;3886:345::-;-1:-1:-1;;;;;4106:32:1;;;;4088:51;;4170:2;4155:18;;4148:34;;;;4213:2;4198:18;;4191:34;4076:2;4061:18;;4043:188::o;4236:427::-;-1:-1:-1;;;;;4479:32:1;;;;4461:51;;4543:2;4528:18;;4521:34;;;;4586:2;4571:18;;4564:34;4641:14;4634:22;4629:2;4614:18;;4607:50;4448:3;4433:19;;4415:248::o;4668:715::-;-1:-1:-1;;;;;5023:32:1;;;;5005:51;;5087:2;5072:18;;5065:34;;;;5130:2;5115:18;;5108:34;;;;5173:2;5158:18;;5151:34;;;;5216:3;5201:19;;5194:35;5043:3;5245:19;;5238:35;5304:3;5289:19;;5282:35;5361:14;5354:22;5348:3;5333:19;;5326:51;4992:3;4977:19;;4959:424::o;5388:1052::-;5734:2;5746:21;;;5816:13;;5719:18;;;5838:22;;;5388:1052;;5914:4;;5891:3;5876:19;;;5941:15;;;5388:1052;5987:195;6001:6;5998:1;5995:13;5987:195;;;6066:13;;-1:-1:-1;;;;;6062:39:1;6050:52;;6122:12;;;;6157:15;;;;6098:1;6016:9;5987:195;;;5991:3;;;6227:9;6222:3;6218:19;6213:2;6202:9;6198:18;6191:47;6261;6304:3;6296:6;6261:47;:::i;:::-;6247:61;;;6356:9;6348:6;6344:22;6339:2;6328:9;6324:18;6317:50;6384;6427:6;6419;6384:50;:::i;:::-;6376:58;5695:745;-1:-1:-1;;;;;;5695:745:1:o;6445:1251::-;6680:2;6732:21;;;6802:13;;6705:18;;;6824:22;;;6445:1251;;6680:2;6865;;6883:18;;;;6924:15;;;6445:1251;6970:700;6984:6;6981:1;6978:13;6970:700;;;7043:13;;7127:9;;-1:-1:-1;;;;;7123:18:1;;;7111:31;;7182:11;;;7176:18;7162:12;;;7155:40;7235:11;;;7229:18;7215:12;;;7208:40;7271:4;7315:11;;;7309:18;7295:12;;;7288:40;7351:4;7399:11;;;7393:18;7389:27;;;7375:12;;;7368:49;7087:3;7484:11;;;7478:18;7464:12;;;7457:40;7520:4;7568:11;;;7562:18;7582:4;7558:29;7544:12;;;7537:51;7617:4;7608:14;;;;7645:15;;;;7096:1;6999:9;6970:700;;;-1:-1:-1;7687:3:1;;6660:1036;-1:-1:-1;;;;;;;6660:1036:1:o;7701:267::-;;7880:2;7869:9;7862:21;7900:62;7958:2;7947:9;7943:18;7935:6;7900:62;:::i;7973:187::-;8138:14;;8131:22;8113:41;;8101:2;8086:18;;8068:92::o;8386:347::-;8588:2;8570:21;;;8627:2;8607:18;;;8600:30;8666:25;8661:2;8646:18;;8639:53;8724:2;8709:18;;8560:173::o;8738:338::-;8940:2;8922:21;;;8979:2;8959:18;;;8952:30;-1:-1:-1;;;9013:2:1;8998:18;;8991:44;9067:2;9052:18;;8912:164::o;9081:345::-;9283:2;9265:21;;;9322:2;9302:18;;;9295:30;-1:-1:-1;;;9356:2:1;9341:18;;9334:51;9417:2;9402:18;;9255:171::o;9431:355::-;9633:2;9615:21;;;9672:2;9652:18;;;9645:30;9711:33;9706:2;9691:18;;9684:61;9777:2;9762:18;;9605:181::o;9791:354::-;9993:2;9975:21;;;10032:2;10012:18;;;10005:30;10071:32;10066:2;10051:18;;10044:60;10136:2;10121:18;;9965:180::o;10150:356::-;10352:2;10334:21;;;10371:18;;;10364:30;10430:34;10425:2;10410:18;;10403:62;10497:2;10482:18;;10324:182::o;10511:353::-;10713:2;10695:21;;;10752:2;10732:18;;;10725:30;10791:31;10786:2;10771:18;;10764:59;10855:2;10840:18;;10685:179::o;10869:342::-;11071:2;11053:21;;;11110:2;11090:18;;;11083:30;-1:-1:-1;;;11144:2:1;11129:18;;11122:48;11202:2;11187:18;;11043:168::o;11216:352::-;11418:2;11400:21;;;11457:2;11437:18;;;11430:30;11496;11491:2;11476:18;;11469:58;11559:2;11544:18;;11390:178::o;11573:405::-;11775:2;11757:21;;;11814:2;11794:18;;;11787:30;11853:34;11848:2;11833:18;;11826:62;-1:-1:-1;;;11919:2:1;11904:18;;11897:39;11968:3;11953:19;;11747:231::o;11983:404::-;12185:2;12167:21;;;12224:2;12204:18;;;12197:30;12263:34;12258:2;12243:18;;12236:62;-1:-1:-1;;;12329:2:1;12314:18;;12307:38;12377:3;12362:19;;12157:230::o;12392:347::-;12594:2;12576:21;;;12633:2;12613:18;;;12606:30;12672:25;12667:2;12652:18;;12645:53;12730:2;12715:18;;12566:173::o;12744:398::-;12946:2;12928:21;;;12985:2;12965:18;;;12958:30;13024:34;13019:2;13004:18;;12997:62;-1:-1:-1;;;13090:2:1;13075:18;;13068:32;13132:3;13117:19;;12918:224::o;13147:345::-;13349:2;13331:21;;;13388:2;13368:18;;;13361:30;-1:-1:-1;;;13422:2:1;13407:18;;13400:51;13483:2;13468:18;;13321:171::o;13497:348::-;13699:2;13681:21;;;13738:2;13718:18;;;13711:30;13777:26;13772:2;13757:18;;13750:54;13836:2;13821:18;;13671:174::o;13850:349::-;14052:2;14034:21;;;14091:2;14071:18;;;14064:30;14130:27;14125:2;14110:18;;14103:55;14190:2;14175:18;;14024:175::o;14204:404::-;14406:2;14388:21;;;14445:2;14425:18;;;14418:30;14484:34;14479:2;14464:18;;14457:62;-1:-1:-1;;;14550:2:1;14535:18;;14528:38;14598:3;14583:19;;14378:230::o;14613:356::-;14815:2;14797:21;;;14834:18;;;14827:30;14893:34;14888:2;14873:18;;14866:62;14960:2;14945:18;;14787:182::o;14974:344::-;15176:2;15158:21;;;15215:2;15195:18;;;15188:30;-1:-1:-1;;;15249:2:1;15234:18;;15227:50;15309:2;15294:18;;15148:170::o;15323:407::-;15525:2;15507:21;;;15564:2;15544:18;;;15537:30;15603:34;15598:2;15583:18;;15576:62;-1:-1:-1;;;15669:2:1;15654:18;;15647:41;15720:3;15705:19;;15497:233::o;15735:339::-;15937:2;15919:21;;;15976:2;15956:18;;;15949:30;-1:-1:-1;;;16010:2:1;15995:18;;15988:45;16065:2;16050:18;;15909:165::o;16079:406::-;16281:2;16263:21;;;16320:2;16300:18;;;16293:30;16359:34;16354:2;16339:18;;16332:62;-1:-1:-1;;;16425:2:1;16410:18;;16403:40;16475:3;16460:19;;16253:232::o;16490:399::-;16692:2;16674:21;;;16731:2;16711:18;;;16704:30;16770:34;16765:2;16750:18;;16743:62;-1:-1:-1;;;16836:2:1;16821:18;;16814:33;16879:3;16864:19;;16664:225::o;16894:344::-;17096:2;17078:21;;;17135:2;17115:18;;;17108:30;-1:-1:-1;;;17169:2:1;17154:18;;17147:50;17229:2;17214:18;;17068:170::o;17243:349::-;17445:2;17427:21;;;17484:2;17464:18;;;17457:30;17523:27;17518:2;17503:18;;17496:55;17583:2;17568:18;;17417:175::o;17597:353::-;17799:2;17781:21;;;17838:2;17818:18;;;17811:30;17877:31;17872:2;17857:18;;17850:59;17941:2;17926:18;;17771:179::o;17955:348::-;18157:2;18139:21;;;18196:2;18176:18;;;18169:30;18235:26;18230:2;18215:18;;18208:54;18294:2;18279:18;;18129:174::o;18308:340::-;18510:2;18492:21;;;18549:2;18529:18;;;18522:30;-1:-1:-1;;;18583:2:1;18568:18;;18561:46;18639:2;18624:18;;18482:166::o;18653:342::-;18855:2;18837:21;;;18894:2;18874:18;;;18867:30;-1:-1:-1;;;18928:2:1;18913:18;;18906:48;18986:2;18971:18;;18827:168::o;19000:177::-;19146:25;;;19134:2;19119:18;;19101:76::o;19182:248::-;19356:25;;;19412:2;19397:18;;19390:34;19344:2;19329:18;;19311:119::o;19435:327::-;19645:25;;;19701:2;19686:18;;19679:34;;;;19744:2;19729:18;;19722:34;19633:2;19618:18;;19600:162::o;20091:184::-;20263:4;20251:17;;;;20233:36;;20221:2;20206:18;;20188:87::o;20280:128::-;;20351:1;20347:6;20344:1;20341:13;20338:2;;;20357:18;;:::i;:::-;-1:-1:-1;20393:9:1;;20328:80::o;20413:204::-;;20487:4;20484:1;20480:12;20519:4;20516:1;20512:12;20554:3;20548:4;20544:14;20539:3;20536:23;20533:2;;;20562:18;;:::i;:::-;20598:13;;20459:158;-1:-1:-1;;;20459:158:1:o;20622:217::-;;20688:1;20678:2;;-1:-1:-1;;;20713:31:1;;20767:4;20764:1;20757:15;20795:4;20720:1;20785:15;20678:2;-1:-1:-1;20824:9:1;;20668:171::o;20844:168::-;;20950:1;20946;20942:6;20938:14;20935:1;20932:21;20927:1;20920:9;20913:17;20909:45;20906:2;;;20957:18;;:::i;:::-;-1:-1:-1;20997:9:1;;20896:116::o;21017:125::-;;21085:1;21082;21079:8;21076:2;;;21090:18;;:::i;:::-;-1:-1:-1;21127:9:1;;21066:76::o;21147:135::-;;-1:-1:-1;;21207:17:1;;21204:2;;;21227:18;;:::i;:::-;-1:-1:-1;21274:1:1;21263:13;;21194:88::o;21287:175::-;;21368:4;21361:5;21357:16;21397:4;21388:7;21385:17;21382:2;;;21405:18;;:::i;:::-;21454:1;21441:15;;21332:130;-1:-1:-1;;21332:130:1:o;21467:127::-;21528:10;21523:3;21519:20;21516:1;21509:31;21559:4;21556:1;21549:15;21583:4;21580:1;21573:15;21599:127;21660:10;21655:3;21651:20;21648:1;21641:31;21691:4;21688:1;21681:15;21715:4;21712:1;21705:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2870200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allUsers(uint256)": "2150",
								"claim(uint256)": "infinite",
								"claimEmergency(uint256)": "infinite",
								"directReferralIncome(address)": "1340",
								"directReferrals(address,uint256)": "3947",
								"getContractBalance()": "infinite",
								"getDirectReferralCount(address)": "1316",
								"getDirectReferralIncome(address)": "1359",
								"getEstimatedReturn(uint256,uint256)": "infinite",
								"getLevelIncome(address)": "1328",
								"getLevelIncomeDistribution(address)": "infinite",
								"getPositionIds(address)": "infinite",
								"getReferralIncomeDetails(address)": "infinite",
								"getStakeByPositionId(uint256)": "infinite",
								"getTotalIncome(address)": "1321",
								"getTotalLevelIncome(address)": "1371",
								"getTotalUsers()": "1096",
								"getUserLevel(address)": "infinite",
								"isRegistered(address)": "1355",
								"levelRewards(uint256)": "2853",
								"owner()": "1181",
								"ownerTransfer(address,uint256)": "infinite",
								"positionIdToUser(uint256)": "1282",
								"register(address)": "153516",
								"setLevelRewards(uint8[5])": "infinite",
								"setStakingAPY(uint256,uint256)": "21291",
								"stake(uint256,uint256)": "infinite",
								"stakeCounter()": "1138",
								"stakingAPY(uint256)": "1260",
								"usdtToken()": "1137",
								"users(address)": "3871",
								"withdrawUSDT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 1877,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1879,
									"end": 1880,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1882,
									"end": 1883,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1885,
									"end": 1886,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1844,
									"end": 1890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 513,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 513,
									"end": 834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 573,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 563,
									"end": 573,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 555,
									"end": 573,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 555,
									"end": 573,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 583,
									"end": 613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 583,
									"end": 613,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 613,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 629,
									"end": 634,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 629,
									"end": 634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 629,
									"end": 634,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 629,
									"end": 634,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 623,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 623,
									"end": 635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 623,
									"end": 646,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 646,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 646,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 623,
									"end": 653,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 664,
									"end": 674,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 664,
									"end": 678,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 664,
									"end": 678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "B6BA906FF52451A7A924E2EAEB8AEA3EBEE7350A8703E5E417EDB25358C7DCC1"
								},
								{
									"begin": 664,
									"end": 682,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 692,
									"end": 706,
									"name": "PUSH",
									"source": 0,
									"value": "6CA6DCAFC04B6E03616746C3528366F990E332021E35D59275BE746D65CAE0A7"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 692,
									"end": 710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 692,
									"end": 710,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 692,
									"end": 710,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 721,
									"end": 735,
									"name": "PUSH",
									"source": 0,
									"value": "1727C0104C2870C3003671480695F7DAB262614528B49265008E76FD3D48C5FE"
								},
								{
									"begin": 721,
									"end": 739,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 721,
									"end": 739,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 721,
									"end": 739,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 721,
									"end": 739,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 749,
									"end": 764,
									"name": "PUSH",
									"source": 0,
									"value": "5451FE6494362676DDB91456D9957C85D968E6F82956407C931A14C023049E6A"
								},
								{
									"begin": 749,
									"end": 768,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 749,
									"end": 768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 749,
									"end": 768,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 749,
									"end": 768,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 796,
									"end": 797,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 778,
									"end": 793,
									"name": "PUSH",
									"source": 0,
									"value": "FB78EB295A86B096B5F095822BD250A277112BE4103EA4A7608D96ECA726B2C1"
								},
								{
									"begin": 778,
									"end": 797,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 821,
									"name": "PUSH",
									"source": 0,
									"value": "16D"
								},
								{
									"begin": 807,
									"end": 822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 807,
									"end": 822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 825,
									"end": 827,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 807,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "BBF8ADEA84D189C39869A372AB30AEBA9246EEA044EDC5A37AC100921B2C4E1"
								},
								{
									"begin": 807,
									"end": 827,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 20981,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aef4beb5884c496a14ae026a7952b3d6e8508963fde82035faf129edcb4e17764736f6c63430008000033",
									".code": [
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "98278EFB"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "C2D3C677"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "E45A57D0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "E45A57D0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "EF71AE56"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "F6E88873"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "F7B17D10"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "C2D3C677"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "C3C5A547"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "C5B89C0A"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "D85C8966"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "A98AD46C"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "AA7ED462"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "BD297178"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "98278EFB"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "9BE572F6"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "9D747BAD"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "A2BDEDF4"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "5BD4E16A"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "797C7F5F"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "797C7F5F"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "7B0472F0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "875BB4E2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "5BD4E16A"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "656596A5"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "6C8C2156"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "6F9FB98A"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "379607F5"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "379607F5"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "3EA521EF"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "4420E486"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "4850D2A2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "5AD3935"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "1E43EB27"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "21923BDE"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "28FE7031"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 20981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 450,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18094,
											"end": 18096,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 18085,
											"end": 18096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18081,
											"end": 18106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18081,
											"end": 18106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18105,
											"end": 18106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18098,
											"end": 18106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18098,
											"end": 18106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18081,
											"end": 18106,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18081,
											"end": 18106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18129,
											"end": 18130,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18120,
											"end": 18125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18116,
											"end": 18140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18116,
											"end": 18140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18140,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18132,
											"end": 18140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18132,
											"end": 18140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18116,
											"end": 18140,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18116,
											"end": 18140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18154,
											"end": 18159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18164,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18150,
											"end": 18174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18173,
											"end": 18174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18166,
											"end": 18174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18166,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18166,
											"end": 18174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18174,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18150,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18184,
											"end": 18192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18184,
											"end": 18192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18184,
											"end": 18192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17951,
											"end": 18199,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16256,
											"end": 16269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16277,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16272,
											"end": 16291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16224,
											"end": 16240,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16224,
											"end": 16240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16331,
											"end": 16351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16308,
											"end": 16351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16308,
											"end": 16351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16382,
											"end": 16383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16382,
											"end": 16391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16426,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16421,
											"end": 16440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16441,
											"end": 16442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16441,
											"end": 16442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16454,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16421,
											"end": 16454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16362,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16482,
											"end": 16485,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16138,
											"end": 16492,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11669,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11704,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11752,
											"end": 11763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11752,
											"end": 11763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11752,
											"end": 11763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11752,
											"end": 11763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11840,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11865,
											"end": 11885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11900,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11912,
											"end": 11913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11905,
											"end": 11922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 11865,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 13006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 11861,
											"end": 13006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12044,
											"end": 12045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12063,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12037,
											"end": 12063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12021,
											"end": 12022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12033,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12014,
											"end": 12033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 12014,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 11986,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 12064,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 12064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11942,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12181,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12189,
											"end": 12190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12171,
											"end": 12200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12218,
											"end": 12234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12334,
											"name": "PUSH",
											"source": 0,
											"value": "8E94"
										},
										{
											"begin": 12303,
											"end": 12309,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12310,
											"end": 12311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12245,
											"end": 12246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12254,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12238,
											"end": 12254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12238,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12238,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12237,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12218,
											"end": 12335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12218,
											"end": 12335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12381,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12375,
											"end": 12391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 12375,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12353,
											"end": 12402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12469,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12450,
											"end": 12469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12482,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12450,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12421,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12589,
											"end": 12595,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12596,
											"end": 12597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12606,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12589,
											"end": 12606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12664,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12646,
											"end": 12664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12665,
											"end": 12676,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 12665,
											"end": 12676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12678,
											"end": 12689,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12678,
											"end": 12689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12646,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12631,
											"end": 12690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12631,
											"end": 12690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12716,
											"end": 12723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 12708,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12812,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E"
										},
										{
											"begin": 12834,
											"end": 12840,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12842,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12879,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 12881,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12889,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12873,
											"end": 12889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12919,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12937,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12956,
											"end": 12968,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12956,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12986,
											"end": 12991,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 13006,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 11861,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11803,
											"end": 13016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13026,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11567,
											"end": 13085,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20358,
											"end": 20363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20358,
											"end": 20363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20344,
											"end": 20363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20336,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20420,
											"end": 20425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20419,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20401,
											"end": 20419,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20427,
											"end": 20433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20427,
											"end": 20433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20441,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2307,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2443,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2536,
											"end": 2558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2515,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2655,
											"end": 2665,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2696,
											"end": 2724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2981,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2190,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11348,
											"end": 11349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 11330,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11390,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16917,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16923,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16825,
											"end": 16942,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11447,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2190,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 11529,
											"end": 11541,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11544,
											"end": 11554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11529,
											"end": 11554,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11529,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 11529,
											"end": 11554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13091,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13202,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13285,
											"end": 13296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13356,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13356,
											"end": 13373,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13422,
											"end": 13433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13455,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13455,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13438,
											"end": 13455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13437,
											"end": 13455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 13398,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13394,
											"end": 14673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13394,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 13394,
											"end": 14673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13585,
											"end": 13604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13614,
											"name": "PUSH",
											"source": 0,
											"value": "D2F00"
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 13585,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13581,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13614,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 13537,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13802,
											"end": 13805,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 13734,
											"end": 13750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13823,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13844,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13768,
											"end": 13805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13844,
											"end": 13850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13844,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13844,
											"end": 13861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13844,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13844,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13823,
											"end": 13861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13823,
											"end": 13861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13947,
											"end": 13953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 13953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 13909,
											"end": 13928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 13941,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 13941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 13909,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13880,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14067,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14049,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14050,
											"end": 14051,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14060,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14043,
											"end": 14060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14067,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14176,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14188,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14127,
											"end": 14189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14127,
											"end": 14189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 14207,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14308,
											"end": 14325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 14328,
											"end": 14346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14410,
											"name": "PUSH",
											"source": 0,
											"value": "9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD"
										},
										{
											"begin": 14368,
											"end": 14410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14440,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 14328,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 14476,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14569,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "PUSH",
											"source": 0,
											"value": "9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E"
										},
										{
											"begin": 14571,
											"end": 14577,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14600,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14604,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 14631,
											"end": 14635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14623,
											"end": 14635,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13394,
											"end": 14673,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 13394,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 13336,
											"end": 14683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10667,
											"end": 10674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10712,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10693,
											"end": 10712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10721,
											"end": 10725,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10721,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10734,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15144,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15128,
											"end": 15157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15175,
											"end": 15197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 15167,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15260,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15255,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15252,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15292,
											"end": 15301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15307,
											"end": 15308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15307,
											"end": 15324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15373,
											"end": 15384,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15356,
											"end": 15357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15349,
											"end": 15384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15345,
											"end": 16080,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15345,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15345,
											"end": 16080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15421,
											"end": 15427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15428,
											"end": 15429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15477,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 15479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15487,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15478,
											"end": 15487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15449,
											"end": 15488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15506,
											"end": 15517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15535,
											"end": 15536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15544,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15535,
											"end": 15544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 15553,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 15535,
											"end": 15553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15531,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15520,
											"end": 15531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 15520,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15506,
											"end": 15554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15506,
											"end": 15554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15572,
											"end": 15585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15589,
											"end": 15598,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15589,
											"end": 15598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15589,
											"end": 15598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15620,
											"end": 15623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15602,
											"end": 15617,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15602,
											"end": 15623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 15588,
											"end": 15623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15572,
											"end": 15623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15572,
											"end": 15623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15722,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 15769,
											"end": 15772,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15758,
											"end": 15765,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15748,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15747,
											"end": 15755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 15746,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 15746,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15722,
											"end": 15778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15722,
											"end": 15778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15834,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15856,
											"end": 15865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15888,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15917,
											"end": 15918,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15917,
											"end": 15928,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15917,
											"end": 15928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15917,
											"end": 15928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15950,
											"end": 15953,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 15982,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16017,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 15797,
											"end": 16065,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15345,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15345,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 16090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 16100,
											"end": 16125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16132,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2070,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2062,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6874,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 6856,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6942,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 6924,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7030,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7101,
											"end": 7123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7093,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7238,
											"end": 7248,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7238,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7215,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 7282,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7356,
											"end": 7368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7403,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7379,
											"end": 7403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7467,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7455,
											"end": 7467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7533,
											"end": 7539,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7583,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7644,
											"end": 7649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7701,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7762,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7773,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 7793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7737,
											"end": 7793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7737,
											"end": 7793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7827,
											"end": 7837,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7876,
											"end": 7899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7899,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 7876,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8011,
											"end": 8023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8134,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8156,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8266,
											"end": 8278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8247,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8228,
											"end": 8247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 8228,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 8220,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8366,
											"end": 8375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8345,
											"end": 8363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8345,
											"end": 8406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8345,
											"end": 8406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 8449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 8428,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8508,
											"end": 8552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8599,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8574,
											"end": 8599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8615,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8574,
											"end": 8615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8646,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8646,
											"end": 8696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 8638,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8810,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8824,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 8785,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 8847,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8926,
											"end": 8951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 8967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9030,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9062,
											"end": 9074,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9208,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9199,
											"end": 9205,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 9198,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9189,
											"end": 9230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9261,
											"end": 9280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9293,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 9261,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 9253,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9415,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 9438,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9517,
											"end": 9542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9574,
											"end": 9609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 8007,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9735,
											"end": 9738,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9716,
											"end": 9728,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9729,
											"end": 9730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9716,
											"end": 9731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 9706,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9784,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9765,
											"end": 9784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9793,
											"end": 9797,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9793,
											"end": 9797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 9757,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9890,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9881,
											"end": 9890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9861,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9861,
											"end": 9878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 9881,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9861,
											"end": 9915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9861,
											"end": 9915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10005,
											"end": 10030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10040,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10063,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 7977,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 10197,
											"end": 10547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10227,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10333,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10403,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10362,
											"end": 10515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10362,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 10362,
											"end": 10515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10431,
											"end": 10451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10487,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 10487,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10487,
											"end": 10492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10362,
											"end": 10515,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 10362,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10547,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 10197,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10575,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 10603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 10609,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1745,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 424,
											"end": 444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 444,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16591,
											"end": 16598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16621,
											"end": 16649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16656,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20646,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20564,
											"end": 20660,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17226,
											"end": 17247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17369,
											"end": 17374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17458,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17507,
											"end": 17508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17502,
											"end": 17525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17502,
											"end": 17525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17496,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17557,
											"end": 17558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17552,
											"end": 17572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17546,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17602,
											"end": 17619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17597,
											"end": 17598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17640,
											"end": 17687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17640,
											"end": 17687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16950,
											"end": 17694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 483,
											"end": 506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16806,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10848,
											"end": 10864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10909,
											"end": 10919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 10901,
											"end": 10953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10993,
											"end": 10994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10981,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 10963,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11116,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8E94"
										},
										{
											"begin": 11059,
											"end": 11066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11095,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 11089,
											"end": 11111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 11088,
											"end": 11126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11150,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 11077,
											"end": 11126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11150,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 11150,
											"end": 11167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11150,
											"end": 11167,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 11150,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17761,
											"end": 17768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17792,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17810,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17787,
											"end": 17810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17700,
											"end": 17817,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20534,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20447,
											"end": 20558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2190,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2172,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20754,
											"end": 20770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20754,
											"end": 20770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 20746,
											"end": 20800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20827,
											"end": 20828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20818,
											"end": 20824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20828,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 20810,
											"end": 20865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20876,
											"end": 20888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20876,
											"end": 20888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20910,
											"end": 20912,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20910,
											"end": 20912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 20891,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20876,
											"end": 20921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20876,
											"end": 20921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20939,
											"end": 20946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 20931,
											"end": 20972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20979,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18327,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18381,
											"end": 18390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18400,
											"end": 18408,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18400,
											"end": 18415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18396,
											"end": 18415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18396,
											"end": 18415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18436,
											"end": 18450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18461,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18462,
											"end": 18463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18507,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18502,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "tag",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18536,
											"end": 18550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18553,
											"end": 18575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18653,
											"end": 18672,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18645,
											"end": 18650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18672,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18645,
											"end": 18672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18676,
											"end": 18696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18676,
											"end": 18696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18676,
											"end": 18696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18676,
											"end": 18696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 18645,
											"end": 18696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18758,
											"end": 18773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18758,
											"end": 18764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18758,
											"end": 18773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18758,
											"end": 18773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 18754,
											"end": 18843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18811,
											"end": 18824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18811,
											"end": 18824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18843,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 18754,
											"end": 18843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18874,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "tag",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18926,
											"end": 18961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18986,
											"end": 18996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18926,
											"end": 18997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18926,
											"end": 18997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19059,
											"end": 19067,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19059,
											"end": 19074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19074,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19095,
											"end": 19109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19120,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19121,
											"end": 19122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19166,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19161,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19195,
											"end": 19209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19217,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19181,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19212,
											"end": 19234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19212,
											"end": 19234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19312,
											"end": 19331,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19304,
											"end": 19309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19331,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19304,
											"end": 19331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19335,
											"end": 19355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19427,
											"end": 19432,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19417,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19417,
											"end": 19423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19417,
											"end": 19432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19417,
											"end": 19432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19413,
											"end": 20166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19413,
											"end": 20166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 19413,
											"end": 20166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19461,
											"end": 19470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19480,
											"end": 19493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19476,
											"end": 19477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19476,
											"end": 19493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19553,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19582,
											"end": 19596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19666,
											"end": 19669,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19615,
											"end": 19627,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19628,
											"end": 19633,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19600,
											"end": 19612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 19599,
											"end": 19669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19582,
											"end": 19669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19582,
											"end": 19669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19781,
											"end": 19786,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19825,
											"end": 19838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19825,
											"end": 19838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 19886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 19893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19881,
											"end": 19893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 19893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19939,
											"end": 19945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19990,
											"end": 19996,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20052,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20037,
											"end": 20052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20097,
											"end": 20098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "tag",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19706,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 19707,
											"end": 19714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 20125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 20125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 20125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 20125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19456,
											"end": 20148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19413,
											"end": 20166,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 19413,
											"end": 20166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20197,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19249,
											"end": 20229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19076,
											"end": 19079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 19035,
											"end": 20239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20256,
											"end": 20266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18205,
											"end": 20273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 450,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 450,
											"end": 477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 450,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 450,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "618"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "619"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "620"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "620"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "621"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "620"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "621"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "618"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "622"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "623"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "622"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "589"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "623"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "624"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "622"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "624"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 789,
											"end": 798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 776,
											"end": 799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 772,
											"end": 805,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 769,
											"end": 771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 769,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 855,
											"end": 875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 851,
											"end": 885,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1061,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1006,
											"end": 1016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1037,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1062,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 997,
											"end": 999,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1186,
											"end": 1205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1215,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1366,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1403,
											"end": 1408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1416,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1607,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 1607,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 1809,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 2104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2395,
											"end": 2566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2909,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 3014,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3019,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3227,
											"end": 3602,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3227,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3602,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3881,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3607,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3886,
											"end": 4231,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3886,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4236,
											"end": 4663,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4236,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4512,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4655,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4668,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4668,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5056,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5072,
											"end": 5090,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 5289,
											"end": 5308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 5383,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5736,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6008,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6237,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6211,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6434,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 6440,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 6440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6991,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7142,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7558,
											"end": 7587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7621,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 7696,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 7696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7973,
											"end": 8160,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7973,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8386,
											"end": 8733,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 8386,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8629,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8691,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206E6F742072656769737465726564000000000000000000"
										},
										{
											"begin": 8661,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8738,
											"end": 9076,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8738,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9013,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9069,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9052,
											"end": 9070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8912,
											"end": 9076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9081,
											"end": 9426,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9081,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9324,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA103932B332B9103CB7BAB939B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9255,
											"end": 9426,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9431,
											"end": 9786,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 9431,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9645,
											"end": 9675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9744,
											"name": "PUSH",
											"source": 1,
											"value": "44697265637420726566657272616C207472616E73666572206661696C656400"
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9684,
											"end": 9745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9779,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9762,
											"end": 9780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9791,
											"end": 10145,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 9791,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10071,
											"end": 10103,
											"name": "PUSH",
											"source": 1,
											"value": "4C6576656C203120726577617264207472616E73666572206661696C65640000"
										},
										{
											"begin": 10066,
											"end": 10068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10138,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10506,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 10150,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10364,
											"end": 10394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10464,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 10425,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10499,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10506,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10511,
											"end": 10864,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 10511,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10869,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10869,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11112,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11083,
											"end": 11113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11216,
											"end": 11568,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 11216,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11418,
											"end": 11420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "4C6576656C20726577617264207472616E73666572206661696C656400000000"
										},
										{
											"begin": 11491,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11568,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11573,
											"end": 11978,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 11573,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11816,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E636520666F"
										},
										{
											"begin": 11848,
											"end": 11850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72206C6576656C2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11919,
											"end": 11921,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11953,
											"end": 11972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 11972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11747,
											"end": 11978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11983,
											"end": 12387,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 11983,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12167,
											"end": 12188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12226,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12197,
											"end": 12227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12297,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206D757374207374616B65206265666F726520796F752063"
										},
										{
											"begin": 12258,
											"end": 12260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12329,
											"end": 12331,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12307,
											"end": 12345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12362,
											"end": 12381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12362,
											"end": 12381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12157,
											"end": 12387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12392,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12392,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12576,
											"end": 12597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12576,
											"end": 12597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12576,
											"end": 12597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12633,
											"end": 12635,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12697,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E207769746864726177000000000000000000"
										},
										{
											"begin": 12667,
											"end": 12669,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12652,
											"end": 12670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12645,
											"end": 12698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12732,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12715,
											"end": 12733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12715,
											"end": 12733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12566,
											"end": 12739,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12744,
											"end": 13142,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 12744,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12946,
											"end": 12948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12928,
											"end": 12949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12985,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 12965,
											"end": 12983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 12988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13058,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D"
										},
										{
											"begin": 13019,
											"end": 13021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13004,
											"end": 13022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13090,
											"end": 13092,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13132,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13117,
											"end": 13136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13117,
											"end": 13136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 13142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13147,
											"end": 13492,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 13147,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13390,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13422,
											"end": 13424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13407,
											"end": 13425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13407,
											"end": 13425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13400,
											"end": 13451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13483,
											"end": 13485,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13492,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13497,
											"end": 13845,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 13497,
											"end": 13845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13681,
											"end": 13702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13738,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 13718,
											"end": 13736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13711,
											"end": 13741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 13803,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964207374616B696E67206475726174696F6E0000000000000000"
										},
										{
											"begin": 13772,
											"end": 13774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13750,
											"end": 13804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13836,
											"end": 13838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13671,
											"end": 13845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13850,
											"end": 14199,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 13850,
											"end": 14199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14034,
											"end": 14055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14034,
											"end": 14055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14034,
											"end": 14055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14093,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14130,
											"end": 14157,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 14125,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14110,
											"end": 14128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14110,
											"end": 14128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14103,
											"end": 14158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14204,
											"end": 14608,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 14204,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14388,
											"end": 14409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14388,
											"end": 14409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14447,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E636520666F"
										},
										{
											"begin": 14479,
											"end": 14481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C88191A5C9958DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14550,
											"end": 14552,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14598,
											"end": 14601,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14583,
											"end": 14602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14378,
											"end": 14608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14613,
											"end": 14969,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14613,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14815,
											"end": 14817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14927,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564"
										},
										{
											"begin": 14888,
											"end": 14890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14866,
											"end": 14928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14962,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14787,
											"end": 14969,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14974,
											"end": 15318,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 14974,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15158,
											"end": 15179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15215,
											"end": 15217,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 15195,
											"end": 15213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15249,
											"end": 15251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15234,
											"end": 15252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15227,
											"end": 15277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15309,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15294,
											"end": 15312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15294,
											"end": 15312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15318,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15323,
											"end": 15730,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 15323,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15525,
											"end": 15527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15507,
											"end": 15528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15507,
											"end": 15528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15507,
											"end": 15528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15564,
											"end": 15566,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15637,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206D757374207374616B65206265666F726520796F752063"
										},
										{
											"begin": 15598,
											"end": 15600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B7103932B3B4B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15669,
											"end": 15671,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15654,
											"end": 15672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15720,
											"end": 15723,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15705,
											"end": 15724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15705,
											"end": 15724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15497,
											"end": 15730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15735,
											"end": 16074,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 15735,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15937,
											"end": 15939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15919,
											"end": 15940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15919,
											"end": 15940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15919,
											"end": 15940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 15978,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 15979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD185AD9481B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16010,
											"end": 16012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15995,
											"end": 16013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15995,
											"end": 16013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15988,
											"end": 16033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16067,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16050,
											"end": 16068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16050,
											"end": 16068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15909,
											"end": 16074,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16079,
											"end": 16485,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 16079,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16281,
											"end": 16283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16320,
											"end": 16322,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 16300,
											"end": 16318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16300,
											"end": 16318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16300,
											"end": 16318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16293,
											"end": 16323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16393,
											"name": "PUSH",
											"source": 1,
											"value": "456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674"
										},
										{
											"begin": 16354,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16339,
											"end": 16357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16339,
											"end": 16357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65722031302064617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16425,
											"end": 16427,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16410,
											"end": 16428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16410,
											"end": 16428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16403,
											"end": 16443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16475,
											"end": 16478,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16460,
											"end": 16479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16490,
											"end": 16889,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 16490,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16674,
											"end": 16695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16674,
											"end": 16695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16674,
											"end": 16695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16733,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16804,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B6520616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 16765,
											"end": 16767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16750,
											"end": 16768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16836,
											"end": 16838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16821,
											"end": 16839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16821,
											"end": 16839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 16847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 16882,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16864,
											"end": 16883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16864,
											"end": 16883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16889,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16894,
											"end": 17238,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 16894,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17135,
											"end": 17137,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 17115,
											"end": 17133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17115,
											"end": 17133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17115,
											"end": 17133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17108,
											"end": 17138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155CD95C881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17169,
											"end": 17171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17154,
											"end": 17172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17154,
											"end": 17172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17147,
											"end": 17197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17231,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17243,
											"end": 17592,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 17243,
											"end": 17592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17445,
											"end": 17447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17427,
											"end": 17448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17484,
											"end": 17486,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 17464,
											"end": 17482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17464,
											"end": 17482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17464,
											"end": 17482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17457,
											"end": 17487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17550,
											"name": "PUSH",
											"source": 1,
											"value": "41646D696E20666565207472616E73666572206661696C656400000000000000"
										},
										{
											"begin": 17518,
											"end": 17520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17496,
											"end": 17551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17583,
											"end": 17585,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17568,
											"end": 17586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17568,
											"end": 17586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17592,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17597,
											"end": 17950,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17597,
											"end": 17950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17799,
											"end": 17801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17781,
											"end": 17802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17781,
											"end": 17802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17781,
											"end": 17802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17838,
											"end": 17840,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 17818,
											"end": 17836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17811,
											"end": 17841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17877,
											"end": 17908,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 17872,
											"end": 17874,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17850,
											"end": 17909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17941,
											"end": 17943,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17926,
											"end": 17944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17926,
											"end": 17944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17771,
											"end": 17950,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17955,
											"end": 18303,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17955,
											"end": 18303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18157,
											"end": 18159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18139,
											"end": 18160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18196,
											"end": 18198,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 18176,
											"end": 18194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18176,
											"end": 18194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18176,
											"end": 18194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18235,
											"end": 18261,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000"
										},
										{
											"begin": 18230,
											"end": 18232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18215,
											"end": 18233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18215,
											"end": 18233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18208,
											"end": 18262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18294,
											"end": 18296,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18279,
											"end": 18297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18279,
											"end": 18297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18129,
											"end": 18303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18308,
											"end": 18648,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 18308,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18510,
											"end": 18512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18492,
											"end": 18513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18492,
											"end": 18513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18492,
											"end": 18513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18549,
											"end": 18551,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18522,
											"end": 18552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44617973206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18583,
											"end": 18585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18568,
											"end": 18586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18568,
											"end": 18586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18561,
											"end": 18607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18641,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18482,
											"end": 18648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18653,
											"end": 18995,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 18653,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18855,
											"end": 18857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18894,
											"end": 18896,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18874,
											"end": 18892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18874,
											"end": 18892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18874,
											"end": 18892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18867,
											"end": 18897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1BDCDA5D1A5BDB9259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18928,
											"end": 18930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18913,
											"end": 18931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18913,
											"end": 18931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18906,
											"end": 18954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18986,
											"end": 18988,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18971,
											"end": 18989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18971,
											"end": 18989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19000,
											"end": 19177,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 19000,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19146,
											"end": 19171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19146,
											"end": 19171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19146,
											"end": 19171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19134,
											"end": 19136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19119,
											"end": 19137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19101,
											"end": 19177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19182,
											"end": 19430,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 19182,
											"end": 19430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19356,
											"end": 19381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19356,
											"end": 19381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19356,
											"end": 19381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19412,
											"end": 19414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19397,
											"end": 19415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19397,
											"end": 19415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19390,
											"end": 19424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19329,
											"end": 19347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19311,
											"end": 19430,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19435,
											"end": 19762,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 19435,
											"end": 19762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19701,
											"end": 19703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19686,
											"end": 19704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19686,
											"end": 19704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19729,
											"end": 19747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19722,
											"end": 19756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19633,
											"end": 19635,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19618,
											"end": 19636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19618,
											"end": 19636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19762,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20091,
											"end": 20275,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 20091,
											"end": 20275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20263,
											"end": 20267,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20251,
											"end": 20268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20221,
											"end": 20223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20188,
											"end": 20275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20280,
											"end": 20408,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 20280,
											"end": 20408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20280,
											"end": 20408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20351,
											"end": 20352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20353,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20344,
											"end": 20345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20341,
											"end": 20354,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20393,
											"end": 20402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20393,
											"end": 20402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20328,
											"end": 20408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20413,
											"end": 20617,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 20413,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20413,
											"end": 20617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20487,
											"end": 20491,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20484,
											"end": 20485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20480,
											"end": 20492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20519,
											"end": 20523,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20516,
											"end": 20517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20512,
											"end": 20524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20554,
											"end": 20557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20548,
											"end": 20552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20544,
											"end": 20558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20539,
											"end": 20542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20536,
											"end": 20559,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 20533,
											"end": 20535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20598,
											"end": 20611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20598,
											"end": 20611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20459,
											"end": 20617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20459,
											"end": 20617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20622,
											"end": 20839,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 20622,
											"end": 20839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20622,
											"end": 20839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20688,
											"end": 20689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 20678,
											"end": 20680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20713,
											"end": 20744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20713,
											"end": 20744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20767,
											"end": 20771,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 20764,
											"end": 20765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20757,
											"end": 20772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20795,
											"end": 20799,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20720,
											"end": 20721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20785,
											"end": 20800,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20680,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 20678,
											"end": 20680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20824,
											"end": 20833,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20824,
											"end": 20833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20668,
											"end": 20839,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20844,
											"end": 21012,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 20844,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20844,
											"end": 21012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20950,
											"end": 20951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20946,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20942,
											"end": 20948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20938,
											"end": 20952,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20932,
											"end": 20953,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20927,
											"end": 20928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20920,
											"end": 20929,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20913,
											"end": 20930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20909,
											"end": 20954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20906,
											"end": 20908,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20906,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 20906,
											"end": 20908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20957,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 20957,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 20957,
											"end": 20975,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20957,
											"end": 20975,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 20957,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20997,
											"end": 21006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20997,
											"end": 21006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20896,
											"end": 21012,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21017,
											"end": 21142,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 21017,
											"end": 21142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21017,
											"end": 21142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21085,
											"end": 21086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21082,
											"end": 21083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21079,
											"end": 21087,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21076,
											"end": 21078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21076,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 21076,
											"end": 21078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21090,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 21090,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21090,
											"end": 21108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21090,
											"end": 21108,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 21090,
											"end": 21108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21127,
											"end": 21136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21066,
											"end": 21142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21147,
											"end": 21282,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 21147,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21147,
											"end": 21282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21207,
											"end": 21224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21274,
											"end": 21275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21263,
											"end": 21276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21263,
											"end": 21276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21194,
											"end": 21282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21287,
											"end": 21462,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 21287,
											"end": 21462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21287,
											"end": 21462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21368,
											"end": 21372,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 21361,
											"end": 21366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21357,
											"end": 21373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21397,
											"end": 21401,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 21388,
											"end": 21395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21385,
											"end": 21402,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21382,
											"end": 21384,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21382,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 21382,
											"end": 21384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21405,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 21405,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21405,
											"end": 21423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21405,
											"end": 21423,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 21405,
											"end": 21423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21454,
											"end": 21455,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21441,
											"end": 21456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21441,
											"end": 21456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21332,
											"end": 21462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21332,
											"end": 21462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21467,
											"end": 21594,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21467,
											"end": 21594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21538,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 21523,
											"end": 21526,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21519,
											"end": 21539,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21516,
											"end": 21517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21509,
											"end": 21540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21559,
											"end": 21563,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 21556,
											"end": 21557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21549,
											"end": 21564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21583,
											"end": 21587,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21580,
											"end": 21581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21573,
											"end": 21588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21599,
											"end": 21726,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 21599,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21660,
											"end": 21670,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 21655,
											"end": 21658,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21651,
											"end": 21671,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21648,
											"end": 21649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21641,
											"end": 21672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21691,
											"end": 21695,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 21688,
											"end": 21689,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21681,
											"end": 21696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21715,
											"end": 21719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21712,
											"end": 21713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21720,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allUsers(uint256)": "a2bdedf4",
							"claim(uint256)": "379607f5",
							"claimEmergency(uint256)": "6c8c2156",
							"directReferralIncome(address)": "f6e88873",
							"directReferrals(address,uint256)": "05ad3935",
							"getContractBalance()": "6f9fb98a",
							"getDirectReferralCount(address)": "98278efb",
							"getDirectReferralIncome(address)": "aa7ed462",
							"getEstimatedReturn(uint256,uint256)": "bd297178",
							"getLevelIncome(address)": "5bd4e16a",
							"getLevelIncomeDistribution(address)": "ef71ae56",
							"getPositionIds(address)": "28fe7031",
							"getReferralIncomeDetails(address)": "9d747bad",
							"getStakeByPositionId(uint256)": "797c7f5f",
							"getTotalIncome(address)": "c2d3c677",
							"getTotalLevelIncome(address)": "c5b89c0a",
							"getTotalUsers()": "9be572f6",
							"getUserLevel(address)": "21923bde",
							"isRegistered(address)": "c3c5a547",
							"levelRewards(uint256)": "e45a57d0",
							"owner()": "8da5cb5b",
							"ownerTransfer(address,uint256)": "d85c8966",
							"positionIdToUser(uint256)": "1e43eb27",
							"register(address)": "4420e486",
							"setLevelRewards(uint8[5])": "656596a5",
							"setStakingAPY(uint256,uint256)": "4850d2a2",
							"stake(uint256,uint256)": "7b0472f0",
							"stakeCounter()": "f7b17d10",
							"stakingAPY(uint256)": "875bb4e2",
							"usdtToken()": "a98ad46c",
							"users(address)": "a87430ba",
							"withdrawUSDT(uint256)": "3ea521ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"claimEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"directReferralIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"directReferrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"incomeEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDirectReferralCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDirectReferralIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"}],\"name\":\"getEstimatedReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLevelIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLevelIncomeDistribution\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incomeReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uplineAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"internalType\":\"struct SikkaStakingDecentralize.LevelIncomeData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPositionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getReferralIncomeDetails\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"referralAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"incomes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"getStakeByPositionId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"perDayInterest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalLevelIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelRewards\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionIdToUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"newRewards\",\"type\":\"uint8[5]\"}],\"name\":\"setLevelRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"name\":\"setStakingAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"levelIncome\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/roy.sol\":\"SikkaStakingDecentralize\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/roy.sol\":{\"keccak256\":\"0x3a5ad7a83de427277b82e18dcef2c66704c068bde14b47a0d6f21ee424c6ff6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eac2e985d488a8881cbab6c81135c1762ad553b9f34a59712a019252ec4efc9\",\"dweb:/ipfs/QmYYyaSoeVfSj9V77RkrsXHq5mcoPhQduAydjcSrUz1zA5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 33,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "stakeCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 36,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "usdtToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)29"
							},
							{
								"astId": 149,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "users",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(User)129_storage)"
							},
							{
								"astId": 155,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "directReferrals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(ReferralInfo)116_storage)dyn_storage)"
							},
							{
								"astId": 159,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "positionIdToUser",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 163,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "stakingAPY",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 167,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "directReferralIncome",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 170,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "allUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 180,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "levelRewards",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_uint8)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(ReferralInfo)116_storage)dyn_storage": {
								"base": "t_struct(ReferralInfo)116_storage",
								"encoding": "dynamic_array",
								"label": "struct SikkaStakingDecentralize.ReferralInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Stake)109_storage)dyn_storage": {
								"base": "t_struct(Stake)109_storage",
								"encoding": "dynamic_array",
								"label": "struct SikkaStakingDecentralize.Stake[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)29": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(ReferralInfo)116_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(ReferralInfo)116_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(User)129_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SikkaStakingDecentralize.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)129_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(ReferralInfo)116_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.ReferralInfo",
								"members": [
									{
										"astId": 111,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "referralAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 113,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "incomeEarned",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 115,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Stake)109_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.Stake",
								"members": [
									{
										"astId": 98,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "stakeId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 100,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "positionId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "numDays",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "claimed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(User)129_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.User",
								"members": [
									{
										"astId": 118,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "referrer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 122,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "stakes",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Stake)109_storage)dyn_storage"
									},
									{
										"astId": 124,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "totalIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 126,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "levelIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 128,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "registered",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n   --> contracts/roy.sol:595:25:\n    |\n595 |                         Stake memory stake = stakes[j];\n    |                         ^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n   --> contracts/roy.sol:220:2:\n    |\n220 |  function stake(uint256 numDays, uint256 amount) external onlyRegistered {\n    |  ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10609,
						"file": "contracts/roy.sol",
						"message": "The other declaration is here:",
						"start": 6774
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 19544,
					"file": "contracts/roy.sol",
					"start": 19526
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/roy.sol": {
				"ast": {
					"absolutePath": "contracts/roy.sol",
					"exportedSymbols": {
						"IERC20": [
							29
						],
						"SikkaStakingDecentralize": [
							1835
						]
					},
					"id": 1836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "99:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "99:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "98:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:9:0"
									},
									"scope": 29,
									"src": "80:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "172:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:35:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "241:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:6:0"
									},
									"scope": 29,
									"src": "154:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "308:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:81:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:6:0"
									},
									"scope": 29,
									"src": "253:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1836,
							"src": "57:325:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1835,
							"linearizedBaseContracts": [
								1835
							],
							"name": "SikkaStakingDecentralize",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 31,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "424:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b17d10",
									"id": 33,
									"mutability": "mutable",
									"name": "stakeCounter",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "450:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 36,
									"mutability": "mutable",
									"name": "usdtToken",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "483:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$29",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 29,
											"src": "483:6:0"
										},
										"referencedDeclaration": 29,
										"src": "483:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$29",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "545:289:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "555:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 42,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "563:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "563:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "555:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "555:18:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "583:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$29",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 48,
																"name": "_usdtToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "602:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 47,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$29_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "595:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$29",
															"typeString": "contract IERC20"
														}
													},
													"src": "583:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$29",
														"typeString": "contract IERC20"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "583:30:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 52,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "623:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 54,
															"indexExpression": {
																"id": 53,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "629:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "623:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 128,
														"src": "623:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "649:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "623:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "623:30:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 59,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 61,
														"indexExpression": {
															"hexValue": "3330",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "675:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "664:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "664:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "664:18:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "692:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 67,
														"indexExpression": {
															"hexValue": "3630",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "703:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "692:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "709:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "692:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "692:18:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 71,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 73,
														"indexExpression": {
															"hexValue": "3930",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "732:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "721:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "738:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "721:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "721:18:0"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 77,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 79,
														"indexExpression": {
															"hexValue": "313230",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "760:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_120_by_1",
																"typeString": "int_const 120"
															},
															"value": "120"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "749:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "767:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "749:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "749:19:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 83,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "778:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 85,
														"indexExpression": {
															"hexValue": "313830",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "778:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "39",
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "778:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "778:19:0"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 89,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "807:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 91,
														"indexExpression": {
															"hexValue": "333635",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															},
															"value": "365"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "807:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "825:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "807:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "807:20:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_usdtToken",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "525:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:20:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:0:0"
									},
									"scope": 1835,
									"src": "513:321:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.Stake",
									"id": 109,
									"members": [
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "stakeId",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "863:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "863:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "positionId",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "888:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "888:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "916:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "916:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "940:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "numDays",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "967:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "967:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "claimed",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "992:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 107,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "992:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nodeType": "StructDefinition",
									"scope": 1835,
									"src": "840:171:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.ReferralInfo",
									"id": 116,
									"members": [
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "referralAddress",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1047:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1047:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "incomeEarned",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1080:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1080:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1110:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1110:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReferralInfo",
									"nodeType": "StructDefinition",
									"scope": 1835,
									"src": "1017:117:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.User",
									"id": 129,
									"members": [
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "referrer",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1168:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1168:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 122,
											"mutability": "mutable",
											"name": "stakes",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1194:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 119,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 109,
														"src": "1194:5:0"
													},
													"referencedDeclaration": 109,
													"src": "1194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
														"typeString": "struct SikkaStakingDecentralize.Stake"
													}
												},
												"id": 121,
												"nodeType": "ArrayTypeName",
												"src": "1194:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
													"typeString": "struct SikkaStakingDecentralize.Stake[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 124,
											"mutability": "mutable",
											"name": "totalIncome",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1218:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1218:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "levelIncome",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1247:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1247:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "registered",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1276:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 127,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1276:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 1835,
									"src": "1146:152:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.LevelIncomeData",
									"id": 144,
									"members": [
										{
											"constant": false,
											"id": 131,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1337:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1337:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 133,
											"mutability": "mutable",
											"name": "stakeId",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1370:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1370:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "stakeAmount",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1395:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1395:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "incomeReceived",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1424:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "uplineAddress",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1456:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 138,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1487:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1514:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 142,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1514:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LevelIncomeData",
									"nodeType": "StructDefinition",
									"scope": 1835,
									"src": "1304:228:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 149,
									"mutability": "mutable",
									"name": "users",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1537:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
										"typeString": "mapping(address => struct SikkaStakingDecentralize.User)"
									},
									"typeName": {
										"id": 148,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1545:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1537:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
											"typeString": "mapping(address => struct SikkaStakingDecentralize.User)"
										},
										"valueType": {
											"id": 147,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 146,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "1556:4:0"
											},
											"referencedDeclaration": 129,
											"src": "1556:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$129_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05ad3935",
									"id": 155,
									"mutability": "mutable",
									"name": "directReferrals",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1580:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])"
									},
									"typeName": {
										"id": 154,
										"keyType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1588:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1580:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])"
										},
										"valueType": {
											"baseType": {
												"id": 152,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 151,
													"name": "ReferralInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 116,
													"src": "1599:12:0"
												},
												"referencedDeclaration": 116,
												"src": "1599:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
													"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
												}
											},
											"id": 153,
											"nodeType": "ArrayTypeName",
											"src": "1599:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e43eb27",
									"id": 159,
									"mutability": "mutable",
									"name": "positionIdToUser",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1643:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1651:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1643:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 157,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1662:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "875bb4e2",
									"id": 163,
									"mutability": "mutable",
									"name": "stakingAPY",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1700:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 162,
										"keyType": {
											"id": 160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1708:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1700:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 161,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1719:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6e88873",
									"id": 167,
									"mutability": "mutable",
									"name": "directReferralIncome",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1751:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 166,
										"keyType": {
											"id": 164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1759:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1751:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1770:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2bdedf4",
									"id": 170,
									"mutability": "mutable",
									"name": "allUsers",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1813:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 168,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1813:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 169,
										"nodeType": "ArrayTypeName",
										"src": "1813:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e45a57d0",
									"id": 180,
									"mutability": "mutable",
									"name": "levelRewards",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1844:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$5_storage",
										"typeString": "uint8[5]"
									},
									"typeName": {
										"baseType": {
											"id": 171,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1844:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 173,
										"length": {
											"hexValue": "35",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1850:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "ArrayTypeName",
										"src": "1844:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
											"typeString": "uint8[5]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "35",
												"id": 174,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1876:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "33",
												"id": 175,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1879:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "32",
												"id": 176,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1882:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "31",
												"id": 177,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1885:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 178,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1888:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 179,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1875:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
											"typeString": "uint8[5] memory"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 190,
									"name": "Claimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1920:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeId",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1950:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:109:0"
									},
									"src": "1897:123:0"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2052:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 193,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2070:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 196,
																"indexExpression": {
																	"expression": {
																		"id": 194,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2070:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 128,
															"src": "2070:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742072656769737465726564",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2100:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5",
																"typeString": "literal_string \"Not registered\""
															},
															"value": "Not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5",
																"typeString": "literal_string \"Not registered\""
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2062:55:0"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "2127:1:0"
											}
										]
									},
									"id": 203,
									"name": "onlyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:2:0"
									},
									"src": "2026:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2162:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 206,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2180:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 208,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2194:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2180:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c2074686973",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2201:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3",
																"typeString": "literal_string \"Only owner can call this\""
															},
															"value": "Only owner can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3",
																"typeString": "literal_string \"Only owner can call this\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2172:56:0"
											},
											{
												"id": 213,
												"nodeType": "PlaceholderStatement",
												"src": "2238:1:0"
											}
										]
									},
									"id": 215,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2159:2:0"
									},
									"src": "2141:105:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2297:691:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2315:29:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 221,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "2316:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 224,
																	"indexExpression": {
																		"expression": {
																			"id": 222,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2322:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2322:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2316:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "registered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 128,
																"src": "2316:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792072656769737465726564",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															},
															"value": "Already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2307:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 231,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2385:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 232,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2397:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2397:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2385:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2409:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2377:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 239,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2451:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"id": 240,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2457:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2451:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 128,
															"src": "2451:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265666572726572206e6f742072656769737465726564",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636",
																"typeString": "literal_string \"Referrer not registered\""
															},
															"value": "Referrer not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636",
																"typeString": "literal_string \"Referrer not registered\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2443:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 247,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																				"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																			}
																		},
																		"id": 249,
																		"indexExpression": {
																			"id": 248,
																			"name": "referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "2542:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2536:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$129_storage",
																			"typeString": "struct SikkaStakingDecentralize.User storage ref"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 122,
																	"src": "2536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																		"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2536:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2568:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2536:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265666572726572206d757374207374616b65206265666f726520796f752063616e207265676973746572",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2583:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba",
																"typeString": "literal_string \"Referrer must stake before you can register\""
															},
															"value": "Referrer must stake before you can register"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba",
																"typeString": "literal_string \"Referrer must stake before you can register\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2515:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2515:123:0"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 257,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2649:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 260,
															"indexExpression": {
																"expression": {
																	"id": 258,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2655:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2655:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2649:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "2649:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 262,
														"name": "referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2649:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2649:37:0"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 265,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2696:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 268,
															"indexExpression": {
																"expression": {
																	"id": 266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2702:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2702:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2696:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 128,
														"src": "2696:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2727:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2696:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2696:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2755:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2755:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 273,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2741:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2741:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2741:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2869:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2869:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 288,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2941:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2941:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 284,
																"name": "ReferralInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2821:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ReferralInfo_$116_storage_ptr_$",
																	"typeString": "type(struct SikkaStakingDecentralize.ReferralInfo storage pointer)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"referralAddress",
																"incomeEarned",
																"timestamp"
															],
															"nodeType": "FunctionCall",
															"src": "2821:150:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReferralInfo_$116_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ReferralInfo_$116_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 280,
																"name": "directReferrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
																}
															},
															"id": 282,
															"indexExpression": {
																"id": 281,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2793:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2777:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2777:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ReferralInfo_$116_storage_$returns$__$",
															"typeString": "function (struct SikkaStakingDecentralize.ReferralInfo storage ref)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:204:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2777:204:0"
											}
										]
									},
									"functionSelector": "4420e486",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2270:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:18:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:0"
									},
									"scope": 1835,
									"src": "2252:736:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "6846:3763:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "6864:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6873:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6864:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6876:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															},
															"value": "Stake amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6856:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "6856:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 311,
																	"name": "stakingAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "6932:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 313,
																"indexExpression": {
																	"id": 312,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6932:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6954:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6932:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e67206475726174696f6e",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6957:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															},
															"value": "Invalid staking duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6924:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6924:60:0"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "referrer",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "6995:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6995:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 321,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "7014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 324,
														"indexExpression": {
															"expression": {
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7020:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7014:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 118,
													"src": "7014:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6995:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "7055:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7075:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7067:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7067:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7055:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 345,
												"nodeType": "IfStatement",
												"src": "7051:139:0",
												"trueBody": {
													"id": 344,
													"nodeType": "Block",
													"src": "7079:111:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 334,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "7101:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 336,
																					"indexExpression": {
																						"id": 335,
																						"name": "referrer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 320,
																						"src": "7107:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7101:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 122,
																				"src": "7101:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7101:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7133:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7101:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5265666572726572206d757374207374616b65206265666f726520796f752063616e207374616b65",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7136:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1",
																			"typeString": "literal_string \"Referrer must stake before you can stake\""
																		},
																		"value": "Referrer must stake before you can stake"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1",
																			"typeString": "literal_string \"Referrer must stake before you can stake\""
																		}
																	],
																	"id": 333,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7093:86:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 343,
															"nodeType": "ExpressionStatement",
															"src": "7093:86:0"
														}
													]
												}
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "7200:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7238:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7238:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 354,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7258:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7250:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7250:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7250:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "7265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 348,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "7215:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "7215:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7215:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7200:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "7290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7299:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7282:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7282:40:0"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "positionId",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "7333:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "7354:14:0",
													"subExpression": {
														"id": 366,
														"name": "stakeCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "7356:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7333:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "stakeCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "7455:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 377,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "7497:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 378,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "7533:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 379,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7568:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7568:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 381,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "7610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7644:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 375,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "7422:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$109_storage_ptr_$",
																	"typeString": "type(struct SikkaStakingDecentralize.Stake storage pointer)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"stakeId",
																"positionId",
																"amount",
																"timestamp",
																"numDays",
																"claimed"
															],
															"nodeType": "FunctionCall",
															"src": "7422:242:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 369,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "7379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 372,
																"indexExpression": {
																	"expression": {
																		"id": 370,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7385:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7385:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7379:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 122,
															"src": "7379:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7379:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Stake_$109_storage_$returns$__$",
															"typeString": "function (struct SikkaStakingDecentralize.Stake storage ref)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7379:295:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "7379:295:0"
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 386,
															"name": "positionIdToUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7685:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 388,
														"indexExpression": {
															"id": 387,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "7702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7685:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 389,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7716:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7685:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "7685:41:0"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "isFirstStake",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "7737:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 393,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 395,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "7757:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 398,
																"indexExpression": {
																	"expression": {
																		"id": 396,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7763:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7763:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7757:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 122,
															"src": "7757:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7757:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7757:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7737:56:0"
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "upline",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "7804:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7804:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 406,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "7821:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 409,
														"indexExpression": {
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7827:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7821:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 118,
													"src": "7821:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:43:0"
											},
											{
												"body": {
													"id": 698,
													"nodeType": "Block",
													"src": "7930:2673:0",
													"statements": [
														{
															"assignments": [
																431
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 431,
																	"mutability": "mutable",
																	"name": "reward",
																	"nodeType": "VariableDeclaration",
																	"scope": 698,
																	"src": "7944:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 430,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7944:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 433,
															"initialValue": {
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7961:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7944:18:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7986:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7981:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 645,
																"nodeType": "Block",
																"src": "9648:460:0",
																"statements": [
																	{
																		"expression": {
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 594,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "9697:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 595,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 298,
																								"src": "9707:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 596,
																									"name": "levelRewards",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 180,
																									"src": "9716:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint8_$5_storage",
																										"typeString": "uint8[5] storage ref"
																									}
																								},
																								"id": 598,
																								"indexExpression": {
																									"id": 597,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 413,
																									"src": "9729:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9716:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "9707:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 600,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9706:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9735:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "9706:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9697:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 604,
																		"nodeType": "ExpressionStatement",
																		"src": "9697:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 614,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 610,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "9793:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 609,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "9785:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 608,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "9785:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 611,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9785:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 606,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "9765:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 607,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "9765:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9765:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 613,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 431,
																						"src": "9803:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9765:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9811:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 605,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9757:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9757:86:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 617,
																		"nodeType": "ExpressionStatement",
																		"src": "9757:86:0"
																	},
																	{
																		"assignments": [
																			619
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 619,
																				"mutability": "mutable",
																				"name": "levelSuccess",
																				"nodeType": "VariableDeclaration",
																				"scope": 645,
																				"src": "9861:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 618,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "9861:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 625,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 622,
																					"name": "upline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 405,
																					"src": "9900:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 623,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "9908:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 620,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "9881:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "9881:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9881:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9861:54:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 627,
																					"name": "levelSuccess",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "9941:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4c6576656c20726577617264207472616e73666572206661696c6564",
																					"id": 628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9955:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0",
																						"typeString": "literal_string \"Level reward transfer failed\""
																					},
																					"value": "Level reward transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0",
																						"typeString": "literal_string \"Level reward transfer failed\""
																					}
																				],
																				"id": 626,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9933:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9933:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 630,
																		"nodeType": "ExpressionStatement",
																		"src": "9933:53:0"
																	},
																	{
																		"expression": {
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 631,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "10005:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 633,
																					"indexExpression": {
																						"id": 632,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 405,
																						"src": "10011:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10005:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 634,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "totalIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "10005:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 635,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "10034:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10005:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 637,
																		"nodeType": "ExpressionStatement",
																		"src": "10005:35:0"
																	},
																	{
																		"expression": {
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 638,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "10058:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 640,
																					"indexExpression": {
																						"id": 639,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 405,
																						"src": "10064:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10058:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "levelIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 126,
																				"src": "10058:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 642,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "10087:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10058:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 644,
																		"nodeType": "ExpressionStatement",
																		"src": "10058:35:0"
																	}
																]
															},
															"id": 646,
															"nodeType": "IfStatement",
															"src": "7977:2131:0",
															"trueBody": {
																"id": 593,
																"nodeType": "Block",
																"src": "7989:1653:0",
																"statements": [
																	{
																		"condition": {
																			"id": 437,
																			"name": "isFirstStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "8011:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 591,
																			"nodeType": "Block",
																			"src": "9128:500:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 540,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "9189:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 545,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 541,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 298,
																											"src": "9199:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"baseExpression": {
																												"id": 542,
																												"name": "levelRewards",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 180,
																												"src": "9208:12:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint8_$5_storage",
																													"typeString": "uint8[5] storage ref"
																												}
																											},
																											"id": 544,
																											"indexExpression": {
																												"id": 543,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 413,
																												"src": "9221:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9208:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "9199:24:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 546,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9198:26:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "313030",
																								"id": 547,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9227:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							},
																							"src": "9198:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9189:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 550,
																					"nodeType": "ExpressionStatement",
																					"src": "9189:41:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 560,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"id": 556,
																													"name": "this",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967268,
																													"src": "9289:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												],
																												"id": 555,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "9281:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_$",
																													"typeString": "type(address)"
																												},
																												"typeName": {
																													"id": 554,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "9281:7:0",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 557,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "9281:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"id": 552,
																											"name": "usdtToken",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 36,
																											"src": "9261:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$29",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 553,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "balanceOf",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 8,
																										"src": "9261:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																											"typeString": "function (address) view external returns (uint256)"
																										}
																									},
																									"id": 558,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9261:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"id": 559,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 431,
																									"src": "9299:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9261:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																								"id": 561,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9307:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								},
																								"value": "Insufficient contract balance"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								}
																							],
																							"id": 551,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "9253:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9253:86:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 563,
																					"nodeType": "ExpressionStatement",
																					"src": "9253:86:0"
																				},
																				{
																					"assignments": [
																						565
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 565,
																							"mutability": "mutable",
																							"name": "level1Success",
																							"nodeType": "VariableDeclaration",
																							"scope": 591,
																							"src": "9361:18:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"typeName": {
																								"id": 564,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "9361:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 571,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 568,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 405,
																								"src": "9401:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 569,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 431,
																								"src": "9409:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 566,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "9382:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 567,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "9382:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9382:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "9361:55:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 573,
																								"name": "level1Success",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 565,
																								"src": "9446:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "4c6576656c203120726577617264207472616e73666572206661696c6564",
																								"id": 574,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9461:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								},
																								"value": "Level 1 reward transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								}
																							],
																							"id": 572,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "9438:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 575,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9438:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 576,
																					"nodeType": "ExpressionStatement",
																					"src": "9438:56:0"
																				},
																				{
																					"expression": {
																						"id": 582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 577,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "9517:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 579,
																								"indexExpression": {
																									"id": 578,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "9523:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9517:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 580,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "totalIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 124,
																							"src": "9517:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 581,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "9546:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9517:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 583,
																					"nodeType": "ExpressionStatement",
																					"src": "9517:35:0"
																				},
																				{
																					"expression": {
																						"id": 589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 584,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "9574:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 586,
																								"indexExpression": {
																									"id": 585,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "9580:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9574:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 587,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "levelIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 126,
																							"src": "9574:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 588,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "9603:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9574:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 590,
																					"nodeType": "ExpressionStatement",
																					"src": "9574:35:0"
																				}
																			]
																		},
																		"id": 592,
																		"nodeType": "IfStatement",
																		"src": "8007:1621:0",
																		"trueBody": {
																			"id": 539,
																			"nodeType": "Block",
																			"src": "8025:1097:0",
																			"statements": [
																				{
																					"assignments": [
																						439
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 439,
																							"mutability": "mutable",
																							"name": "directReward",
																							"nodeType": "VariableDeclaration",
																							"scope": 539,
																							"src": "8093:20:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 438,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8093:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 446,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 442,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 440,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 298,
																										"src": "8117:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 441,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8126:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "8117:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 443,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8116:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8131:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "8116:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8093:41:0"
																				},
																				{
																					"assignments": [
																						448
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 448,
																							"mutability": "mutable",
																							"name": "level1Reward",
																							"nodeType": "VariableDeclaration",
																							"scope": 539,
																							"src": "8156:20:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 447,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8156:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 455,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 451,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 449,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 298,
																										"src": "8180:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 450,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8189:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "8180:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 452,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8179:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 453,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8194:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "8179:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8156:41:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 465,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"id": 461,
																													"name": "this",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967268,
																													"src": "8256:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												],
																												"id": 460,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "8248:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_$",
																													"typeString": "type(address)"
																												},
																												"typeName": {
																													"id": 459,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "8248:7:0",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 462,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "8248:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"id": 457,
																											"name": "usdtToken",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 36,
																											"src": "8228:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$29",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 458,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "balanceOf",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 8,
																										"src": "8228:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																											"typeString": "function (address) view external returns (uint256)"
																										}
																									},
																									"id": 463,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8228:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"id": 464,
																									"name": "directReward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 439,
																									"src": "8266:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "8228:50:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520666f7220646972656374",
																								"id": 466,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8280:42:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_9dcabded8f9dcd67a0e25713e7a9c0f41408268fe2d1863405487c387ca8473b",
																									"typeString": "literal_string \"Insufficient contract balance for direct\""
																								},
																								"value": "Insufficient contract balance for direct"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_9dcabded8f9dcd67a0e25713e7a9c0f41408268fe2d1863405487c387ca8473b",
																									"typeString": "literal_string \"Insufficient contract balance for direct\""
																								}
																							],
																							"id": 456,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "8220:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8220:103:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 468,
																					"nodeType": "ExpressionStatement",
																					"src": "8220:103:0"
																				},
																				{
																					"assignments": [
																						470
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 470,
																							"mutability": "mutable",
																							"name": "directSuccess",
																							"nodeType": "VariableDeclaration",
																							"scope": 539,
																							"src": "8345:18:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"typeName": {
																								"id": 469,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "8345:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 476,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 473,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 405,
																								"src": "8385:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 474,
																								"name": "directReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 439,
																								"src": "8393:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 471,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "8366:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 472,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "8366:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 475,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8366:40:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8345:61:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 478,
																								"name": "directSuccess",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 470,
																								"src": "8436:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "44697265637420726566657272616c207472616e73666572206661696c6564",
																								"id": 479,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8451:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7",
																									"typeString": "literal_string \"Direct referral transfer failed\""
																								},
																								"value": "Direct referral transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7",
																									"typeString": "literal_string \"Direct referral transfer failed\""
																								}
																							],
																							"id": 477,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "8428:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 480,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8428:57:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 481,
																					"nodeType": "ExpressionStatement",
																					"src": "8428:57:0"
																				},
																				{
																					"expression": {
																						"id": 486,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 482,
																								"name": "directReferralIncome",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 167,
																								"src": "8508:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 484,
																							"indexExpression": {
																								"id": 483,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 405,
																								"src": "8529:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "8508:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 485,
																							"name": "directReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "8540:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8508:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 487,
																					"nodeType": "ExpressionStatement",
																					"src": "8508:44:0"
																				},
																				{
																					"expression": {
																						"id": 493,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 488,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "8574:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 490,
																								"indexExpression": {
																									"id": 489,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "8580:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8574:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 491,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "totalIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 124,
																							"src": "8574:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 492,
																							"name": "directReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "8603:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8574:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 494,
																					"nodeType": "ExpressionStatement",
																					"src": "8574:41:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 504,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"id": 500,
																													"name": "this",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967268,
																													"src": "8674:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												],
																												"id": 499,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "8666:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_$",
																													"typeString": "type(address)"
																												},
																												"typeName": {
																													"id": 498,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "8666:7:0",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 501,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "8666:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"id": 496,
																											"name": "usdtToken",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 36,
																											"src": "8646:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$29",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 497,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "balanceOf",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 8,
																										"src": "8646:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																											"typeString": "function (address) view external returns (uint256)"
																										}
																									},
																									"id": 502,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8646:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"id": 503,
																									"name": "level1Reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 448,
																									"src": "8684:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "8646:50:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520666f72206c6576656c2031",
																								"id": 505,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8698:43:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_5ad7fc72a5fc2e73c5922d3eef96b67678198cd06175204a5cb6a0d211807e05",
																									"typeString": "literal_string \"Insufficient contract balance for level 1\""
																								},
																								"value": "Insufficient contract balance for level 1"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_5ad7fc72a5fc2e73c5922d3eef96b67678198cd06175204a5cb6a0d211807e05",
																									"typeString": "literal_string \"Insufficient contract balance for level 1\""
																								}
																							],
																							"id": 495,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "8638:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8638:104:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 507,
																					"nodeType": "ExpressionStatement",
																					"src": "8638:104:0"
																				},
																				{
																					"assignments": [
																						509
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 509,
																							"mutability": "mutable",
																							"name": "level1Success",
																							"nodeType": "VariableDeclaration",
																							"scope": 539,
																							"src": "8764:18:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"typeName": {
																								"id": 508,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "8764:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 515,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 512,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 405,
																								"src": "8804:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 513,
																								"name": "level1Reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 448,
																								"src": "8812:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 510,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "8785:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "8785:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 514,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8785:40:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8764:61:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 517,
																								"name": "level1Success",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 509,
																								"src": "8855:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "4c6576656c203120726577617264207472616e73666572206661696c6564",
																								"id": 518,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8870:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								},
																								"value": "Level 1 reward transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								}
																							],
																							"id": 516,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "8847:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 519,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8847:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 520,
																					"nodeType": "ExpressionStatement",
																					"src": "8847:56:0"
																				},
																				{
																					"expression": {
																						"id": 526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 521,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "8926:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 523,
																								"indexExpression": {
																									"id": 522,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "8932:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8926:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 524,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "totalIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 124,
																							"src": "8926:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 525,
																							"name": "level1Reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 448,
																							"src": "8955:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8926:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 527,
																					"nodeType": "ExpressionStatement",
																					"src": "8926:41:0"
																				},
																				{
																					"expression": {
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 528,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "8989:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 530,
																								"indexExpression": {
																									"id": 529,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "8995:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8989:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 531,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "levelIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 126,
																							"src": "8989:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 532,
																							"name": "level1Reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 448,
																							"src": "9018:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8989:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 534,
																					"nodeType": "ExpressionStatement",
																					"src": "8989:41:0"
																				},
																				{
																					"expression": {
																						"id": 537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 535,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "9053:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 536,
																							"name": "level1Reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 448,
																							"src": "9062:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9053:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 538,
																					"nodeType": "ExpressionStatement",
																					"src": "9053:21:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 647,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "10201:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10201:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 690,
															"nodeType": "IfStatement",
															"src": "10197:350:0",
															"trueBody": {
																"id": 689,
																"nodeType": "Block",
																"src": "10209:338:0",
																"statements": [
																	{
																		"assignments": [
																			654
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 654,
																				"mutability": "mutable",
																				"name": "refs",
																				"nodeType": "VariableDeclaration",
																				"scope": 689,
																				"src": "10227:27:0",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 652,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 651,
																							"name": "ReferralInfo",
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 116,
																							"src": "10227:12:0"
																						},
																						"referencedDeclaration": 116,
																						"src": "10227:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
																						}
																					},
																					"id": 653,
																					"nodeType": "ArrayTypeName",
																					"src": "10227:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 658,
																		"initialValue": {
																			"baseExpression": {
																				"id": 655,
																				"name": "directReferrals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 155,
																				"src": "10257:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																					"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "10273:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10257:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10227:53:0"
																	},
																	{
																		"body": {
																			"id": 687,
																			"nodeType": "Block",
																			"src": "10340:193:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 676,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 670,
																									"name": "refs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 654,
																									"src": "10366:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																									}
																								},
																								"id": 672,
																								"indexExpression": {
																									"id": 671,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 660,
																									"src": "10371:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10366:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																									"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																								}
																							},
																							"id": 673,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "referralAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 111,
																							"src": "10366:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 674,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "10393:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 675,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "10393:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "10366:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 686,
																					"nodeType": "IfStatement",
																					"src": "10362:153:0",
																					"trueBody": {
																						"id": 685,
																						"nodeType": "Block",
																						"src": "10405:110:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 682,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"id": 677,
																												"name": "refs",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 654,
																												"src": "10431:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																													"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																												}
																											},
																											"id": 679,
																											"indexExpression": {
																												"id": 678,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 660,
																												"src": "10436:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "10431:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																												"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																											}
																										},
																										"id": 680,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "incomeEarned",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 113,
																										"src": "10431:20:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "+=",
																									"rightHandSide": {
																										"id": 681,
																										"name": "reward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 431,
																										"src": "10455:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "10431:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 683,
																								"nodeType": "ExpressionStatement",
																								"src": "10431:30:0"
																							},
																							{
																								"id": 684,
																								"nodeType": "Break",
																								"src": "10487:5:0"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 663,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 660,
																				"src": "10318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"id": 664,
																					"name": "refs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 654,
																					"src": "10322:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																					}
																				},
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "10322:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10318:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 688,
																		"initializationExpression": {
																			"assignments": [
																				660
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 660,
																					"mutability": "mutable",
																					"name": "j",
																					"nodeType": "VariableDeclaration",
																					"scope": 688,
																					"src": "10303:9:0",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 659,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10303:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 662,
																			"initialValue": {
																				"hexValue": "30",
																				"id": 661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10315:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10303:13:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "10335:3:0",
																				"subExpression": {
																					"id": 667,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "10335:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 669,
																			"nodeType": "ExpressionStatement",
																			"src": "10335:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "10298:235:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 691,
																	"name": "upline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "10561:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 692,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "10570:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																				"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"id": 693,
																			"name": "upline",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "10576:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10570:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$129_storage",
																			"typeString": "struct SikkaStakingDecentralize.User storage ref"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 118,
																	"src": "10570:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10561:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "10561:31:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 416,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7876:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 417,
																"name": "levelRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "7880:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$5_storage",
																	"typeString": "uint8[5] storage ref"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7880:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7876:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 420,
															"name": "upline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "7903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7913:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7913:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7903:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7876:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"initializationExpression": {
													"assignments": [
														413
													],
													"declarations": [
														{
															"constant": false,
															"id": 413,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 699,
															"src": "7863:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 412,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "7863:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 415,
													"initialValue": {
														"hexValue": "30",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7863:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7925:3:0",
														"subExpression": {
															"id": 427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7925:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 429,
													"nodeType": "ExpressionStatement",
													"src": "7925:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7858:2745:0"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 301,
											"modifierName": {
												"id": 300,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "6831:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6831:14:0"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6788:33:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6846:0:0"
									},
									"scope": 1835,
									"src": "6774:3835:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "10676:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 710,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10721:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																],
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10713:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10713:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 706,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "10693:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "10693:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 705,
												"id": 713,
												"nodeType": "Return",
												"src": "10686:41:0"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10641:2:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10666:9:0"
									},
									"scope": 1835,
									"src": "10614:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "10891:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "10909:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10909:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10921:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10901:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "10901:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 734,
																	"name": "stakingAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "10971:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 736,
																"indexExpression": {
																	"id": 735,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10971:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10971:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e67206475726174696f6e",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10996:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															},
															"value": "Invalid staking duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10963:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "10963:60:0"
											},
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "apy",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "11034:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"baseExpression": {
														"id": 744,
														"name": "stakingAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "11048:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "numDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "11059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11048:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11034:33:0"
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 748,
														"name": "interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "11077:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "11089:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 750,
																			"name": "apy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "11098:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11089:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 752,
																		"name": "numDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "11104:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11089:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 754,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11088:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_36500_by_1",
																		"typeString": "int_const 36500"
																	},
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313030",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11116:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "333635",
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11122:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_365_by_1",
																			"typeString": "int_const 365"
																		},
																		"value": "365"
																	},
																	"src": "11116:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_36500_by_1",
																		"typeString": "int_const 36500"
																	}
																}
															],
															"id": 758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11115:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_36500_by_1",
																"typeString": "int_const 36500"
															}
														},
														"src": "11088:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11077:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "11077:49:0"
											},
											{
												"expression": {
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "totalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "11136:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "11150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 764,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "11159:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11150:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11136:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "11136:31:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 768,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "11186:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 769,
															"name": "totalReturn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "11196:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 770,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11185:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 725,
												"id": 771,
												"nodeType": "Return",
												"src": "11178:30:0"
											}
										]
									},
									"functionSelector": "bd297178",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEstimatedReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "10768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "10784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10767:33:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "interest",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "10848:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "totalReturn",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "10866:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:39:0"
									},
									"scope": 1835,
									"src": "10740:475:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "11320:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 783,
																"name": "numDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "11338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11348:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11338:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44617973206d757374206265203e2030",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11351:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442",
																"typeString": "literal_string \"Days must be > 0\""
															},
															"value": "Days must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442",
																"typeString": "literal_string \"Days must be > 0\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11330:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "11330:40:0"
											},
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 789,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "11380:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 791,
														"indexExpression": {
															"id": 790,
															"name": "numDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "11391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11380:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 792,
														"name": "apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "11402:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11380:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "11380:25:0"
											}
										]
									},
									"functionSelector": "4850d2a2",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 780,
											"modifierName": {
												"id": 779,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "11310:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11310:9:0"
										}
									],
									"name": "setStakingAPY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "11271:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "apy",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "11288:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11270:30:0"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11320:0:0"
									},
									"scope": 1835,
									"src": "11248:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "11519:42:0",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "levelRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "11529:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_storage",
															"typeString": "uint8[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11544:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
															"typeString": "uint8[5] memory"
														}
													},
													"src": "11529:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage",
														"typeString": "uint8[5] storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "11529:25:0"
											}
										]
									},
									"functionSelector": "656596a5",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 803,
											"modifierName": {
												"id": 802,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "11509:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11509:9:0"
										}
									],
									"name": "setLevelRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "newRewards",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "11472:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 797,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "11472:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 799,
													"length": {
														"hexValue": "35",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "11472:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11471:28:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11519:0:0"
									},
									"scope": 1835,
									"src": "11447:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "11627:1458:0",
										"statements": [
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "userAddress",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "11637:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 817,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11637:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"expression": {
														"id": 819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "11659:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "11659:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11637:32:0"
											},
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "11679:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User"
														},
														"typeName": {
															"id": 823,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 822,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 129,
																"src": "11679:4:0"
															},
															"referencedDeclaration": 129,
															"src": "11679:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"baseExpression": {
														"id": 825,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "11699:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "11705:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11699:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$129_storage",
														"typeString": "struct SikkaStakingDecentralize.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11679:38:0"
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "11727:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 831,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 830,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "11727:5:0"
																},
																"referencedDeclaration": 109,
																"src": "11727:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 832,
															"nodeType": "ArrayTypeName",
															"src": "11727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"expression": {
														"id": 834,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "11752:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User storage pointer"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "11752:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11727:36:0"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "found",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "11774:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 837,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11774:18:0"
											},
											{
												"body": {
													"id": 974,
													"nodeType": "Block",
													"src": "11847:1169:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 852,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "11865:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 854,
																			"indexExpression": {
																				"id": 853,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "11872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11865:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 100,
																		"src": "11865:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 856,
																		"name": "_positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "11889:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11865:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "11904:18:0",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 858,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "11905:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "11912:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11905:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 108,
																		"src": "11905:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11865:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 973,
															"nodeType": "IfStatement",
															"src": "11861:1145:0",
															"trueBody": {
																"id": 972,
																"nodeType": "Block",
																"src": "11924:1082:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 865,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "11971:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "11971:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 867,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 833,
																									"src": "12014:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 869,
																								"indexExpression": {
																									"id": 868,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 842,
																									"src": "12021:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "12014:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 870,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 104,
																							"src": "12014:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 876,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 871,
																												"name": "stakes",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 833,
																												"src": "12037:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																													"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																												}
																											},
																											"id": 873,
																											"indexExpression": {
																												"id": 872,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 842,
																												"src": "12044:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "12037:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$109_storage",
																												"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																											}
																										},
																										"id": 874,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "numDays",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 106,
																										"src": "12037:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 875,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12057:6:0",
																										"subdenomination": "days",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_86400_by_1",
																											"typeString": "int_const 86400"
																										},
																										"value": "1"
																									},
																									"src": "12037:26:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 877,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12036:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12014:50:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11971:93:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5374616b696e6720706572696f64206e6f742079657420636f6d706c65746564",
																					"id": 880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12086:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0",
																						"typeString": "literal_string \"Staking period not yet completed\""
																					},
																					"value": "Staking period not yet completed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0",
																						"typeString": "literal_string \"Staking period not yet completed\""
																					}
																				],
																				"id": 864,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11942:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11942:196:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 882,
																		"nodeType": "ExpressionStatement",
																		"src": "11942:196:0"
																	},
																	{
																		"assignments": [
																			884
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 884,
																				"mutability": "mutable",
																				"name": "apy",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "12157:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 883,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12157:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 891,
																		"initialValue": {
																			"baseExpression": {
																				"id": 885,
																				"name": "stakingAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "12171:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 890,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 886,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 833,
																						"src": "12182:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 888,
																					"indexExpression": {
																						"id": 887,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "12189:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12182:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 889,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "numDays",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 106,
																				"src": "12182:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12171:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12157:43:0"
																	},
																	{
																		"assignments": [
																			893
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 893,
																				"mutability": "mutable",
																				"name": "interest",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "12218:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 892,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12218:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 911,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 904,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 899,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 894,
																										"name": "stakes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 833,
																										"src": "12238:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																										}
																									},
																									"id": 896,
																									"indexExpression": {
																										"id": 895,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 842,
																										"src": "12245:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "12238:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_storage",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																									}
																								},
																								"id": 897,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 102,
																								"src": "12238:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 898,
																								"name": "apy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 884,
																								"src": "12277:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12238:42:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 900,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 833,
																									"src": "12303:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 902,
																								"indexExpression": {
																									"id": 901,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 842,
																									"src": "12310:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "12303:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 903,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "numDays",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 106,
																							"src": "12303:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12238:82:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 905,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12237:84:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_36500_by_1",
																							"typeString": "int_const 36500"
																						},
																						"id": 908,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "313030",
																							"id": 906,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12325:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "333635",
																							"id": 907,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12331:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_365_by_1",
																								"typeString": "int_const 365"
																							},
																							"value": "365"
																						},
																						"src": "12325:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_36500_by_1",
																							"typeString": "int_const 36500"
																						}
																					}
																				],
																				"id": 909,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12324:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_36500_by_1",
																					"typeString": "int_const 36500"
																				}
																			},
																			"src": "12237:98:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12218:117:0"
																	},
																	{
																		"assignments": [
																			913
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 913,
																				"mutability": "mutable",
																				"name": "totalAmount",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "12353:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 912,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12353:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 920,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 914,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 833,
																						"src": "12375:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 916,
																					"indexExpression": {
																						"id": 915,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "12382:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12375:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 917,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 102,
																				"src": "12375:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 918,
																				"name": "interest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "12394:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12375:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12353:49:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 926,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "12478:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 925,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "12470:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 924,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "12470:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 927,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12470:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 922,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "12450:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 923,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "12450:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 928,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12450:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 929,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "12488:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12450:49:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12521:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 921,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12421:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12421:149:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 933,
																		"nodeType": "ExpressionStatement",
																		"src": "12421:149:0"
																	},
																	{
																		"expression": {
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 934,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 833,
																						"src": "12589:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 936,
																					"indexExpression": {
																						"id": 935,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "12596:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12589:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 937,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "12589:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12609:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "12589:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 940,
																		"nodeType": "ExpressionStatement",
																		"src": "12589:24:0"
																	},
																	{
																		"assignments": [
																			942
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 942,
																				"mutability": "mutable",
																				"name": "success",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "12631:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 941,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "12631:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 948,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 945,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "12665:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 946,
																					"name": "totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 913,
																					"src": "12678:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 943,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "12646:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "12646:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12646:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12631:59:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 950,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 942,
																					"src": "12716:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "55534454207472616e73666572206661696c6564",
																					"id": 951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12725:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																						"typeString": "literal_string \"USDT transfer failed\""
																					},
																					"value": "USDT transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																						"typeString": "literal_string \"USDT transfer failed\""
																					}
																				],
																				"id": 949,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12708:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12708:40:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 953,
																		"nodeType": "ExpressionStatement",
																		"src": "12708:40:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 955,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "12801:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 956,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 833,
																							"src": "12834:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 958,
																						"indexExpression": {
																							"id": 957,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 842,
																							"src": "12841:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12834:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 959,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "12834:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 960,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 833,
																							"src": "12873:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 962,
																						"indexExpression": {
																							"id": 961,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 842,
																							"src": "12880:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12873:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 963,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "12873:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 964,
																					"name": "interest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 893,
																					"src": "12911:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 954,
																				"name": "Claimed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "12772:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12772:165:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 966,
																		"nodeType": "EmitStatement",
																		"src": "12767:170:0"
																	},
																	{
																		"expression": {
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 967,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "12956:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12964:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "12956:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 970,
																		"nodeType": "ExpressionStatement",
																		"src": "12956:12:0"
																	},
																	{
																		"id": 971,
																		"nodeType": "Break",
																		"src": "12986:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "11823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 846,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "11827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11827:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11823:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"initializationExpression": {
													"assignments": [
														842
													],
													"declarations": [
														{
															"constant": false,
															"id": 842,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 975,
															"src": "11808:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 841,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11808:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 844,
													"initialValue": {
														"hexValue": "30",
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11820:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11808:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11842:3:0",
														"subExpression": {
															"id": 849,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "11842:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 851,
													"nodeType": "ExpressionStatement",
													"src": "11842:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11803:1213:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "found",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "13034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d6564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13041:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															},
															"value": "Stake not found or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13026:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "13026:52:0"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 815,
											"modifierName": {
												"id": 814,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "11612:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11612:14:0"
										}
									],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "11582:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11581:21:0"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11627:0:0"
									},
									"scope": 1835,
									"src": "11567:1518:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "13160:1592:0",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "userAddress",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "13170:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13170:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"expression": {
														"id": 991,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "13192:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "13192:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13170:32:0"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "13212:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User"
														},
														"typeName": {
															"id": 995,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 994,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 129,
																"src": "13212:4:0"
															},
															"referencedDeclaration": 129,
															"src": "13212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"baseExpression": {
														"id": 997,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "13232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
														}
													},
													"id": 999,
													"indexExpression": {
														"id": 998,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "13238:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13232:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$129_storage",
														"typeString": "struct SikkaStakingDecentralize.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13212:38:0"
											},
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "13260:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1003,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1002,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "13260:5:0"
																},
																"referencedDeclaration": 109,
																"src": "13260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 1004,
															"nodeType": "ArrayTypeName",
															"src": "13260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"expression": {
														"id": 1006,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "13285:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User storage pointer"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "13285:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13260:36:0"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "found",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "13307:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1009,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13307:18:0"
											},
											{
												"body": {
													"id": 1134,
													"nodeType": "Block",
													"src": "13380:1303:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1024,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "13398:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 1026,
																			"indexExpression": {
																				"id": 1025,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "13405:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13398:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 100,
																		"src": "13398:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1028,
																		"name": "_positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "13422:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13398:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "13437:18:0",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1030,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "13438:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 1032,
																			"indexExpression": {
																				"id": 1031,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "13445:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13438:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 108,
																		"src": "13438:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "13398:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1133,
															"nodeType": "IfStatement",
															"src": "13394:1279:0",
															"trueBody": {
																"id": 1132,
																"nodeType": "Block",
																"src": "13457:1216:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1037,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "13566:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1038,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "13566:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1044,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1039,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1005,
																									"src": "13585:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 1041,
																								"indexExpression": {
																									"id": 1040,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1014,
																									"src": "13592:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "13585:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 1042,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 104,
																							"src": "13585:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 1043,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13607:7:0",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_864000_by_1",
																								"typeString": "int_const 864000"
																							},
																							"value": "10"
																						},
																						"src": "13585:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13566:48:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "456d657267656e637920636c61696d20616c6c6f776564206f6e6c792061667465722031302064617973",
																					"id": 1046,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13636:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c",
																						"typeString": "literal_string \"Emergency claim allowed only after 10 days\""
																					},
																					"value": "Emergency claim allowed only after 10 days"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c",
																						"typeString": "literal_string \"Emergency claim allowed only after 10 days\""
																					}
																				],
																				"id": 1036,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13537:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13537:161:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1048,
																		"nodeType": "ExpressionStatement",
																		"src": "13537:161:0"
																	},
																	{
																		"assignments": [
																			1050
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1050,
																				"mutability": "mutable",
																				"name": "amount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1132,
																				"src": "13717:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1049,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13717:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1055,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 1051,
																					"name": "stakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "13734:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																					}
																				},
																				"id": 1053,
																				"indexExpression": {
																					"id": 1052,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "13741:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13734:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$109_storage",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																				}
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 102,
																			"src": "13734:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13717:33:0"
																	},
																	{
																		"assignments": [
																			1057
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1057,
																				"mutability": "mutable",
																				"name": "adminFee",
																				"nodeType": "VariableDeclaration",
																				"scope": 1132,
																				"src": "13768:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1056,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13768:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1064,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1058,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1050,
																							"src": "13788:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "35",
																							"id": 1059,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13797:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_5_by_1",
																								"typeString": "int_const 5"
																							},
																							"value": "5"
																						},
																						"src": "13788:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1061,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13787:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13802:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "13787:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13768:37:0"
																	},
																	{
																		"assignments": [
																			1066
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1066,
																				"mutability": "mutable",
																				"name": "userAmount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1132,
																				"src": "13823:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1065,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13823:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1070,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1067,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "13844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1068,
																				"name": "adminFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "13853:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13844:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13823:38:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1076,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "13937:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1835",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 1075,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "13929:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1074,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "13929:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1077,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13929:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 1072,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "13909:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 1073,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "13909:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 1078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13909:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1079,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1050,
																						"src": "13947:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13909:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 1081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13975:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 1071,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13880:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13880:144:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1083,
																		"nodeType": "ExpressionStatement",
																		"src": "13880:144:0"
																	},
																	{
																		"expression": {
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1084,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1005,
																						"src": "14043:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1086,
																					"indexExpression": {
																						"id": 1085,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1014,
																						"src": "14050:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14043:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "14043:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14063:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "14043:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1090,
																		"nodeType": "ExpressionStatement",
																		"src": "14043:24:0"
																	},
																	{
																		"assignments": [
																			1092
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1092,
																				"mutability": "mutable",
																				"name": "successUser",
																				"nodeType": "VariableDeclaration",
																				"scope": 1132,
																				"src": "14127:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1091,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "14127:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1098,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1095,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "14165:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1096,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "14178:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1093,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "14146:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "14146:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14146:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14127:62:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1100,
																					"name": "successUser",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1092,
																					"src": "14215:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "55736572207472616e73666572206661696c6564",
																					"id": 1101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14228:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d",
																						"typeString": "literal_string \"User transfer failed\""
																					},
																					"value": "User transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d",
																						"typeString": "literal_string \"User transfer failed\""
																					}
																				],
																				"id": 1099,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14207:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14207:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1103,
																		"nodeType": "ExpressionStatement",
																		"src": "14207:44:0"
																	},
																	{
																		"assignments": [
																			1105
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1105,
																				"mutability": "mutable",
																				"name": "successAdmin",
																				"nodeType": "VariableDeclaration",
																				"scope": 1132,
																				"src": "14308:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1104,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "14308:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1111,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "307839614234394136313035613736386564383862384166443963636137663638383646373339614164",
																					"id": 1108,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14368:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"value": "0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd"
																				},
																				{
																					"id": 1109,
																					"name": "adminFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "14432:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1106,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "14328:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "14328:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14328:130:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14308:150:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1113,
																					"name": "successAdmin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "14484:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "41646d696e20666565207472616e73666572206661696c6564",
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14498:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4",
																						"typeString": "literal_string \"Admin fee transfer failed\""
																					},
																					"value": "Admin fee transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4",
																						"typeString": "literal_string \"Admin fee transfer failed\""
																					}
																				],
																				"id": 1112,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14476:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14476:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1116,
																		"nodeType": "ExpressionStatement",
																		"src": "14476:50:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1118,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "14558:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1119,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1005,
																							"src": "14571:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 1121,
																						"indexExpression": {
																							"id": 1120,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1014,
																							"src": "14578:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "14571:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 1122,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "14571:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "14590:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14602:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1117,
																				"name": "Claimed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "14550:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14550:54:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1126,
																		"nodeType": "EmitStatement",
																		"src": "14545:59:0"
																	},
																	{
																		"expression": {
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1127,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "14623:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14631:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "14623:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1130,
																		"nodeType": "ExpressionStatement",
																		"src": "14623:12:0"
																	},
																	{
																		"id": 1131,
																		"nodeType": "Break",
																		"src": "14653:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "13356:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1018,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "13360:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13360:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13356:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"initializationExpression": {
													"assignments": [
														1014
													],
													"declarations": [
														{
															"constant": false,
															"id": 1014,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1135,
															"src": "13341:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1013,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1016,
													"initialValue": {
														"hexValue": "30",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13341:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13375:3:0",
														"subExpression": {
															"id": 1021,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "13375:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1023,
													"nodeType": "ExpressionStatement",
													"src": "13375:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13336:1347:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1137,
															"name": "found",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14701:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d6564",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14708:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															},
															"value": "Stake not found or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14693:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "14693:52:0"
											}
										]
									},
									"functionSelector": "6c8c2156",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 987,
											"modifierName": {
												"id": 986,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "13145:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13145:14:0"
										}
									],
									"name": "claimEmergency",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "13115:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13114:21:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13160:0:0"
									},
									"scope": 1835,
									"src": "13091:1661:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "15099:1033:0",
										"statements": [
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "userAddr",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "15109:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1163,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15109:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"baseExpression": {
														"id": 1165,
														"name": "positionIdToUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "15128:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1167,
													"indexExpression": {
														"id": 1166,
														"name": "_positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "15145:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15128:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15109:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "userAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "15175:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15195:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15187:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15187:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15187:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15175:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f736974696f6e4964",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15199:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e",
																"typeString": "literal_string \"Invalid positionId\""
															},
															"value": "Invalid positionId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e",
																"typeString": "literal_string \"Invalid positionId\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15167:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "15167:53:0"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "15231:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1181,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1180,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "15231:5:0"
																},
																"referencedDeclaration": 109,
																"src": "15231:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 1182,
															"nodeType": "ArrayTypeName",
															"src": "15231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1184,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "15255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1186,
														"indexExpression": {
															"id": 1185,
															"name": "userAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "15261:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15255:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "15255:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15231:46:0"
											},
											{
												"body": {
													"id": 1269,
													"nodeType": "Block",
													"src": "15331:759:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1200,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "15349:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																			}
																		},
																		"id": 1202,
																		"indexExpression": {
																			"id": 1201,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "15356:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15349:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake memory"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "positionId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "15349:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1204,
																	"name": "_positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "15373:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15349:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1268,
															"nodeType": "IfStatement",
															"src": "15345:735:0",
															"trueBody": {
																"id": 1267,
																"nodeType": "Block",
																"src": "15386:694:0",
																"statements": [
																	{
																		"assignments": [
																			1208
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1208,
																				"mutability": "mutable",
																				"name": "s",
																				"nodeType": "VariableDeclaration",
																				"scope": 1267,
																				"src": "15404:14:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake"
																				},
																				"typeName": {
																					"id": 1207,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1206,
																						"name": "Stake",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 109,
																						"src": "15404:5:0"
																					},
																					"referencedDeclaration": 109,
																					"src": "15404:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1212,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1209,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "15421:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																				}
																			},
																			"id": 1211,
																			"indexExpression": {
																				"id": 1210,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1190,
																				"src": "15428:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15421:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15404:26:0"
																	},
																	{
																		"assignments": [
																			1214
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1214,
																				"mutability": "mutable",
																				"name": "apyRate",
																				"nodeType": "VariableDeclaration",
																				"scope": 1267,
																				"src": "15449:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1213,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "15449:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1219,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1215,
																				"name": "stakingAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "15467:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1218,
																			"indexExpression": {
																				"expression": {
																					"id": 1216,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1208,
																					"src": "15478:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake memory"
																					}
																				},
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "numDays",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 106,
																				"src": "15478:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15467:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15449:39:0"
																	},
																	{
																		"assignments": [
																			1221
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1221,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"scope": 1267,
																				"src": "15506:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1220,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "15506:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1230,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1222,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1208,
																					"src": "15520:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake memory"
																					}
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "15520:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1224,
																								"name": "s",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1208,
																								"src": "15535:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory"
																								}
																							},
																							"id": 1225,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "numDays",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 106,
																							"src": "15535:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1226,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15547:6:0",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_86400_by_1",
																								"typeString": "int_const 86400"
																							},
																							"value": "1"
																						},
																						"src": "15535:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1228,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "15534:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15520:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15506:48:0"
																	},
																	{
																		"assignments": [
																			1232
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1232,
																				"mutability": "mutable",
																				"name": "isActive",
																				"nodeType": "VariableDeclaration",
																				"scope": 1267,
																				"src": "15572:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1231,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "15572:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1241,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "15588:10:0",
																				"subExpression": {
																					"expression": {
																						"id": 1233,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "15589:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1234,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "15589:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1236,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "15602:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "15602:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1238,
																					"name": "end",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "15620:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15602:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15588:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15572:51:0"
																	},
																	{
																		"assignments": [
																			1243
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1243,
																				"mutability": "mutable",
																				"name": "dailyInterest",
																				"nodeType": "VariableDeclaration",
																				"scope": 1267,
																				"src": "15722:21:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1242,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "15722:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1253,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1244,
																									"name": "s",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1208,
																									"src": "15747:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake memory"
																									}
																								},
																								"id": 1245,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 102,
																								"src": "15747:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1246,
																								"name": "apyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1214,
																								"src": "15758:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15747:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1248,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15746:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15769:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "15746:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "333635",
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15775:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_365_by_1",
																					"typeString": "int_const 365"
																				},
																				"value": "365"
																			},
																			"src": "15746:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15722:56:0"
																	},
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 1254,
																					"name": "userAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1164,
																					"src": "15826:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1255,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "15856:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "15856:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1257,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "15887:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1258,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "15887:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1259,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1208,
																						"src": "15917:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 104,
																					"src": "15917:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1261,
																					"name": "end",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "15950:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1262,
																					"name": "apyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1214,
																					"src": "15975:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1263,
																					"name": "dailyInterest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1243,
																					"src": "16004:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1264,
																					"name": "isActive",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "16039:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1265,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "15804:261:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
																				"typeString": "tuple(address,uint256,uint256,uint256,uint256,uint256,uint256,bool)"
																			}
																		},
																		"functionReturnParameters": 1162,
																		"id": 1266,
																		"nodeType": "Return",
																		"src": "15797:268:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1193,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "15307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1194,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "15311:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15311:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15307:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1270,
												"initializationExpression": {
													"assignments": [
														1190
													],
													"declarations": [
														{
															"constant": false,
															"id": 1190,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1270,
															"src": "15292:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1189,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15292:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1192,
													"initialValue": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15292:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15326:3:0",
														"subExpression": {
															"id": 1197,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "15326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1199,
													"nodeType": "ExpressionStatement",
													"src": "15326:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15287:803:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "5374616b65206e6f7420666f756e64",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16107:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30",
																"typeString": "literal_string \"Stake not found\""
															},
															"value": "Stake not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30",
																"typeString": "literal_string \"Stake not found\""
															}
														],
														"id": 1271,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "16100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16100:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "16100:25:0"
											}
										]
									},
									"functionSelector": "797c7f5f",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeByPositionId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14787:21:0"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14869:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "stakeId",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14924:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "startDate",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "endDate",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "14983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "apy",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "15012:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "perDayInterest",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "15037:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "15073:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14855:239:0"
									},
									"scope": 1835,
									"src": "14758:1374:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "16246:246:0",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "16256:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 1286,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "16272:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 1288,
															"indexExpression": {
																"id": 1287,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "16278:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16272:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "16272:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16272:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16256:42:0"
											},
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "ids",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "16308:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1294,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16308:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1295,
															"nodeType": "ArrayTypeName",
															"src": "16308:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"arguments": [
														{
															"id": 1300,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "16345:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16331:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1297,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1298,
															"nodeType": "ArrayTypeName",
															"src": "16335:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16331:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16308:43:0"
											},
											{
												"body": {
													"id": 1325,
													"nodeType": "Block",
													"src": "16398:67:0",
													"statements": [
														{
															"expression": {
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1313,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "16412:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1315,
																	"indexExpression": {
																		"id": 1314,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "16416:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16412:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1316,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 149,
																					"src": "16421:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																						"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																					}
																				},
																				"id": 1318,
																				"indexExpression": {
																					"id": 1317,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "16427:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "16421:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$129_storage",
																					"typeString": "struct SikkaStakingDecentralize.User storage ref"
																				}
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 122,
																			"src": "16421:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 1321,
																		"indexExpression": {
																			"id": 1320,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1304,
																			"src": "16441:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16421:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$109_storage",
																			"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "positionId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "16421:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16412:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1324,
															"nodeType": "ExpressionStatement",
															"src": "16412:42:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1307,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "16382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1308,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "16386:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16382:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"initializationExpression": {
													"assignments": [
														1304
													],
													"declarations": [
														{
															"constant": false,
															"id": 1304,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1326,
															"src": "16367:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1306,
													"initialValue": {
														"hexValue": "30",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16379:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16367:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16393:3:0",
														"subExpression": {
															"id": 1310,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "16393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1312,
													"nodeType": "ExpressionStatement",
													"src": "16393:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16362:103:0"
											},
											{
												"expression": {
													"id": 1327,
													"name": "ids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1296,
													"src": "16482:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1328,
												"nodeType": "Return",
												"src": "16475:10:0"
											}
										]
									},
									"functionSelector": "28fe7031",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPositionIds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "16162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16161:15:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "16224:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "16224:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16223:18:0"
									},
									"scope": 1835,
									"src": "16138:354:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "16604:52:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1337,
															"name": "directReferrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "16621:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
															}
														},
														"id": 1339,
														"indexExpression": {
															"id": 1338,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "16637:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16621:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16621:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1341,
												"nodeType": "Return",
												"src": "16614:35:0"
											}
										]
									},
									"functionSelector": "98278efb",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDirectReferralCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "16530:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16529:14:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "16591:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16590:9:0"
									},
									"scope": 1835,
									"src": "16498:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "16769:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1350,
														"name": "directReferralIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "16786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1352,
													"indexExpression": {
														"id": 1351,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "16807:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16786:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1353,
												"nodeType": "Return",
												"src": "16779:33:0"
											}
										]
									},
									"functionSelector": "aa7ed462",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDirectReferralIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "16695:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16694:14:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "16756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16755:9:0"
									},
									"scope": 1835,
									"src": "16662:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "16895:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1362,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "16912:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1364,
														"indexExpression": {
															"id": 1363,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "16918:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16912:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "levelIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 126,
													"src": "16912:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1366,
												"nodeType": "Return",
												"src": "16905:30:0"
											}
										]
									},
									"functionSelector": "5bd4e16a",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "16849:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16848:14:0"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "16886:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16885:9:0"
									},
									"scope": 1835,
									"src": "16825:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "17186:508:0",
										"statements": [
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "refs",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "17196:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 1384,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1383,
																	"name": "ReferralInfo",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 116,
																	"src": "17196:12:0"
																},
																"referencedDeclaration": 116,
																"src": "17196:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
																}
															},
															"id": 1385,
															"nodeType": "ArrayTypeName",
															"src": "17196:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"baseExpression": {
														"id": 1387,
														"name": "directReferrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "17226:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
														}
													},
													"id": 1389,
													"indexExpression": {
														"id": 1388,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "17242:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17226:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17196:51:0"
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "17257:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"initialValue": {
													"expression": {
														"id": 1393,
														"name": "refs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "17273:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "17273:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17257:27:0"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1396,
														"name": "referralAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "17295:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1400,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "17329:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17315:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1397,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17319:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1398,
																"nodeType": "ArrayTypeName",
																"src": "17319:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17315:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "17295:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "17295:40:0"
											},
											{
												"expression": {
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1404,
														"name": "incomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "17345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1408,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "17369:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17355:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1406,
																"nodeType": "ArrayTypeName",
																"src": "17359:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17355:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "17345:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "17345:30:0"
											},
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1412,
														"name": "timestamps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "17385:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1416,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "17412:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17398:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17402:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1414,
																"nodeType": "ArrayTypeName",
																"src": "17402:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17398:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "17385:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "17385:33:0"
											},
											{
												"body": {
													"id": 1457,
													"nodeType": "Block",
													"src": "17465:165:0",
													"statements": [
														{
															"expression": {
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1430,
																		"name": "referralAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "17479:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1432,
																	"indexExpression": {
																		"id": 1431,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "17497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17479:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1433,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "17502:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 1435,
																		"indexExpression": {
																			"id": 1434,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "17507:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referralAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 111,
																	"src": "17502:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17479:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1438,
															"nodeType": "ExpressionStatement",
															"src": "17479:46:0"
														},
														{
															"expression": {
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1439,
																		"name": "incomes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "17539:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1441,
																	"indexExpression": {
																		"id": 1440,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "17547:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17539:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1442,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "17552:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 1444,
																		"indexExpression": {
																			"id": 1443,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "17557:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17552:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "incomeEarned",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 113,
																	"src": "17552:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17539:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1447,
															"nodeType": "ExpressionStatement",
															"src": "17539:33:0"
														},
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1448,
																		"name": "timestamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "17586:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1450,
																	"indexExpression": {
																		"id": 1449,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "17597:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17586:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1451,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "17602:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 1453,
																		"indexExpression": {
																			"id": 1452,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "17607:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17602:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 115,
																	"src": "17602:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17586:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "17586:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "17449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1425,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "17453:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17449:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"initializationExpression": {
													"assignments": [
														1421
													],
													"declarations": [
														{
															"constant": false,
															"id": 1421,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1458,
															"src": "17434:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1420,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17434:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1423,
													"initialValue": {
														"hexValue": "30",
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17446:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17434:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17460:3:0",
														"subExpression": {
															"id": 1427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "17460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1429,
													"nodeType": "ExpressionStatement",
													"src": "17460:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17429:201:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1459,
															"name": "referralAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "17648:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1460,
															"name": "incomes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "17667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1461,
															"name": "timestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "17676:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1462,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17647:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1463,
												"nodeType": "Return",
												"src": "17640:47:0"
											}
										]
									},
									"functionSelector": "9d747bad",
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReferralIncomeDetails",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "16984:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16983:14:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "referralAddresses",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "17058:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17058:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "17058:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "incomes",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "17106:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "17106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "timestamps",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "17144:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1378,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"nodeType": "ArrayTypeName",
													"src": "17144:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17044:137:0"
									},
									"scope": 1835,
									"src": "16950:744:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "17770:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1472,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "17787:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1474,
														"indexExpression": {
															"id": 1473,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "17793:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17787:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 124,
													"src": "17787:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1476,
												"nodeType": "Return",
												"src": "17780:30:0"
											}
										]
									},
									"functionSelector": "c2d3c677",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17724:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17723:14:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17761:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17760:9:0"
									},
									"scope": 1835,
									"src": "17700:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "17898:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1485,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "17915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1487,
														"indexExpression": {
															"id": 1486,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "17921:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17915:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "levelIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 126,
													"src": "17915:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1484,
												"id": 1489,
												"nodeType": "Return",
												"src": "17908:30:0"
											}
										]
									},
									"functionSelector": "c5b89c0a",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalLevelIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "17852:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17851:14:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "17889:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17888:9:0"
									},
									"scope": 1835,
									"src": "17823:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "18017:182:0",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "18027:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1500,
															"name": "directReferrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "18043:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
															}
														},
														"id": 1502,
														"indexExpression": {
															"id": 1501,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "18059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18043:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "18043:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18027:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1505,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "18085:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18094:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "18085:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "18081:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "33",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"functionReturnParameters": 1497,
													"id": 1509,
													"nodeType": "Return",
													"src": "18098:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "18120:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "18120:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "18116:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "32",
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18139:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"functionReturnParameters": 1497,
													"id": 1515,
													"nodeType": "Return",
													"src": "18132:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "18154:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18154:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1522,
												"nodeType": "IfStatement",
												"src": "18150:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1497,
													"id": 1521,
													"nodeType": "Return",
													"src": "18166:8:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18191:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1497,
												"id": 1524,
												"nodeType": "Return",
												"src": "18184:8:0"
											}
										]
									},
									"functionSelector": "21923bde",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserLevel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "17973:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17972:14:0"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "18010:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1495,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "18010:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18009:7:0"
									},
									"scope": 1835,
									"src": "17951:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "18333:1940:0",
										"statements": [
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "totalCount",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "18343:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18343:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"hexValue": "30",
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18364:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18343:22:0"
											},
											{
												"body": {
													"id": 1610,
													"nodeType": "Block",
													"src": "18422:494:0",
													"statements": [
														{
															"assignments": [
																1551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1551,
																	"mutability": "mutable",
																	"name": "staker",
																	"nodeType": "VariableDeclaration",
																	"scope": 1610,
																	"src": "18436:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18436:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1555,
															"initialValue": {
																"baseExpression": {
																	"id": 1552,
																	"name": "allUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "18453:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1554,
																"indexExpression": {
																	"id": 1553,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "18462:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18453:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "18436:28:0"
														},
														{
															"assignments": [
																1560
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1560,
																	"mutability": "mutable",
																	"name": "stakes",
																	"nodeType": "VariableDeclaration",
																	"scope": 1610,
																	"src": "18478:21:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct SikkaStakingDecentralize.Stake[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1558,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1557,
																				"name": "Stake",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 109,
																				"src": "18478:5:0"
																			},
																			"referencedDeclaration": 109,
																			"src": "18478:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake"
																			}
																		},
																		"id": 1559,
																		"nodeType": "ArrayTypeName",
																		"src": "18478:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1565,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1561,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "18502:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1563,
																	"indexExpression": {
																		"id": 1562,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "18508:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18502:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 122,
																"src": "18502:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																	"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "18478:44:0"
														},
														{
															"assignments": [
																1567
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1567,
																	"mutability": "mutable",
																	"name": "upline",
																	"nodeType": "VariableDeclaration",
																	"scope": 1610,
																	"src": "18536:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1566,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18536:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1572,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1568,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "18553:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1570,
																	"indexExpression": {
																		"id": 1569,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "18559:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18553:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "18553:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "18536:39:0"
														},
														{
															"body": {
																"id": 1608,
																"nodeType": "Block",
																"src": "18736:170:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1591,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1567,
																				"src": "18758:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1592,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "18768:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "18758:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1600,
																		"nodeType": "IfStatement",
																		"src": "18754:89:0",
																		"trueBody": {
																			"id": 1599,
																			"nodeType": "Block",
																			"src": "18775:68:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1597,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1594,
																							"name": "totalCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1536,
																							"src": "18797:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"expression": {
																								"id": 1595,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1560,
																								"src": "18811:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																								}
																							},
																							"id": 1596,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "18811:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "18797:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1598,
																					"nodeType": "ExpressionStatement",
																					"src": "18797:27:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1601,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1567,
																				"src": "18860:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1602,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "18869:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 1604,
																					"indexExpression": {
																						"id": 1603,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "18875:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "18869:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "referrer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 118,
																				"src": "18869:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "18860:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1607,
																		"nodeType": "ExpressionStatement",
																		"src": "18860:31:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1577,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "18645:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1578,
																			"name": "levelRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "18653:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_storage",
																				"typeString": "uint8[5] storage ref"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "18653:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18645:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1581,
																		"name": "upline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "18676:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18694:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18686:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1582,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18686:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18686:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "18676:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "18645:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1609,
															"initializationExpression": {
																"assignments": [
																	1574
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1574,
																		"mutability": "mutable",
																		"name": "level",
																		"nodeType": "VariableDeclaration",
																		"scope": 1609,
																		"src": "18612:11:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 1573,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "18612:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1576,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18626:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "18612:15:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "18714:7:0",
																	"subExpression": {
																		"id": 1588,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "18714:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1590,
																"nodeType": "ExpressionStatement",
																"src": "18714:7:0"
															},
															"nodeType": "ForStatement",
															"src": "18590:316:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1543,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "18396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1544,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "18400:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18400:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18396:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"initializationExpression": {
													"assignments": [
														1540
													],
													"declarations": [
														{
															"constant": false,
															"id": 1540,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1611,
															"src": "18381:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1539,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1542,
													"initialValue": {
														"hexValue": "30",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18381:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18417:3:0",
														"subExpression": {
															"id": 1547,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "18417:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ExpressionStatement",
													"src": "18417:3:0"
												},
												"nodeType": "ForStatement",
												"src": "18376:540:0"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "incomeData",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "18926:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
														},
														"typeName": {
															"baseType": {
																"id": 1614,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1613,
																	"name": "LevelIncomeData",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 144,
																	"src": "18926:15:0"
																},
																"referencedDeclaration": 144,
																"src": "18926:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
																}
															},
															"id": 1615,
															"nodeType": "ArrayTypeName",
															"src": "18926:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [
														{
															"id": 1621,
															"name": "totalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "18986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18964:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SikkaStakingDecentralize.LevelIncomeData memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1618,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1617,
																	"name": "LevelIncomeData",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 144,
																	"src": "18968:15:0"
																},
																"referencedDeclaration": 144,
																"src": "18968:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
																}
															},
															"id": 1619,
															"nodeType": "ArrayTypeName",
															"src": "18968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
															}
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18964:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18926:71:0"
											},
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 1750,
														"src": "19007:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1627,
												"initialValue": {
													"hexValue": "30",
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19023:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19007:17:0"
											},
											{
												"body": {
													"id": 1746,
													"nodeType": "Block",
													"src": "19081:1158:0",
													"statements": [
														{
															"assignments": [
																1640
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1640,
																	"mutability": "mutable",
																	"name": "staker",
																	"nodeType": "VariableDeclaration",
																	"scope": 1746,
																	"src": "19095:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19095:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1644,
															"initialValue": {
																"baseExpression": {
																	"id": 1641,
																	"name": "allUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "19112:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1643,
																"indexExpression": {
																	"id": 1642,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "19121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19112:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19095:28:0"
														},
														{
															"assignments": [
																1649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1649,
																	"mutability": "mutable",
																	"name": "stakes",
																	"nodeType": "VariableDeclaration",
																	"scope": 1746,
																	"src": "19137:21:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct SikkaStakingDecentralize.Stake[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1647,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1646,
																				"name": "Stake",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 109,
																				"src": "19137:5:0"
																			},
																			"referencedDeclaration": 109,
																			"src": "19137:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake"
																			}
																		},
																		"id": 1648,
																		"nodeType": "ArrayTypeName",
																		"src": "19137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1654,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1650,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "19161:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1652,
																	"indexExpression": {
																		"id": 1651,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "19167:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19161:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 122,
																"src": "19161:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																	"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19137:44:0"
														},
														{
															"assignments": [
																1656
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1656,
																	"mutability": "mutable",
																	"name": "upline",
																	"nodeType": "VariableDeclaration",
																	"scope": 1746,
																	"src": "19195:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1655,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19195:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1661,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1657,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "19212:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1659,
																	"indexExpression": {
																		"id": 1658,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "19218:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19212:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "19212:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19195:39:0"
														},
														{
															"body": {
																"id": 1744,
																"nodeType": "Block",
																"src": "19395:834:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1680,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "19417:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1681,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "19427:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "19417:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1736,
																		"nodeType": "IfStatement",
																		"src": "19413:753:0",
																		"trueBody": {
																			"id": 1735,
																			"nodeType": "Block",
																			"src": "19434:732:0",
																			"statements": [
																				{
																					"body": {
																						"id": 1733,
																						"nodeType": "Block",
																						"src": "19500:648:0",
																						"statements": [
																							{
																								"assignments": [
																									1696
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1696,
																										"mutability": "mutable",
																										"name": "stake",
																										"nodeType": "VariableDeclaration",
																										"scope": 1733,
																										"src": "19526:18:0",
																										"stateVariable": false,
																										"storageLocation": "memory",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake"
																										},
																										"typeName": {
																											"id": 1695,
																											"nodeType": "UserDefinedTypeName",
																											"pathNode": {
																												"id": 1694,
																												"name": "Stake",
																												"nodeType": "IdentifierPath",
																												"referencedDeclaration": 109,
																												"src": "19526:5:0"
																											},
																											"referencedDeclaration": 109,
																											"src": "19526:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																												"typeString": "struct SikkaStakingDecentralize.Stake"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 1700,
																								"initialValue": {
																									"baseExpression": {
																										"id": 1697,
																										"name": "stakes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1649,
																										"src": "19547:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																										}
																									},
																									"id": 1699,
																									"indexExpression": {
																										"id": 1698,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1684,
																										"src": "19554:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19547:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake memory"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "19526:30:0"
																							},
																							{
																								"assignments": [
																									1702
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1702,
																										"mutability": "mutable",
																										"name": "income",
																										"nodeType": "VariableDeclaration",
																										"scope": 1733,
																										"src": "19582:14:0",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"typeName": {
																											"id": 1701,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "19582:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 1712,
																								"initialValue": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1711,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1708,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"id": 1703,
																														"name": "stake",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1696,
																														"src": "19600:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																															"typeString": "struct SikkaStakingDecentralize.Stake memory"
																														}
																													},
																													"id": 1704,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "amount",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 102,
																													"src": "19600:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"baseExpression": {
																														"id": 1705,
																														"name": "levelRewards",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 180,
																														"src": "19615:12:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint8_$5_storage",
																															"typeString": "uint8[5] storage ref"
																														}
																													},
																													"id": 1707,
																													"indexExpression": {
																														"id": 1706,
																														"name": "level",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1663,
																														"src": "19628:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "19615:19:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "19600:34:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1709,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "19599:36:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"hexValue": "313030",
																										"id": 1710,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "19666:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									},
																									"src": "19599:70:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "19582:87:0"
																							},
																							{
																								"expression": {
																									"id": 1731,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 1713,
																											"name": "incomeData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1616,
																											"src": "19696:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
																												"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
																											}
																										},
																										"id": 1716,
																										"indexExpression": {
																											"id": 1715,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "++",
																											"prefix": false,
																											"src": "19707:7:0",
																											"subExpression": {
																												"id": 1714,
																												"name": "index",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1625,
																												"src": "19707:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "19696:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1718,
																												"name": "_user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1528,
																												"src": "19781:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1719,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1696,
																													"src": "19825:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1720,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "stakeId",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 98,
																												"src": "19825:13:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"expression": {
																													"id": 1721,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1696,
																													"src": "19881:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1722,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "amount",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 102,
																												"src": "19881:12:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"id": 1723,
																												"name": "income",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1702,
																												"src": "19939:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"id": 1724,
																												"name": "staker",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1640,
																												"src": "19990:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1725,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1696,
																													"src": "20037:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1726,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "timestamp",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 104,
																												"src": "20037:15:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1729,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1727,
																													"name": "level",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1663,
																													"src": "20089:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "+",
																												"rightExpression": {
																													"hexValue": "31",
																													"id": 1728,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "20097:1:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1_by_1",
																														"typeString": "int_const 1"
																													},
																													"value": "1"
																												},
																												"src": "20089:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											],
																											"id": 1717,
																											"name": "LevelIncomeData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 144,
																											"src": "19718:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_struct$_LevelIncomeData_$144_storage_ptr_$",
																												"typeString": "type(struct SikkaStakingDecentralize.LevelIncomeData storage pointer)"
																											}
																										},
																										"id": 1730,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "structConstructorCall",
																										"lValueRequested": false,
																										"names": [
																											"receiverAddress",
																											"stakeId",
																											"stakeAmount",
																											"incomeReceived",
																											"uplineAddress",
																											"timestamp",
																											"level"
																										],
																										"nodeType": "FunctionCall",
																										"src": "19718:407:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																										}
																									},
																									"src": "19696:429:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																									}
																								},
																								"id": 1732,
																								"nodeType": "ExpressionStatement",
																								"src": "19696:429:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1687,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1684,
																							"src": "19476:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 1688,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1649,
																								"src": "19480:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																								}
																							},
																							"id": 1689,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "19480:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19476:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1734,
																					"initializationExpression": {
																						"assignments": [
																							1684
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 1684,
																								"mutability": "mutable",
																								"name": "j",
																								"nodeType": "VariableDeclaration",
																								"scope": 1734,
																								"src": "19461:9:0",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 1683,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "19461:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 1686,
																						"initialValue": {
																							"hexValue": "30",
																							"id": 1685,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19473:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "19461:13:0"
																					},
																					"loopExpression": {
																						"expression": {
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "19495:3:0",
																							"subExpression": {
																								"id": 1691,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1684,
																								"src": "19495:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1693,
																						"nodeType": "ExpressionStatement",
																						"src": "19495:3:0"
																					},
																					"nodeType": "ForStatement",
																					"src": "19456:692:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1737,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "20183:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1738,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "20192:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 1740,
																					"indexExpression": {
																						"id": 1739,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1656,
																						"src": "20198:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "20192:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "referrer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 118,
																				"src": "20192:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "20183:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1743,
																		"nodeType": "ExpressionStatement",
																		"src": "20183:31:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1666,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "19304:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1667,
																			"name": "levelRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "19312:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_storage",
																				"typeString": "uint8[5] storage ref"
																			}
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "19312:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19304:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1670,
																		"name": "upline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "19335:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19353:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19345:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1671,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19345:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19345:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "19335:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19304:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1745,
															"initializationExpression": {
																"assignments": [
																	1663
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1663,
																		"mutability": "mutable",
																		"name": "level",
																		"nodeType": "VariableDeclaration",
																		"scope": 1745,
																		"src": "19271:11:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 1662,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "19271:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1665,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "19271:15:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "19373:7:0",
																	"subExpression": {
																		"id": 1677,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "19373:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1679,
																"nodeType": "ExpressionStatement",
																"src": "19373:7:0"
															},
															"nodeType": "ForStatement",
															"src": "19249:980:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1632,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "19055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1633,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "19059:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19059:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19055:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1747,
												"initializationExpression": {
													"assignments": [
														1629
													],
													"declarations": [
														{
															"constant": false,
															"id": 1629,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1747,
															"src": "19040:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1628,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "19040:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1631,
													"initialValue": {
														"hexValue": "30",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19052:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "19040:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "19076:3:0",
														"subExpression": {
															"id": 1636,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "19076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1638,
													"nodeType": "ExpressionStatement",
													"src": "19076:3:0"
												},
												"nodeType": "ForStatement",
												"src": "19035:1204:0"
											},
											{
												"expression": {
													"id": 1748,
													"name": "incomeData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1616,
													"src": "20256:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
													}
												},
												"functionReturnParameters": 1534,
												"id": 1749,
												"nodeType": "Return",
												"src": "20249:17:0"
											}
										]
									},
									"functionSelector": "ef71ae56",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelIncomeDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "18241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18240:15:0"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "18303:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
												},
												"typeName": {
													"baseType": {
														"id": 1531,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1530,
															"name": "LevelIncomeData",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 144,
															"src": "18303:15:0"
														},
														"referencedDeclaration": 144,
														"src": "18303:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
														}
													},
													"id": 1532,
													"nodeType": "ArrayTypeName",
													"src": "18303:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18302:26:0"
									},
									"scope": 1835,
									"src": "18205:2068:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "20326:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1757,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "20344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "20344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1759,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "20358:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20344:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20365:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															},
															"value": "Only owner can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20336:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "20336:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1767,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "20420:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1768,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "20427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1764,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "20401:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "20401:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20401:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "20401:33:0"
											}
										]
									},
									"functionSelector": "3ea521ef",
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawUSDT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "20301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20300:16:0"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20326:0:0"
									},
									"scope": 1835,
									"src": "20279:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "20512:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1779,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "20529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1781,
														"indexExpression": {
															"id": 1780,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "20535:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "registered",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 128,
													"src": "20529:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1783,
												"nodeType": "Return",
												"src": "20522:29:0"
											}
										]
									},
									"functionSelector": "c3c5a547",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRegistered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "20469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20468:14:0"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "20506:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20505:6:0"
									},
									"scope": 1835,
									"src": "20447:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "20621:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1790,
														"name": "allUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "20638:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "20638:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1792,
												"nodeType": "Return",
												"src": "20631:22:0"
											}
										]
									},
									"functionSelector": "9be572f6",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalUsers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20586:2:0"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "20612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20611:9:0"
									},
									"scope": 1835,
									"src": "20564:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "20736:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "20754:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20768:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20760:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1805,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20760:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20760:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20754:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20772:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20746:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "20746:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "20818:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20827:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20830:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20810:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "20810:55:0"
											},
											{
												"assignments": [
													1821
												],
												"declarations": [
													{
														"constant": false,
														"id": 1821,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "20876:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1820,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "20876:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"arguments": [
														{
															"id": 1824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "20910:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "20914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1822,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "20891:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "20891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20891:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20876:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1829,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "20939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20948:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20931:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "20931:41:0"
											}
										]
									},
									"functionSelector": "d85c8966",
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1801,
											"modifierName": {
												"id": 1800,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "20726:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20726:9:0"
										}
									],
									"name": "ownerTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "20689:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "20701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20688:28:0"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20736:0:0"
									},
									"scope": 1835,
									"src": "20666:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1836,
							"src": "384:20597:0"
						}
					],
					"src": "32:20950:0"
				},
				"id": 0
			}
		}
	}
}