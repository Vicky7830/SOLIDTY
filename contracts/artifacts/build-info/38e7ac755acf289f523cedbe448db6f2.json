{
	"id": "38e7ac755acf289f523cedbe448db6f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/roy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\n\n\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n}\n\ncontract SikkaStakingDecentralize {\n    address public owner;\n    uint256 public stakeCounter;\n    IERC20 public usdtToken;\n\n    constructor(address _usdtToken) {\n        owner = msg.sender;\n        usdtToken = IERC20(_usdtToken);\n        users[owner].registered = true;\n\n        stakingAPY[30] = 1;\n        stakingAPY[60] = 2;\n\n        stakingAPY[90] = 4;\n        stakingAPY[120] = 6;\n        stakingAPY[180] = 9;\n        stakingAPY[365] = 20;\n    }\n\n    struct Stake {\n        uint256 stakeId;\n        uint256 positionId;\n        uint256 amount;\n        uint256 timestamp;\n        uint256 numDays;\n        bool claimed;\n    }\n\n    struct ReferralInfo {\n        address referralAddress;\n        uint256 incomeEarned;\n        uint256 timestamp;\n    }\n\n    \n\n    struct User {\n        address referrer;\n        Stake[] stakes;\n        uint256 totalIncome;\n        uint256 levelIncome;\n        bool registered;\n    }\n\n    struct LevelIncomeData {\n        address receiverAddress;\n        uint256 stakeId;\n        uint256 stakeAmount;\n        uint256 incomeReceived;\n        address uplineAddress;\n        uint256 timestamp;\n        uint8 level;\n    }\n    mapping(address => User) public users;\n    mapping(address => ReferralInfo[]) public directReferrals;\n    mapping(uint256 => address) public positionIdToUser;\n    mapping(uint256 => uint256) public stakingAPY;\n    mapping(address => uint256) public directReferralIncome;\n\n    address[] public allUsers;\n    uint8[5] public levelRewards = [5, 3, 2, 1, 1];\n\n    event Claimed(\n        address indexed user,\n        uint256 stakeId,\n        uint256 amount,\n        uint256 reward\n    );\n\n    modifier onlyRegistered() {\n        require(users[msg.sender].registered, \"Not registered\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this\");\n        _;\n    }\n\n    function register(address referrer) external {\n        require(!users[msg.sender].registered, \"Already registered\");\n        require(referrer != msg.sender, \"Cannot refer yourself\");\n        require(users[referrer].registered, \"Referrer not registered\");\n        require(\n            users[referrer].stakes.length > 0,\n            \"Referrer must stake before you can register\"\n        );\n\n        users[msg.sender].referrer = referrer;\n        users[msg.sender].registered = true;\n        allUsers.push(msg.sender);\n\n        directReferrals[referrer].push(\n            ReferralInfo({\n                referralAddress: msg.sender,\n                incomeEarned: 0,\n                timestamp: block.timestamp\n            })\n        );\n    }\n\n  \n function stake(uint256 numDays, uint256 amount) external onlyRegistered {\n    require(amount > 0, \"Stake amount must be greater than 0\");\n    require(stakingAPY[numDays] > 0, \"Invalid staking duration\");\n\n    address referrer = users[msg.sender].referrer;\n\n    if (referrer != address(0)) {\n        require(users[referrer].stakes.length > 0, \"Referrer must stake before you can stake\");\n    }\n\n    bool success = usdtToken.transferFrom(msg.sender, address(this), amount);\n    require(success, \"USDT transfer failed\");\n\n    uint256 positionId = ++stakeCounter;\n\n    users[msg.sender].stakes.push(\n        Stake({\n            stakeId: stakeCounter,\n            positionId: positionId,\n            amount: amount,\n            timestamp: block.timestamp,\n            numDays: numDays,\n            claimed: false\n        })\n    );\n\n    positionIdToUser[positionId] = msg.sender;\n\n    bool isFirstStake = users[msg.sender].stakes.length == 1;\n    address upline = users[msg.sender].referrer;\n\n    for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {\n        uint256 reward = 0;\n\n        if (i == 0) {\n            if (isFirstStake) {\n                // 5% Direct + 5% Level 1\n                uint256 directReward = (amount * 5) / 100;\n                uint256 level1Reward = (amount * 5) / 100;\n\n                require(usdtToken.balanceOf(address(this)) >= directReward + level1Reward, \"Insufficient contract balance\");\n\n                require(usdtToken.transfer(upline, directReward), \"Direct referral transfer failed\");\n                require(usdtToken.transfer(upline, level1Reward), \"Level 1 reward transfer failed\");\n\n                directReferralIncome[upline] += directReward;\n                users[upline].totalIncome += directReward + level1Reward;\n                users[upline].levelIncome += level1Reward;\n\n                // ✅ Only update for direct reward\n                ReferralInfo[] storage refs = directReferrals[upline];\n                for (uint256 j = 0; j < refs.length; j++) {\n                    if (refs[j].referralAddress == msg.sender) {\n                        refs[j].incomeEarned += directReward; // ✅ Only direct reward, not level\n                        break;\n                    }\n                }\n            } else {\n                reward = (amount * levelRewards[i]) / 100;\n                require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n                require(usdtToken.transfer(upline, reward), \"Level 1 reward transfer failed\");\n\n                users[upline].totalIncome += reward;\n                users[upline].levelIncome += reward;\n\n                // ❌ Do NOT update directReferralInfo for non-first stake\n            }\n        } else {\n            reward = (amount * levelRewards[i]) / 100;\n            require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\");\n            require(usdtToken.transfer(upline, reward), \"Level reward transfer failed\");\n\n            users[upline].totalIncome += reward;\n            users[upline].levelIncome += reward;\n\n            // ❌ Do NOT update directReferralInfo for level > 1\n        }\n\n        upline = users[upline].referrer;\n    }\n}\n\n\n\n\n    function getContractBalance() external view returns (uint256) {\n        return usdtToken.balanceOf(address(this));\n    }\n\n   \n\n    function getEstimatedReturn(uint256 amount, uint256 numDays)\n        external\n        view\n        returns (uint256 interest, uint256 totalReturn)\n    {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(stakingAPY[numDays] > 0, \"Invalid staking duration\");\n\n        uint256 apy = stakingAPY[numDays];\n        uint256 denominator;\n\n        if (numDays == 30) {\n            denominator = 100 * 30;\n        } else if (numDays == 60) {\n            denominator = 100 * 60;\n        } else if (numDays == 90) {\n            denominator = 100 * 90;\n        } else if (numDays == 120) {\n            denominator = 100 * 120;\n        } else if (numDays == 180) {\n            denominator = 100 * 180;\n        } else if (numDays == 365) {\n            denominator = 100 * 365;\n        } else {\n            revert(\"Unsupported staking duration\");\n        }\n\n        interest = (amount * apy * numDays) / denominator;\n        totalReturn = amount + interest;\n    }\n\n\n\n\n     function getReferralIncomeDetails(address user)\n        external\n        view\n        returns (\n            address[] memory referralAddresses,\n            uint256[] memory incomes,\n            uint256[] memory timestamps\n        )\n    {\n        ReferralInfo[] storage refs = directReferrals[user];\n        uint256 count = refs.length;\n\n        referralAddresses = new address[](count);\n        incomes = new uint256[](count);\n        timestamps = new uint256[](count);\n\n        for (uint256 i = 0; i < count; i++) {\n            referralAddresses[i] = refs[i].referralAddress;\n            incomes[i] = refs[i].incomeEarned;\n            timestamps[i] = refs[i].timestamp;\n        }\n\n        return (referralAddresses, incomes, timestamps);\n    }\n\n\n \n\n    // ✅ Set staking APY\n    function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {\n        require(numDays > 0, \"Days must be > 0\");\n        stakingAPY[numDays] = apy;\n    }\n\n    // ✅ Set level rewards\n    function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {\n        levelRewards = newRewards;\n    }\n\n    function claim(uint256 _positionId) external onlyRegistered {\n        address userAddress = msg.sender;\n        User storage user = users[userAddress];\n        Stake[] storage stakes = user.stakes;\n\n        bool found = false;\n\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId && !stakes[i].claimed) {\n                require(\n                    block.timestamp >=\n                        stakes[i].timestamp + (stakes[i].numDays * 1 days),\n                    \"Staking period not yet completed\"\n                );\n\n                uint256 apy = stakingAPY[stakes[i].numDays];\n                uint256 denominator;\n\n                if (stakes[i].numDays == 30) {\n                    denominator = 100 * 30;\n                } else if (stakes[i].numDays == 60) {\n                    denominator = 100 * 60;\n                } else if (stakes[i].numDays == 90) {\n                    denominator = 100 * 90;\n                } else if (stakes[i].numDays == 120) {\n                    denominator = 100 * 120;\n                } else if (stakes[i].numDays == 180) {\n                    denominator = 100 * 180;\n                } else if (stakes[i].numDays == 365) {\n                    denominator = 100 * 365;\n                } else {\n                    revert(\"Unsupported staking duration\");\n                }\n\n                uint256 interest = (stakes[i].amount *\n                    apy *\n                    stakes[i].numDays) / denominator;\n                uint256 totalAmount = stakes[i].amount + interest;\n\n                require(\n                    usdtToken.balanceOf(address(this)) >= totalAmount,\n                    \"Insufficient contract balance\"\n                );\n\n                stakes[i].claimed = true;\n                bool success = usdtToken.transfer(userAddress, totalAmount);\n                require(success, \"USDT transfer failed\");\n\n                emit Claimed(\n                    userAddress,\n                    stakes[i].stakeId,\n                    stakes[i].amount,\n                    interest\n                );\n\n                found = true;\n                break;\n            }\n        }\n\n        require(found, \"Stake not found or already claimed\");\n    }\n\n    function claimEmergency(uint256 _positionId) external onlyRegistered {\n        address userAddress = msg.sender;\n        User storage user = users[userAddress];\n        Stake[] storage stakes = user.stakes;\n\n        bool found = false;\n\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId && !stakes[i].claimed) {\n                // Check if 10 days have passed since staking\n                require(\n                    block.timestamp >= stakes[i].timestamp + 10 days,\n                    \"Emergency claim allowed only after 10 days\"\n                );\n\n                uint256 amount = stakes[i].amount;\n                uint256 adminFee = (amount * 5) / 100;\n                uint256 userAmount = amount - adminFee;\n\n                require(\n                    usdtToken.balanceOf(address(this)) >= amount,\n                    \"Insufficient contract balance\"\n                );\n\n                stakes[i].claimed = true;\n\n                // Transfer user's share\n                bool successUser = usdtToken.transfer(userAddress, userAmount);\n                require(successUser, \"User transfer failed\");\n\n                // Transfer admin fee\n                bool successAdmin = usdtToken.transfer(\n                    0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd,\n                    adminFee\n                );\n                require(successAdmin, \"Admin fee transfer failed\");\n\n                emit Claimed(userAddress, stakes[i].stakeId, userAmount, 0);\n\n                found = true;\n                break;\n            }\n        }\n\n        require(found, \"Stake not found or already claimed\");\n    }\n\n    function getStakeByPositionId(uint256 _positionId)\n        external\n        view\n        returns (\n            address user,\n            uint256 stakeId,\n            uint256 amount,\n            uint256 startDate,\n            uint256 endDate,\n            uint256 apy,\n            uint256 perDayInterest,\n            bool status\n        )\n    {\n        address userAddr = positionIdToUser[_positionId];\n        require(userAddr != address(0), \"Invalid positionId\");\n\n        Stake[] memory stakes = users[userAddr].stakes;\n        for (uint256 i = 0; i < stakes.length; i++) {\n            if (stakes[i].positionId == _positionId) {\n                Stake memory s = stakes[i];\n\n                uint256 apyRate = stakingAPY[s.numDays];\n                uint256 end = s.timestamp + (s.numDays * 1 days);\n                bool isActive = !s.claimed && block.timestamp < end;\n\n                // ✅ Correct daily interest logic: (amount * apy / 100) / 365\n                uint256 dailyInterest = (s.amount * apyRate) / 100 / 365;\n\n                return (\n                    userAddr,\n                    s.stakeId,\n                    s.amount,\n                    s.timestamp,\n                    end,\n                    apyRate,\n                    dailyInterest,\n                    isActive\n                );\n            }\n        }\n\n        revert(\"Stake not found\");\n    }\n\n    function getPositionIds(address _user)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256 count = users[_user].stakes.length;\n        uint256[] memory ids = new uint256[](count);\n\n        for (uint256 i = 0; i < count; i++) {\n            ids[i] = users[_user].stakes[i].positionId;\n        }\n\n        return ids;\n    }\n\n    function getDirectReferralCount(address user)\n        external\n        view\n        returns (uint256)\n    {\n        return directReferrals[user].length;\n    }\n\n    function getDirectReferralIncome(address user)\n        external\n        view\n        returns (uint256)\n    {\n        return directReferralIncome[user];\n    }\n\n    function getLevelIncome(address user) external view returns (uint256) {\n        return users[user].levelIncome;\n    }\n\n    //   function getReferralIncomeDetails(address user)\n    //     external\n    //     view\n    //     returns (\n    //         address[] memory referralAddresses,\n    //         uint256[] memory incomes,\n    //         uint256[] memory timestamps\n    //     )\n    // {\n    //     ReferralInfo[] storage refs = directReferrals[user];\n    //     uint256 count = refs.length;\n\n    //     referralAddresses = new address[](count);\n    //     incomes = new uint256[](count);\n    //     timestamps = new uint256[](count);\n\n    //     for (uint256 i = 0; i < count; i++) {\n    //         referralAddresses[i] = refs[i].referralAddress;\n    //         incomes[i] = refs[i].incomeEarned;\n    //         timestamps[i] = refs[i].timestamp;\n    //     }\n\n    //     return (referralAddresses, incomes, timestamps);\n    // }\n\n    // function getReferralIncomeDetails(address user)\n    //     external\n    //     view\n    //     returns (\n    //         address[] memory referralAddresses,\n    //         uint256[] memory incomes,\n    //         uint256[] memory timestamps\n    //     )\n    // {\n    //     ReferralInfo[] storage refs = directReferrals[user];\n    //     uint256 count = refs.length;\n\n    //     referralAddresses = new address[](count);\n    //     incomes = new uint256[](count);\n    //     timestamps = new uint256[](count);\n\n    //     for (uint256 i = 0; i < count; i++) {\n    //         referralAddresses[i] = refs[i].referralAddress;\n    //         incomes[i] = refs[i].incomeEarned;\n    //         timestamps[i] = refs[i].timestamp;\n    //     }\n\n    //     return (referralAddresses, incomes, timestamps);\n    // }\n\n    function getTotalIncome(address user) external view returns (uint256) {\n        return users[user].totalIncome;\n    }\n\n    function getTotalLevelIncome(address user) external view returns (uint256) {\n        return users[user].levelIncome;\n    }\n\n    function getUserLevel(address user) external view returns (uint8) {\n        uint256 count = directReferrals[user].length;\n        if (count >= 10) return 3;\n        if (count >= 5) return 2;\n        if (count >= 1) return 1;\n        return 0;\n    }\n\n    function getLevelIncomeDistribution(address _user)\n        external\n        view\n        returns (LevelIncomeData[] memory)\n    {\n        uint256 totalCount = 0;\n\n        for (uint256 i = 0; i < allUsers.length; i++) {\n            address staker = allUsers[i];\n            Stake[] memory stakes = users[staker].stakes;\n            address upline = users[staker].referrer;\n\n            for (\n                uint8 level = 0;\n                level < levelRewards.length && upline != address(0);\n                level++\n            ) {\n                if (upline == _user) {\n                    totalCount += stakes.length;\n                }\n                upline = users[upline].referrer;\n            }\n        }\n\n        LevelIncomeData[] memory incomeData = new LevelIncomeData[](totalCount);\n        uint256 index = 0;\n\n        for (uint256 i = 0; i < allUsers.length; i++) {\n            address staker = allUsers[i];\n            Stake[] memory stakes = users[staker].stakes;\n            address upline = users[staker].referrer;\n\n            for (\n                uint8 level = 0;\n                level < levelRewards.length && upline != address(0);\n                level++\n            ) {\n                if (upline == _user) {\n                    for (uint256 j = 0; j < stakes.length; j++) {\n                        Stake memory stake = stakes[j];\n                        uint256 income = (stake.amount * levelRewards[level]) /\n                            100;\n\n                        incomeData[index++] = LevelIncomeData({\n                            receiverAddress: _user,\n                            stakeId: stake.stakeId,\n                            stakeAmount: stake.amount,\n                            incomeReceived: income,\n                            uplineAddress: staker,\n                            timestamp: stake.timestamp,\n                            level: level + 1\n                        });\n                    }\n                }\n                upline = users[upline].referrer;\n            }\n        }\n\n        return incomeData;\n    }\n\n    function withdrawUSDT(uint256 amount) external {\n        require(msg.sender == owner, \"Only owner can withdraw\");\n        usdtToken.transfer(owner, amount);\n    }\n\n    function isRegistered(address user) external view returns (bool) {\n        return users[user].registered;\n    }\n\n    function getTotalUsers() external view returns (uint256) {\n        return allUsers.length;\n    }\n\n    function ownerTransfer(address to, uint256 amount) external onlyOwner {\n        require(to != address(0), \"Invalid recipient address\");\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        bool success = usdtToken.transfer(to, amount);\n        require(success, \"Token transfer failed\");\n    }\n\n    //testing for  https://testnet.bscscan.com/address/0x290c45548f378174ed88237e6ca54912854d7933#code\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/roy.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/roy.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/roy.sol\":{\"keccak256\":\"0xe0334600b48085bf1d45f394a9b91bcda6dcd438d9a400388e5dfee2858f56c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92dd1712163f7488be462c70435ba54ae1f2be1baacd861c2badd0f72c4648a6\",\"dweb:/ipfs/QmPF7mMkRepvioZxBSRodmk5JckM9gme4LKtrtVqRAaadC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SikkaStakingDecentralize": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "claimEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "directReferralIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "directReferrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "referralAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "incomeEarned",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDirectReferralCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDirectReferralIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								}
							],
							"name": "getEstimatedReturn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "interest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalReturn",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getLevelIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getLevelIncomeDistribution",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "receiverAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "stakeId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakeAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "incomeReceived",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "uplineAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "level",
											"type": "uint8"
										}
									],
									"internalType": "struct SikkaStakingDecentralize.LevelIncomeData[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getPositionIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getReferralIncomeDetails",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "referralAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "incomes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "timestamps",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_positionId",
									"type": "uint256"
								}
							],
							"name": "getStakeByPositionId",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "perDayInterest",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTotalIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTotalLevelIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelRewards",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionIdToUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8[5]",
									"name": "newRewards",
									"type": "uint8[5]"
								}
							],
							"name": "setLevelRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "setStakingAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numDays",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakingAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "levelIncome",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "registered",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0x0120\n    /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n  0x40\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  mstore\n    /* \"contracts/roy.sol\":1880:1881  5 */\n  0x05\n    /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n  0x80\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/roy.sol\":1883:1884  3 */\n  0x03\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xa0\n  mstore\n    /* \"contracts/roy.sol\":1886:1887  2 */\n  0x02\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xc0\n  mstore\n    /* \"contracts/roy.sol\":1889:1890  1 */\n  0x01\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  0xe0\n  dup2\n  swap1\n  mstore\n  0x0100\n  mstore\n  tag_1\n  swap2\n  0x09\n  swap2\n    /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n  swap1\n    /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/roy.sol\":517:838  constructor(address _usdtToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/roy.sol\":559:564  owner */\n  0x00\n    /* \"contracts/roy.sol\":559:577  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/roy.sol\":567:577  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/roy.sol\":559:577  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  dup1\n  dup4\n  sstore\n    /* \"contracts/roy.sol\":587:596  usdtToken */\n  0x02\n    /* \"contracts/roy.sol\":587:617  usdtToken = IERC20(_usdtToken) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  or\n  dup3\n  sstore\n    /* \"contracts/roy.sol\":633:638  owner */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"contracts/roy.sol\":627:639  users[owner] */\n  dup2\n  mstore\n    /* \"contracts/roy.sol\":627:632  users */\n  0x03\n    /* \"contracts/roy.sol\":627:639  users[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"contracts/roy.sol\":627:650  users[owner].registered */\n  0x04\n  swap1\n  dup2\n  add\n    /* \"contracts/roy.sol\":627:657  users[owner].registered = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/roy.sol\":668:678  stakingAPY */\n  0x06\n    /* \"contracts/roy.sol\":668:682  stakingAPY[30] */\n  swap3\n  dup4\n  swap1\n  mstore\n  0xb6ba906ff52451a7a924e2eaeb8aea3ebee7350a8703e5e417edb25358c7dcc1\n    /* \"contracts/roy.sol\":668:686  stakingAPY[30] = 1 */\n  sstore\n    /* \"contracts/roy.sol\":696:710  stakingAPY[60] */\n  0x6ca6dcafc04b6e03616746c3528366f990e332021e35d59275be746d65cae0a7\n    /* \"contracts/roy.sol\":696:714  stakingAPY[60] = 2 */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"contracts/roy.sol\":725:739  stakingAPY[90] */\n  0x1727c0104c2870c3003671480695f7dab262614528b49265008e76fd3d48c5fe\n    /* \"contracts/roy.sol\":725:743  stakingAPY[90] = 4 */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"contracts/roy.sol\":753:768  stakingAPY[120] */\n  0x5451fe6494362676ddb91456d9957c85d968e6f82956407c931a14c023049e6a\n    /* \"contracts/roy.sol\":753:772  stakingAPY[120] = 6 */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/roy.sol\":800:801  9 */\n  0x09\n    /* \"contracts/roy.sol\":782:797  stakingAPY[180] */\n  0xfb78eb295a86b096b5f095822bd250a277112be4103ea4a7608d96eca726b2c1\n    /* \"contracts/roy.sol\":782:801  stakingAPY[180] = 9 */\n  sstore\n    /* \"contracts/roy.sol\":822:825  365 */\n  0x016d\n    /* \"contracts/roy.sol\":811:826  stakingAPY[365] */\n  swap1\n  mstore\n    /* \"contracts/roy.sol\":829:831  20 */\n  0x14\n    /* \"contracts/roy.sol\":811:826  stakingAPY[365] */\n  0x0bbf8adea84d189c39869a372ab30aeba9246eea044edc5a37ac100921b2c4e1\n    /* \"contracts/roy.sol\":811:831  stakingAPY[365] = 20 */\n  sstore\n    /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n  jump(tag_17)\ntag_2:\n  0x01\n  dup4\n  add\n  swap2\n  dup4\n  swap1\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_10:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_10)\ntag_11:\n  dup1\n  iszero\n  tag_12\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x01\n  add\n  0x20\n  dup2\n  0x00\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_11)\ntag_12:\n  pop\ntag_9:\n  pop\n  tag_13\n  swap3\n  swap2\n  pop\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n  swap1\n  jump\t// out\ntag_14:\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_15)\n    /* \"#utility.yul\":14:324   */\ntag_5:\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_19:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_20:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/roy.sol\":388:19563  contract SikkaStakingDecentralize {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98278efb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc2d3c677\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe45a57d0\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe45a57d0\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xef71ae56\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf6e88873\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf7b17d10\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xc2d3c677\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc3c5a547\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc5b89c0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd85c8966\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa87430ba\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xaa7ed462\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbd297178\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x98278efb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9be572f6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d747bad\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa2bdedf4\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x5bd4e16a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x797c7f5f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x797c7f5f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x875bb4e2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x5bd4e16a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x656596a5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6c8c2156\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x379607f5\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3ea521ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4850d2a2\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x05ad3935\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e43eb27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x21923bde\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x28fe7031\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/roy.sol\":1584:1641  mapping(address => ReferralInfo[]) public directReferrals */\n    tag_3:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/roy.sol\":1647:1698  mapping(uint256 => address) public positionIdToUser */\n    tag_4:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"contracts/roy.sol\":16429:16677  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_5:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n        /* \"contracts/roy.sol\":13740:14094  function getPositionIds(address _user)... */\n    tag_6:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"contracts/roy.sol\":8440:10687  function claim(uint256 _positionId) external onlyRegistered {... */\n    tag_7:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/roy.sol\":18757:18919  function withdrawUSDT(uint256 amount) external {... */\n    tag_8:\n      tag_65\n      tag_69\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/roy.sol\":2256:2992  function register(address referrer) external {... */\n    tag_9:\n      tag_65\n      tag_72\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/roy.sol\":8121:8285  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n    tag_10:\n      tag_65\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/roy.sol\":14427:14544  function getLevelIncome(address user) external view returns (uint256) {... */\n    tag_11:\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n        /* \"contracts/roy.sol\":8320:8434  function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/roy.sol\":10693:12354  function claimEmergency(uint256 _positionId) external onlyRegistered {... */\n    tag_13:\n      tag_65\n      tag_88\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/roy.sol\":6224:6344  function getContractBalance() external view returns (uint256) {... */\n    tag_14:\n      tag_78\n      tag_91\n      jump\t// in\n        /* \"contracts/roy.sol\":12360:13734  function getStakeByPositionId(uint256 _positionId)... */\n    tag_15:\n      tag_93\n      tag_94\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_46\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n        /* \"contracts/roy.sol\":2998:6215  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n    tag_16:\n      tag_65\n      tag_99\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/roy.sol\":1704:1749  mapping(uint256 => uint256) public stakingAPY */\n    tag_17:\n      tag_78\n      tag_102\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/roy.sol\":428:448  address public owner */\n    tag_18:\n      tag_48\n      tag_106\n      jump\t// in\n        /* \"contracts/roy.sol\":14100:14258  function getDirectReferralCount(address user)... */\n    tag_19:\n      tag_78\n      tag_109\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/roy.sol\":19042:19138  function getTotalUsers() external view returns (uint256) {... */\n    tag_20:\n      tag_78\n      tag_113\n      jump\t// in\n        /* \"contracts/roy.sol\":7340:8084  function getReferralIncomeDetails(address user)... */\n    tag_21:\n      tag_115\n      tag_116\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n        /* \"contracts/roy.sol\":1817:1842  address[] public allUsers */\n    tag_22:\n      tag_48\n      tag_121\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"contracts/roy.sol\":1541:1578  mapping(address => User) public users */\n    tag_23:\n      tag_124\n      tag_125\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_46\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"contracts/roy.sol\":487:510  IERC20 public usdtToken */\n    tag_24:\n      tag_48\n      tag_130\n      jump\t// in\n        /* \"contracts/roy.sol\":14264:14421  function getDirectReferralIncome(address user)... */\n    tag_25:\n      tag_78\n      tag_134\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/roy.sol\":6355:7330  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n    tag_26:\n      tag_137\n      tag_138\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n        /* \"contracts/roy.sol\":16178:16295  function getTotalIncome(address user) external view returns (uint256) {... */\n    tag_27:\n      tag_78\n      tag_143\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/roy.sol\":18925:19036  function isRegistered(address user) external view returns (bool) {... */\n    tag_28:\n      tag_146\n      tag_147\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n        /* \"contracts/roy.sol\":19144:19457  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_30:\n      tag_65\n      tag_156\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n    tag_31:\n      tag_54\n      tag_159\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/roy.sol\":16683:18751  function getLevelIncomeDistribution(address _user)... */\n    tag_32:\n      tag_162\n      tag_163\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n        /* \"contracts/roy.sol\":1755:1810  mapping(address => uint256) public directReferralIncome */\n    tag_33:\n      tag_78\n      tag_168\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"contracts/roy.sol\":454:481  uint256 public stakeCounter */\n    tag_34:\n      tag_78\n      tag_172\n      jump\t// in\n        /* \"contracts/roy.sol\":1584:1641  mapping(address => ReferralInfo[]) public directReferrals */\n    tag_45:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/roy.sol\":1647:1698  mapping(uint256 => address) public positionIdToUser */\n    tag_51:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":16429:16677  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16521:16542  directReferrals[user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":16488:16493  uint8 */\n      0x00\n        /* \"contracts/roy.sol\":16521:16542  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16521:16536  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":16521:16542  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":16521:16549  directReferrals[user].length */\n      sload\n        /* \"contracts/roy.sol\":16572:16574  10 */\n      0x0a\n        /* \"contracts/roy.sol\":16563:16574  count >= 10 */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":16559:16584  if (count >= 10) return 3 */\n      tag_177\n      jumpi\n        /* \"contracts/roy.sol\":16583:16584  3 */\n      0x03\n        /* \"contracts/roy.sol\":16576:16584  return 3 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":16559:16584  if (count >= 10) return 3 */\n    tag_177:\n        /* \"contracts/roy.sol\":16607:16608  5 */\n      0x05\n        /* \"contracts/roy.sol\":16598:16603  count */\n      dup2\n        /* \"contracts/roy.sol\":16598:16608  count >= 5 */\n      lt\n        /* \"contracts/roy.sol\":16594:16618  if (count >= 5) return 2 */\n      tag_178\n      jumpi\n        /* \"contracts/roy.sol\":16617:16618  2 */\n      0x02\n        /* \"contracts/roy.sol\":16610:16618  return 2 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":16594:16618  if (count >= 5) return 2 */\n    tag_178:\n        /* \"contracts/roy.sol\":16641:16642  1 */\n      0x01\n        /* \"contracts/roy.sol\":16632:16637  count */\n      dup2\n        /* \"contracts/roy.sol\":16632:16642  count >= 1 */\n      lt\n        /* \"contracts/roy.sol\":16628:16652  if (count >= 1) return 1 */\n      tag_179\n      jumpi\n        /* \"contracts/roy.sol\":16651:16652  1 */\n      0x01\n        /* \"contracts/roy.sol\":16644:16652  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/roy.sol\":16628:16652  if (count >= 1) return 1 */\n    tag_179:\n        /* \"contracts/roy.sol\":16669:16670  0 */\n      0x00\n        /* \"contracts/roy.sol\":16662:16670  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":16429:16677  function getUserLevel(address user) external view returns (uint8) {... */\n    tag_176:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":13740:14094  function getPositionIds(address _user)... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":13874:13886  users[_user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":13858:13871  uint256 count */\n      0x00\n        /* \"contracts/roy.sol\":13874:13886  users[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":13874:13879  users */\n      0x03\n        /* \"contracts/roy.sol\":13874:13886  users[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":13874:13893  users[_user].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":13874:13900  users[_user].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":13826:13842  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/roy.sol\":13874:13900  users[_user].stakes.length */\n      dup2\n        /* \"contracts/roy.sol\":13933:13953  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_181\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_181:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_182:\n      pop\n        /* \"contracts/roy.sol\":13910:13953  uint256[] memory ids = new uint256[](count) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13969:13978  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":13964:14067  for (uint256 i = 0; i < count; i++) {... */\n    tag_183:\n        /* \"contracts/roy.sol\":13988:13993  count */\n      dup3\n        /* \"contracts/roy.sol\":13984:13985  i */\n      dup2\n        /* \"contracts/roy.sol\":13984:13993  i < count */\n      lt\n        /* \"contracts/roy.sol\":13964:14067  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_184\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14023:14035  users[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":14023:14028  users */\n      0x03\n        /* \"contracts/roy.sol\":14023:14035  users[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":14023:14042  users[_user].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":14023:14045  users[_user].stakes[i] */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":14043:14044  i */\n      dup3\n      swap1\n        /* \"contracts/roy.sol\":14023:14045  users[_user].stakes[i] */\n      dup2\n      lt\n      tag_186\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_186:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":14023:14056  users[_user].stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":14014:14017  ids */\n      dup3\n        /* \"contracts/roy.sol\":14018:14019  i */\n      dup3\n        /* \"contracts/roy.sol\":14014:14020  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_188\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_188:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/roy.sol\":14014:14056  ids[i] = users[_user].stakes[i].positionId */\n      mstore\n        /* \"contracts/roy.sol\":13995:13998  i++ */\n      dup1\n      tag_189\n      dup2\n      tag_190\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":13964:14067  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_183)\n    tag_184:\n      pop\n        /* \"contracts/roy.sol\":14084:14087  ids */\n      swap4\n        /* \"contracts/roy.sol\":13740:14094  function getPositionIds(address _user)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":8440:10687  function claim(uint256 _positionId) external onlyRegistered {... */\n    tag_67:\n        /* \"contracts/roy.sol\":2080:2090  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2074:2079  users */\n      0x03\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2074:2102  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2066:2121  require(users[msg.sender].registered, \"Not registered\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/roy.sol\":8532:8542  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":8510:8529  address userAddress */\n      0x00\n        /* \"contracts/roy.sol\":8572:8590  users[userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":8572:8577  users */\n      0x03\n        /* \"contracts/roy.sol\":8572:8590  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":8625:8636  user.stakes */\n      0x01\n      dup3\n      add\n      swap1\n        /* \"contracts/roy.sol\":8510:8529  address userAddress */\n      dup1\n        /* \"contracts/roy.sol\":8676:10618  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_196:\n        /* \"contracts/roy.sol\":8700:8713  stakes.length */\n      dup3\n      sload\n        /* \"contracts/roy.sol\":8696:8713  i < stakes.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":8676:10618  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/roy.sol\":8762:8773  _positionId */\n      dup6\n        /* \"contracts/roy.sol\":8738:8744  stakes */\n      dup4\n        /* \"contracts/roy.sol\":8745:8746  i */\n      dup3\n        /* \"contracts/roy.sol\":8738:8747  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":8738:8758  stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":8738:8773  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":8738:8795  stakes[i].positionId == _positionId && !stakes[i].claimed */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":8778:8784  stakes */\n      dup3\n        /* \"contracts/roy.sol\":8785:8786  i */\n      dup2\n        /* \"contracts/roy.sol\":8778:8787  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_202\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_202:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":8778:8795  stakes[i].claimed */\n      0x05\n        /* \"contracts/roy.sol\":8778:8787  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":8778:8795  stakes[i].claimed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":8777:8795  !stakes[i].claimed */\n      iszero\n        /* \"contracts/roy.sol\":8738:8795  stakes[i].positionId == _positionId && !stakes[i].claimed */\n    tag_201:\n        /* \"contracts/roy.sol\":8734:10608  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/roy.sol\":8910:8916  stakes */\n      dup3\n        /* \"contracts/roy.sol\":8917:8918  i */\n      dup2\n        /* \"contracts/roy.sol\":8910:8919  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_205:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":8910:8927  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":8930:8936  1 days */\n      0x015180\n        /* \"contracts/roy.sol\":8910:8936  stakes[i].numDays * 1 days */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/roy.sol\":8887:8893  stakes */\n      dup4\n        /* \"contracts/roy.sol\":8894:8895  i */\n      dup3\n        /* \"contracts/roy.sol\":8887:8896  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_209\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_209:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":8887:8906  stakes[i].timestamp */\n      0x03\n      add\n      sload\n        /* \"contracts/roy.sol\":8887:8937  stakes[i].timestamp + (stakes[i].numDays * 1 days) */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"contracts/roy.sol\":8844:8859  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":8844:8937  block.timestamp >=... */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":8815:9011  require(... */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_215\n      jump\t// in\n    tag_213:\n        /* \"contracts/roy.sol\":9030:9041  uint256 apy */\n      0x00\n        /* \"contracts/roy.sol\":9044:9054  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":9044:9073  stakingAPY[stakes[i].numDays] */\n      0x00\n        /* \"contracts/roy.sol\":9055:9061  stakes */\n      dup6\n        /* \"contracts/roy.sol\":9062:9063  i */\n      dup5\n        /* \"contracts/roy.sol\":9055:9064  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9055:9072  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9044:9073  stakingAPY[stakes[i].numDays] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":9030:9073  uint256 apy = stakingAPY[stakes[i].numDays] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":9091:9110  uint256 denominator */\n      0x00\n        /* \"contracts/roy.sol\":9133:9139  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9140:9141  i */\n      dup4\n        /* \"contracts/roy.sol\":9133:9142  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9133:9150  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9154:9156  30 */\n      0x1e\n        /* \"contracts/roy.sol\":9133:9156  stakes[i].numDays == 30 */\n      eq\n        /* \"contracts/roy.sol\":9129:9802  if (stakes[i].numDays == 30) {... */\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9194:9202  100 * 30 */\n      0x0bb8\n        /* \"contracts/roy.sol\":9129:9802  if (stakes[i].numDays == 30) {... */\n      jump(tag_241)\n    tag_220:\n        /* \"contracts/roy.sol\":9231:9237  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9238:9239  i */\n      dup4\n        /* \"contracts/roy.sol\":9231:9240  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_222\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_222:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9231:9248  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9252:9254  60 */\n      0x3c\n        /* \"contracts/roy.sol\":9231:9254  stakes[i].numDays == 60 */\n      eq\n        /* \"contracts/roy.sol\":9227:9802  if (stakes[i].numDays == 60) {... */\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9292:9300  100 * 60 */\n      0x1770\n        /* \"contracts/roy.sol\":9227:9802  if (stakes[i].numDays == 60) {... */\n      jump(tag_241)\n    tag_224:\n        /* \"contracts/roy.sol\":9329:9335  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9336:9337  i */\n      dup4\n        /* \"contracts/roy.sol\":9329:9338  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_226\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_226:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9329:9346  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9350:9352  90 */\n      0x5a\n        /* \"contracts/roy.sol\":9329:9352  stakes[i].numDays == 90 */\n      eq\n        /* \"contracts/roy.sol\":9325:9802  if (stakes[i].numDays == 90) {... */\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9390:9398  100 * 90 */\n      0x2328\n        /* \"contracts/roy.sol\":9325:9802  if (stakes[i].numDays == 90) {... */\n      jump(tag_241)\n    tag_228:\n        /* \"contracts/roy.sol\":9427:9433  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9434:9435  i */\n      dup4\n        /* \"contracts/roy.sol\":9427:9436  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_230\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_230:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9427:9444  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9448:9451  120 */\n      0x78\n        /* \"contracts/roy.sol\":9427:9451  stakes[i].numDays == 120 */\n      eq\n        /* \"contracts/roy.sol\":9423:9802  if (stakes[i].numDays == 120) {... */\n      iszero\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9489:9498  100 * 120 */\n      0x2ee0\n        /* \"contracts/roy.sol\":9423:9802  if (stakes[i].numDays == 120) {... */\n      jump(tag_241)\n    tag_232:\n        /* \"contracts/roy.sol\":9527:9533  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9534:9535  i */\n      dup4\n        /* \"contracts/roy.sol\":9527:9536  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9527:9544  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9548:9551  180 */\n      0xb4\n        /* \"contracts/roy.sol\":9527:9551  stakes[i].numDays == 180 */\n      eq\n        /* \"contracts/roy.sol\":9523:9802  if (stakes[i].numDays == 180) {... */\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9589:9598  100 * 180 */\n      0x4650\n        /* \"contracts/roy.sol\":9523:9802  if (stakes[i].numDays == 180) {... */\n      jump(tag_241)\n    tag_236:\n        /* \"contracts/roy.sol\":9627:9633  stakes */\n      dup5\n        /* \"contracts/roy.sol\":9634:9635  i */\n      dup4\n        /* \"contracts/roy.sol\":9627:9636  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_238:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9627:9644  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9648:9651  365 */\n      0x016d\n        /* \"contracts/roy.sol\":9627:9651  stakes[i].numDays == 365 */\n      eq\n        /* \"contracts/roy.sol\":9623:9802  if (stakes[i].numDays == 365) {... */\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":9689:9698  100 * 365 */\n      0x8e94\n        /* \"contracts/roy.sol\":9623:9802  if (stakes[i].numDays == 365) {... */\n      jump(tag_241)\n    tag_240:\n        /* \"contracts/roy.sol\":9745:9783  revert(\"Unsupported staking duration\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_243\n      jump\t// in\n        /* \"contracts/roy.sol\":9623:9802  if (stakes[i].numDays == 365) {... */\n    tag_241:\n        /* \"contracts/roy.sol\":9820:9836  uint256 interest */\n      0x00\n        /* \"contracts/roy.sol\":9926:9937  denominator */\n      dup2\n        /* \"contracts/roy.sol\":9905:9911  stakes */\n      dup7\n        /* \"contracts/roy.sol\":9912:9913  i */\n      dup6\n        /* \"contracts/roy.sol\":9905:9914  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_244\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_244:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9905:9922  stakes[i].numDays */\n      0x04\n      add\n      sload\n        /* \"contracts/roy.sol\":9879:9882  apy */\n      dup5\n        /* \"contracts/roy.sol\":9840:9846  stakes */\n      dup9\n        /* \"contracts/roy.sol\":9847:9848  i */\n      dup8\n        /* \"contracts/roy.sol\":9840:9849  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_246\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_246:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9840:9856  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":9840:9882  stakes[i].amount *... */\n      tag_248\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_248:\n        /* \"contracts/roy.sol\":9840:9922  stakes[i].amount *... */\n      tag_249\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_249:\n        /* \"contracts/roy.sol\":9839:9937  (stakes[i].amount *... */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"contracts/roy.sol\":9820:9937  uint256 interest = (stakes[i].amount *... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":9955:9974  uint256 totalAmount */\n      0x00\n        /* \"contracts/roy.sol\":9996:10004  interest */\n      dup2\n        /* \"contracts/roy.sol\":9977:9983  stakes */\n      dup8\n        /* \"contracts/roy.sol\":9984:9985  i */\n      dup7\n        /* \"contracts/roy.sol\":9977:9986  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":9977:9993  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":9977:10004  stakes[i].amount + interest */\n      tag_254\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_254:\n        /* \"contracts/roy.sol\":10052:10061  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":10052:10086  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":9955:10004  uint256 totalAmount = stakes[i].amount + interest */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10052:10061  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":10052:10071  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":10052:10086  usdtToken.balanceOf(address(this)) */\n      tag_255\n      swap1\n        /* \"contracts/roy.sol\":10080:10084  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":10052:10086  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_255:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"contracts/roy.sol\":10052:10101  usdtToken.balanceOf(address(this)) >= totalAmount */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":10023:10172  require(... */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_261:\n        /* \"contracts/roy.sol\":10211:10215  true */\n      0x01\n        /* \"contracts/roy.sol\":10191:10197  stakes */\n      dup8\n        /* \"contracts/roy.sol\":10198:10199  i */\n      dup7\n        /* \"contracts/roy.sol\":10191:10200  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_264\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_264:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":10191:10208  stakes[i].claimed */\n      0x05\n      add\n        /* \"contracts/roy.sol\":10191:10215  stakes[i].claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":10248:10257  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":10248:10292  usdtToken.transfer(userAddress, totalAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10248:10257  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":10248:10266  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":10248:10292  usdtToken.transfer(userAddress, totalAmount) */\n      tag_266\n      swap1\n        /* \"contracts/roy.sol\":10267:10278  userAddress */\n      dup14\n      swap1\n        /* \"contracts/roy.sol\":10280:10291  totalAmount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":10248:10292  usdtToken.transfer(userAddress, totalAmount) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_266:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"contracts/roy.sol\":10233:10292  bool success = usdtToken.transfer(userAddress, totalAmount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":10318:10325  success */\n      dup1\n        /* \"contracts/roy.sol\":10310:10350  require(success, \"USDT transfer failed\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_275\n      jump\t// in\n    tag_273:\n        /* \"contracts/roy.sol\":10403:10414  userAddress */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":10374:10539  Claimed(... */\n      and\n      0x9cdcf2f7714cca3508c7f0110b04a90a80a3a8dd0e35de99689db74d28c5383e\n        /* \"contracts/roy.sol\":10436:10442  stakes */\n      dup10\n        /* \"contracts/roy.sol\":10443:10444  i */\n      dup9\n        /* \"contracts/roy.sol\":10436:10445  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_276\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_276:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":10436:10453  stakes[i].stakeId */\n      0x00\n      add\n      sload\n        /* \"contracts/roy.sol\":10475:10481  stakes */\n      dup11\n        /* \"contracts/roy.sol\":10482:10483  i */\n      dup10\n        /* \"contracts/roy.sol\":10475:10484  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_278\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_278:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":10475:10491  stakes[i].amount */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":10513:10521  interest */\n      dup7\n        /* \"contracts/roy.sol\":10374:10539  Claimed(... */\n      mload(0x40)\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/roy.sol\":10566:10570  true */\n      0x01\n        /* \"contracts/roy.sol\":10558:10570  found = true */\n      swap7\n      pop\n        /* \"contracts/roy.sol\":10588:10593  break */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_197)\n        /* \"contracts/roy.sol\":8734:10608  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n    tag_204:\n        /* \"contracts/roy.sol\":8715:8718  i++ */\n      dup1\n      tag_282\n      dup2\n      tag_190\n      jump\t// in\n    tag_282:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":8676:10618  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"contracts/roy.sol\":10636:10641  found */\n      dup1\n        /* \"contracts/roy.sol\":10628:10680  require(found, \"Stake not found or already claimed\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_285\n      jump\t// in\n    tag_283:\n        /* \"contracts/roy.sol\":2131:2132  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":8440:10687  function claim(uint256 _positionId) external onlyRegistered {... */\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":18757:18919  function withdrawUSDT(uint256 amount) external {... */\n    tag_70:\n        /* \"contracts/roy.sol\":18836:18841  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":18822:18832  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":18822:18841  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":18814:18869  require(msg.sender == owner, \"Only owner can withdraw\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_289\n      jump\t// in\n    tag_287:\n        /* \"contracts/roy.sol\":18879:18888  usdtToken */\n      sload(0x02)\n      0x00\n        /* \"contracts/roy.sol\":18898:18903  owner */\n      sload\n        /* \"contracts/roy.sol\":18879:18912  usdtToken.transfer(owner, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18879:18888  usdtToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/roy.sol\":18879:18897  usdtToken.transfer */\n      0xa9059cbb\n      swap3\n        /* \"contracts/roy.sol\":18879:18912  usdtToken.transfer(owner, amount) */\n      tag_290\n      swap3\n        /* \"contracts/roy.sol\":18898:18903  owner */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":18905:18911  amount */\n      dup6\n      swap1\n        /* \"contracts/roy.sol\":18879:18912  usdtToken.transfer(owner, amount) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_294:\n      pop\n        /* \"contracts/roy.sol\":18757:18919  function withdrawUSDT(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":2256:2992  function register(address referrer) external {... */\n    tag_73:\n        /* \"contracts/roy.sol\":2326:2336  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2320:2337  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2320:2325  users */\n      0x03\n        /* \"contracts/roy.sol\":2320:2337  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2320:2348  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2319:2348  !users[msg.sender].registered */\n      iszero\n        /* \"contracts/roy.sol\":2311:2371  require(!users[msg.sender].registered, \"Already registered\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_298\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2389:2411  referrer != msg.sender */\n      dup2\n      and\n        /* \"contracts/roy.sol\":2401:2411  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2389:2411  referrer != msg.sender */\n      eq\n      iszero\n        /* \"contracts/roy.sol\":2381:2437  require(referrer != msg.sender, \"Cannot refer yourself\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_301\n      jump\t// in\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2455:2470  users[referrer] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2455:2460  users */\n      0x03\n        /* \"contracts/roy.sol\":2455:2470  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2455:2481  users[referrer].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2447:2509  require(users[referrer].registered, \"Referrer not registered\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_304\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":2540:2555  users[referrer] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":2572:2573  0 */\n      0x00\n        /* \"contracts/roy.sol\":2540:2555  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2540:2545  users */\n      0x03\n        /* \"contracts/roy.sol\":2540:2555  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2540:2562  users[referrer].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":2540:2569  users[referrer].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":2519:2642  require(... */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_307\n      jump\t// in\n    tag_305:\n        /* \"contracts/roy.sol\":2659:2669  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2653:2670  users[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2653:2658  users */\n      0x03\n        /* \"contracts/roy.sol\":2653:2670  users[msg.sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":2653:2690  users[msg.sender].referrer = referrer */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap8\n      dup9\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      dup4\n      sstore\n        /* \"contracts/roy.sol\":2700:2728  users[msg.sender].registered */\n      0x04\n      swap3\n      dup4\n      add\n        /* \"contracts/roy.sol\":2700:2735  users[msg.sender].registered = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/roy.sol\":2653:2690  users[msg.sender].referrer = referrer */\n      0x01\n        /* \"contracts/roy.sol\":2700:2735  users[msg.sender].registered = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":2745:2753  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":2745:2770  allUsers.push(msg.sender) */\n      dup1\n      sload\n      dup1\n      dup4\n      add\n      swap1\n      swap2\n      sstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      dup1\n      sload\n      dup5\n      and\n      dup11\n      or\n      swap1\n      sstore\n        /* \"contracts/roy.sol\":2781:2806  directReferrals[referrer] */\n      swap1\n      dup8\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"contracts/roy.sol\":2825:2975  ReferralInfo({... */\n      dup4\n      mload\n      0x60\n      dup2\n      add\n      dup6\n      mstore\n      swap8\n      dup9\n      mstore\n      dup8\n      dup6\n      add\n      dup8\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2945:2960  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":2825:2975  ReferralInfo({... */\n      swap5\n      dup10\n      add\n      swap5\n      dup6\n      mstore\n        /* \"contracts/roy.sol\":2781:2985  directReferrals[referrer].push(... */\n      dup2\n      sload\n      dup1\n      dup6\n      add\n      dup4\n      sstore\n      swap2\n      dup9\n      mstore\n      swap5\n      swap1\n      swap7\n      keccak256\n      swap7\n      mload\n      swap6\n      swap1\n      swap5\n      mul\n      swap1\n      swap6\n      add\n      dup1\n      sload\n      swap5\n      swap1\n      swap7\n      and\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      dup5\n      sstore\n      swap1\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/roy.sol\":2256:2992  function register(address referrer) external {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":8121:8285  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n    tag_77:\n        /* \"contracts/roy.sol\":2198:2203  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2184:2194  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2184:2203  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2176:2232  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_313\n      jump\t// in\n    tag_311:\n        /* \"contracts/roy.sol\":8221:8222  0 */\n      0x00\n        /* \"contracts/roy.sol\":8211:8218  numDays */\n      dup3\n        /* \"contracts/roy.sol\":8211:8222  numDays > 0 */\n      gt\n        /* \"contracts/roy.sol\":8203:8243  require(numDays > 0, \"Days must be > 0\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"contracts/roy.sol\":8253:8272  stakingAPY[numDays] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"contracts/roy.sol\":8253:8263  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":8253:8272  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":8253:8278  stakingAPY[numDays] = apy */\n      sstore\n        /* \"contracts/roy.sol\":8121:8285  function setStakingAPY(uint256 numDays, uint256 apy) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":14427:14544  function getLevelIncome(address user) external view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14514:14525  users[user] */\n      and\n        /* \"contracts/roy.sol\":14488:14495  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":14514:14525  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":14514:14519  users */\n      0x03\n        /* \"contracts/roy.sol\":14514:14525  users[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":14514:14537  users[user].levelIncome */\n      add\n      sload\n      swap1\n        /* \"contracts/roy.sol\":14427:14544  function getLevelIncome(address user) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":8320:8434  function setLevelRewards(uint8[5] memory newRewards) external onlyOwner {... */\n    tag_86:\n        /* \"contracts/roy.sol\":2198:2203  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2184:2194  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2184:2203  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2176:2232  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_313\n      jump\t// in\n    tag_320:\n        /* \"contracts/roy.sol\":8402:8427  levelRewards = newRewards */\n      tag_294\n        /* \"contracts/roy.sol\":8402:8414  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":8417:8427  newRewards */\n      dup3\n        /* \"contracts/roy.sol\":8402:8427  levelRewards = newRewards */\n      0x05\n      tag_324\n      jump\t// in\n        /* \"contracts/roy.sol\":10693:12354  function claimEmergency(uint256 _positionId) external onlyRegistered {... */\n    tag_89:\n        /* \"contracts/roy.sol\":2080:2090  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2074:2079  users */\n      0x03\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2074:2102  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2066:2121  require(users[msg.sender].registered, \"Not registered\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_326:\n        /* \"contracts/roy.sol\":10794:10804  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":10772:10791  address userAddress */\n      0x00\n        /* \"contracts/roy.sol\":10834:10852  users[userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":10834:10839  users */\n      0x03\n        /* \"contracts/roy.sol\":10834:10852  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":10887:10898  user.stakes */\n      0x01\n      dup3\n      add\n      swap1\n        /* \"contracts/roy.sol\":10772:10791  address userAddress */\n      dup1\n        /* \"contracts/roy.sol\":10938:12285  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_329:\n        /* \"contracts/roy.sol\":10962:10975  stakes.length */\n      dup3\n      sload\n        /* \"contracts/roy.sol\":10958:10975  i < stakes.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":10938:12285  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/roy.sol\":11024:11035  _positionId */\n      dup6\n        /* \"contracts/roy.sol\":11000:11006  stakes */\n      dup4\n        /* \"contracts/roy.sol\":11007:11008  i */\n      dup3\n        /* \"contracts/roy.sol\":11000:11009  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_332:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":11000:11020  stakes[i].positionId */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":11000:11035  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":11000:11057  stakes[i].positionId == _positionId && !stakes[i].claimed */\n      dup1\n      iszero\n      tag_334\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":11040:11046  stakes */\n      dup3\n        /* \"contracts/roy.sol\":11047:11048  i */\n      dup2\n        /* \"contracts/roy.sol\":11040:11049  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_335\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_335:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/roy.sol\":11040:11057  stakes[i].claimed */\n      0x05\n        /* \"contracts/roy.sol\":11040:11049  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":11040:11057  stakes[i].claimed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":11039:11057  !stakes[i].claimed */\n      iszero\n        /* \"contracts/roy.sol\":11000:11057  stakes[i].positionId == _positionId && !stakes[i].claimed */\n    tag_334:\n        /* \"contracts/roy.sol\":10996:12275  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"contracts/roy.sol\":11187:11193  stakes */\n      dup3\n        /* \"contracts/roy.sol\":11194:11195  i */\n      dup2\n        /* \"contracts/roy.sol\":11187:11196  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_338\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_338:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/roy.sol\":11187:11206  stakes[i].timestamp */\n      0x03\n      add\n      sload\n        /* \"contracts/roy.sol\":11209:11216  10 days */\n      0x0d2f00\n        /* \"contracts/roy.sol\":11187:11216  stakes[i].timestamp + 10 days */\n      tag_340\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_340:\n        /* \"contracts/roy.sol\":11168:11183  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":11168:11216  block.timestamp >= stakes[i].timestamp + 10 days */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":11139:11300  require(... */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_343\n      jump\t// in\n    tag_341:\n        /* \"contracts/roy.sol\":11319:11333  uint256 amount */\n      0x00\n        /* \"contracts/roy.sol\":11336:11342  stakes */\n      dup4\n        /* \"contracts/roy.sol\":11343:11344  i */\n      dup3\n        /* \"contracts/roy.sol\":11336:11345  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_344\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_344:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":11336:11352  stakes[i].amount */\n      0x02\n        /* \"contracts/roy.sol\":11336:11345  stakes[i] */\n      0x06\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/roy.sol\":11336:11352  stakes[i].amount */\n      add\n      sload\n      swap2\n      pop\n        /* \"contracts/roy.sol\":11404:11407  100 */\n      0x64\n        /* \"contracts/roy.sol\":11390:11400  amount * 5 */\n      tag_346\n        /* \"contracts/roy.sol\":11336:11352  stakes[i].amount */\n      dup4\n        /* \"contracts/roy.sol\":11399:11400  5 */\n      0x05\n        /* \"contracts/roy.sol\":11390:11400  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_346:\n        /* \"contracts/roy.sol\":11389:11407  (amount * 5) / 100 */\n      tag_347\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_347:\n        /* \"contracts/roy.sol\":11370:11407  uint256 adminFee = (amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":11425:11443  uint256 userAmount */\n      0x00\n        /* \"contracts/roy.sol\":11446:11463  amount - adminFee */\n      tag_348\n        /* \"contracts/roy.sol\":11370:11407  uint256 adminFee = (amount * 5) / 100 */\n      dup3\n        /* \"contracts/roy.sol\":11446:11452  amount */\n      dup5\n        /* \"contracts/roy.sol\":11446:11463  amount - adminFee */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"contracts/roy.sol\":11511:11520  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":11511:11545  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":11425:11463  uint256 userAmount = amount - adminFee */\n      swap2\n      swap3\n      pop\n        /* \"contracts/roy.sol\":11549:11555  amount */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":11511:11520  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":11511:11530  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":11511:11545  usdtToken.balanceOf(address(this)) */\n      tag_350\n      swap1\n        /* \"contracts/roy.sol\":11539:11543  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":11511:11545  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_350:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_351:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_354:\n        /* \"contracts/roy.sol\":11511:11555  usdtToken.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":11482:11626  require(... */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_355:\n        /* \"contracts/roy.sol\":11665:11669  true */\n      0x01\n        /* \"contracts/roy.sol\":11645:11651  stakes */\n      dup7\n        /* \"contracts/roy.sol\":11652:11653  i */\n      dup6\n        /* \"contracts/roy.sol\":11645:11654  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_357:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":11645:11662  stakes[i].claimed */\n      0x05\n      add\n        /* \"contracts/roy.sol\":11645:11669  stakes[i].claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/roy.sol\":11748:11757  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":11748:11791  usdtToken.transfer(userAddress, userAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":11748:11757  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":11748:11766  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":11748:11791  usdtToken.transfer(userAddress, userAmount) */\n      tag_359\n      swap1\n        /* \"contracts/roy.sol\":11767:11778  userAddress */\n      dup13\n      swap1\n        /* \"contracts/roy.sol\":11780:11790  userAmount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":11748:11791  usdtToken.transfer(userAddress, userAmount) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_359:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_360:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_362:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_363\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_363:\n        /* \"contracts/roy.sol\":11729:11791  bool successUser = usdtToken.transfer(userAddress, userAmount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":11817:11828  successUser */\n      dup1\n        /* \"contracts/roy.sol\":11809:11853  require(successUser, \"User transfer failed\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_366\n      jump\t// in\n    tag_364:\n        /* \"contracts/roy.sol\":11930:11939  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":11930:12060  usdtToken.transfer(... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":11910:11927  bool successAdmin */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":11930:11939  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":11930:11948  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":11930:12060  usdtToken.transfer(... */\n      tag_367\n      swap1\n        /* \"contracts/roy.sol\":11970:12012  0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd */\n      0x9ab49a6105a768ed88b8afd9cca7f6886f739aad\n      swap1\n        /* \"contracts/roy.sol\":12034:12042  adminFee */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":11930:12060  usdtToken.transfer(... */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_367:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_368:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_371\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_371:\n        /* \"contracts/roy.sol\":11910:12060  bool successAdmin = usdtToken.transfer(... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":12086:12098  successAdmin */\n      dup1\n        /* \"contracts/roy.sol\":12078:12128  require(successAdmin, \"Admin fee transfer failed\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_374\n      jump\t// in\n    tag_372:\n        /* \"contracts/roy.sol\":12160:12171  userAddress */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12152:12206  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      and\n      0x9cdcf2f7714cca3508c7f0110b04a90a80a3a8dd0e35de99689db74d28c5383e\n        /* \"contracts/roy.sol\":12173:12179  stakes */\n      dup10\n        /* \"contracts/roy.sol\":12180:12181  i */\n      dup9\n        /* \"contracts/roy.sol\":12173:12182  stakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_375\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_375:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":12173:12190  stakes[i].stakeId */\n      sload\n        /* \"contracts/roy.sol\":12152:12206  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      mload(0x40)\n      tag_280\n      swap3\n        /* \"contracts/roy.sol\":12192:12202  userAmount */\n      dup9\n      swap2\n        /* \"contracts/roy.sol\":12152:12206  Claimed(userAddress, stakes[i].stakeId, userAmount, 0) */\n      tag_378\n      jump\t// in\n        /* \"contracts/roy.sol\":10996:12275  if (stakes[i].positionId == _positionId && !stakes[i].claimed) {... */\n    tag_337:\n        /* \"contracts/roy.sol\":10977:10980  i++ */\n      dup1\n      tag_379\n      dup2\n      tag_190\n      jump\t// in\n    tag_379:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":10938:12285  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_329)\n        /* \"contracts/roy.sol\":6224:6344  function getContractBalance() external view returns (uint256) {... */\n    tag_91:\n        /* \"contracts/roy.sol\":6303:6312  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":6303:6337  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6277:6284  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":6303:6312  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":6303:6322  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":6303:6337  usdtToken.balanceOf(address(this)) */\n      tag_383\n      swap1\n        /* \"contracts/roy.sol\":6331:6335  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":6303:6337  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_383:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_384\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_384:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_386\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_386:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_387\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_387:\n        /* \"contracts/roy.sol\":6296:6337  return usdtToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":6224:6344  function getContractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/roy.sol\":12360:13734  function getStakeByPositionId(uint256 _positionId)... */\n    tag_95:\n        /* \"contracts/roy.sol\":12471:12483  address user */\n      0x00\n        /* \"contracts/roy.sol\":12730:12759  positionIdToUser[_positionId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":12730:12746  positionIdToUser */\n      0x05\n        /* \"contracts/roy.sol\":12730:12759  positionIdToUser[_positionId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":12471:12483  address user */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12730:12759  positionIdToUser[_positionId] */\n      and\n        /* \"contracts/roy.sol\":12777:12799  userAddr != address(0) */\n      dup1\n        /* \"contracts/roy.sol\":12769:12822  require(userAddr != address(0), \"Invalid positionId\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_391\n      jump\t// in\n    tag_389:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":12857:12872  users[userAddr] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":12833:12854  Stake[] memory stakes */\n      0x00\n        /* \"contracts/roy.sol\":12857:12872  users[userAddr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":12857:12862  users */\n      0x03\n        /* \"contracts/roy.sol\":12857:12872  users[userAddr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/roy.sol\":12857:12879  users[userAddr].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":12833:12879  Stake[] memory stakes = users[userAddr].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n      swap2\n      swap3\n        /* \"contracts/roy.sol\":12857:12879  users[userAddr].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":12833:12879  Stake[] memory stakes = users[userAddr].stakes */\n      swap1\n        /* \"contracts/roy.sol\":12833:12854  Stake[] memory stakes */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":12833:12879  Stake[] memory stakes = users[userAddr].stakes */\n      dup5\n      add\n    tag_392:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_393\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_392)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/roy.sol\":12894:12903  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":12889:13692  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_395:\n        /* \"contracts/roy.sol\":12913:12919  stakes */\n      dup2\n        /* \"contracts/roy.sol\":12913:12926  stakes.length */\n      mload\n        /* \"contracts/roy.sol\":12909:12910  i */\n      dup2\n        /* \"contracts/roy.sol\":12909:12926  i < stakes.length */\n      lt\n        /* \"contracts/roy.sol\":12889:13692  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_396\n      jumpi\n        /* \"contracts/roy.sol\":12975:12986  _positionId */\n      dup12\n        /* \"contracts/roy.sol\":12951:12957  stakes */\n      dup3\n        /* \"contracts/roy.sol\":12958:12959  i */\n      dup3\n        /* \"contracts/roy.sol\":12951:12960  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_398\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_398:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":12951:12971  stakes[i].positionId */\n      0x20\n      add\n      mload\n        /* \"contracts/roy.sol\":12951:12986  stakes[i].positionId == _positionId */\n      eq\n        /* \"contracts/roy.sol\":12947:13682  if (stakes[i].positionId == _positionId) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"contracts/roy.sol\":13006:13020  Stake memory s */\n      0x00\n        /* \"contracts/roy.sol\":13023:13029  stakes */\n      dup3\n        /* \"contracts/roy.sol\":13030:13031  i */\n      dup3\n        /* \"contracts/roy.sol\":13023:13032  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_400\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_400:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":13006:13032  Stake memory s = stakes[i] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13051:13066  uint256 apyRate */\n      0x00\n        /* \"contracts/roy.sol\":13069:13079  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":13069:13090  stakingAPY[s.numDays] */\n      0x00\n        /* \"contracts/roy.sol\":13080:13081  s */\n      dup4\n        /* \"contracts/roy.sol\":13080:13089  s.numDays */\n      0x80\n      add\n      mload\n        /* \"contracts/roy.sol\":13069:13090  stakingAPY[s.numDays] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":13051:13090  uint256 apyRate = stakingAPY[s.numDays] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13108:13119  uint256 end */\n      0x00\n        /* \"contracts/roy.sol\":13137:13138  s */\n      dup3\n        /* \"contracts/roy.sol\":13137:13146  s.numDays */\n      0x80\n      add\n      mload\n        /* \"contracts/roy.sol\":13149:13155  1 days */\n      0x015180\n        /* \"contracts/roy.sol\":13137:13155  s.numDays * 1 days */\n      tag_401\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_401:\n        /* \"contracts/roy.sol\":13122:13123  s */\n      dup4\n        /* \"contracts/roy.sol\":13122:13133  s.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":13122:13156  s.timestamp + (s.numDays * 1 days) */\n      tag_402\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_402:\n        /* \"contracts/roy.sol\":13108:13156  uint256 end = s.timestamp + (s.numDays * 1 days) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13174:13187  bool isActive */\n      0x00\n        /* \"contracts/roy.sol\":13191:13192  s */\n      dup4\n        /* \"contracts/roy.sol\":13191:13200  s.claimed */\n      0xa0\n      add\n      mload\n        /* \"contracts/roy.sol\":13190:13200  !s.claimed */\n      iszero\n        /* \"contracts/roy.sol\":13190:13225  !s.claimed && block.timestamp < end */\n      dup1\n      iszero\n      tag_403\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":13222:13225  end */\n      dup2\n        /* \"contracts/roy.sol\":13204:13219  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":13204:13225  block.timestamp < end */\n      lt\n        /* \"contracts/roy.sol\":13190:13225  !s.claimed && block.timestamp < end */\n    tag_403:\n        /* \"contracts/roy.sol\":13174:13225  bool isActive = !s.claimed && block.timestamp < end */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13324:13345  uint256 dailyInterest */\n      0x00\n        /* \"contracts/roy.sol\":13377:13380  365 */\n      0x016d\n        /* \"contracts/roy.sol\":13371:13374  100 */\n      0x64\n        /* \"contracts/roy.sol\":13360:13367  apyRate */\n      dup6\n        /* \"contracts/roy.sol\":13349:13350  s */\n      dup8\n        /* \"contracts/roy.sol\":13349:13357  s.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":13349:13367  s.amount * apyRate */\n      tag_404\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_404:\n        /* \"contracts/roy.sol\":13348:13374  (s.amount * apyRate) / 100 */\n      tag_405\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_405:\n        /* \"contracts/roy.sol\":13348:13380  (s.amount * apyRate) / 100 / 365 */\n      tag_406\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_406:\n        /* \"contracts/roy.sol\":13324:13380  uint256 dailyInterest = (s.amount * apyRate) / 100 / 365 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":13428:13436  userAddr */\n      dup8\n        /* \"contracts/roy.sol\":13458:13459  s */\n      dup6\n        /* \"contracts/roy.sol\":13458:13467  s.stakeId */\n      0x00\n      add\n      mload\n        /* \"contracts/roy.sol\":13489:13490  s */\n      dup7\n        /* \"contracts/roy.sol\":13489:13497  s.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":13519:13520  s */\n      dup8\n        /* \"contracts/roy.sol\":13519:13530  s.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":13552:13555  end */\n      dup7\n        /* \"contracts/roy.sol\":13577:13584  apyRate */\n      dup9\n        /* \"contracts/roy.sol\":13606:13619  dailyInterest */\n      dup7\n        /* \"contracts/roy.sol\":13641:13649  isActive */\n      dup9\n        /* \"contracts/roy.sol\":13399:13667  return (... */\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      swap16\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_388)\n        /* \"contracts/roy.sol\":12947:13682  if (stakes[i].positionId == _positionId) {... */\n    tag_399:\n        /* \"contracts/roy.sol\":12928:12931  i++ */\n      dup1\n      tag_407\n      dup2\n      tag_190\n      jump\t// in\n    tag_407:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":12889:13692  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_395)\n    tag_396:\n      pop\n        /* \"contracts/roy.sol\":13702:13727  revert(\"Stake not found\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_409\n      jump\t// in\n        /* \"contracts/roy.sol\":12360:13734  function getStakeByPositionId(uint256 _positionId)... */\n    tag_388:\n      swap2\n      swap4\n      swap6\n      swap8\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      jump\t// out\n        /* \"contracts/roy.sol\":2998:6215  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n    tag_100:\n        /* \"contracts/roy.sol\":2080:2090  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":2074:2079  users */\n      0x03\n        /* \"contracts/roy.sol\":2074:2091  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":2074:2102  users[msg.sender].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/roy.sol\":2066:2121  require(users[msg.sender].registered, \"Not registered\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_411:\n        /* \"contracts/roy.sol\":3093:3094  0 */\n      0x00\n        /* \"contracts/roy.sol\":3084:3090  amount */\n      dup2\n        /* \"contracts/roy.sol\":3084:3094  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":3076:3134  require(amount > 0, \"Stake amount must be greater than 0\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_416\n      jump\t// in\n    tag_414:\n        /* \"contracts/roy.sol\":3170:3171  0 */\n      0x00\n        /* \"contracts/roy.sol\":3148:3167  stakingAPY[numDays] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":3148:3158  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":3148:3167  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":3140:3200  require(stakingAPY[numDays] > 0, \"Invalid staking duration\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_419\n      jump\t// in\n    tag_417:\n        /* \"contracts/roy.sol\":3232:3242  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":3207:3223  address referrer */\n      0x00\n        /* \"contracts/roy.sol\":3226:3243  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":3226:3231  users */\n      0x03\n        /* \"contracts/roy.sol\":3226:3243  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":3226:3252  users[msg.sender].referrer */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":3263:3285  referrer != address(0) */\n      dup1\n      iszero\n        /* \"contracts/roy.sol\":3259:3390  if (referrer != address(0)) {... */\n      tag_421\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":3305:3320  users[referrer] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":3337:3338  0 */\n      0x00\n        /* \"contracts/roy.sol\":3305:3320  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":3305:3310  users */\n      0x03\n        /* \"contracts/roy.sol\":3305:3320  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":3305:3327  users[referrer].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":3305:3334  users[referrer].stakes.length */\n      sload\n        /* \"contracts/roy.sol\":3297:3383  require(users[referrer].stakes.length > 0, \"Referrer must stake before you can stake\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_423\n      jump\t// in\n    tag_421:\n        /* \"contracts/roy.sol\":3411:3420  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":3411:3468  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":3396:3408  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":3411:3420  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":3411:3433  usdtToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/roy.sol\":3411:3468  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      tag_424\n      swap1\n        /* \"contracts/roy.sol\":3434:3444  msg.sender */\n      caller\n      swap1\n        /* \"contracts/roy.sol\":3454:3458  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":3461:3467  amount */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":3411:3468  usdtToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      add\n      tag_425\n      jump\t// in\n    tag_424:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_426\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_426:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_428\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_428:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_429\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_429:\n        /* \"contracts/roy.sol\":3396:3468  bool success = usdtToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":3482:3489  success */\n      dup1\n        /* \"contracts/roy.sol\":3474:3514  require(success, \"USDT transfer failed\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_275\n      jump\t// in\n    tag_430:\n        /* \"contracts/roy.sol\":3521:3539  uint256 positionId */\n      0x00\n        /* \"contracts/roy.sol\":3544:3556  stakeCounter */\n      0x01\n      0x00\n        /* \"contracts/roy.sol\":3542:3556  ++stakeCounter */\n      dup2\n      sload\n      tag_432\n      swap1\n      tag_190\n      jump\t// in\n    tag_432:\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/roy.sol\":3521:3556  uint256 positionId = ++stakeCounter */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":3563:3568  users */\n      0x03\n        /* \"contracts/roy.sol\":3563:3580  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":3569:3579  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":3563:3580  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":3563:3587  users[msg.sender].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/roy.sol\":3631:3643  stakeCounter */\n      sload(0x01)\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":3669:3679  positionId */\n      dup4\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":3701:3707  amount */\n      dup7\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":3732:3747  block.timestamp */\n      timestamp\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":3770:3777  numDays */\n      dup8\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":3800:3805  false */\n      0x00\n        /* \"contracts/roy.sol\":3602:3816  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/roy.sol\":3563:3822  users[msg.sender].stakes.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":3860:3870  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":3829:3845  positionIdToUser */\n      0x05\n        /* \"contracts/roy.sol\":3829:3857  positionIdToUser[positionId] */\n      0x00\n        /* \"contracts/roy.sol\":3846:3856  positionId */\n      dup4\n        /* \"contracts/roy.sol\":3829:3857  positionIdToUser[positionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/roy.sol\":3829:3870  positionIdToUser[positionId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/roy.sol\":3877:3894  bool isFirstStake */\n      0x00\n        /* \"contracts/roy.sol\":3897:3902  users */\n      0x03\n        /* \"contracts/roy.sol\":3897:3914  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":3903:3913  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":3897:3914  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":3897:3921  users[msg.sender].stakes */\n      0x01\n      add\n        /* \"contracts/roy.sol\":3897:3928  users[msg.sender].stakes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/roy.sol\":3932:3933  1 */\n      0x01\n        /* \"contracts/roy.sol\":3897:3933  users[msg.sender].stakes.length == 1 */\n      eq\n        /* \"contracts/roy.sol\":3877:3933  bool isFirstStake = users[msg.sender].stakes.length == 1 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":3939:3953  address upline */\n      0x00\n        /* \"contracts/roy.sol\":3956:3961  users */\n      0x03\n        /* \"contracts/roy.sol\":3956:3973  users[msg.sender] */\n      0x00\n        /* \"contracts/roy.sol\":3962:3972  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":3956:3973  users[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/roy.sol\":3956:3982  users[msg.sender].referrer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":3939:3982  address upline = users[msg.sender].referrer */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":3994:4001  uint8 i */\n      0x00\n        /* \"contracts/roy.sol\":3989:6213  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n    tag_434:\n        /* \"contracts/roy.sol\":4011:4030  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":4007:4008  i */\n      dup2\n        /* \"contracts/roy.sol\":4007:4030  i < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":4007:4054  i < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_437\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4034:4054  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":4007:4054  i < levelRewards.length && upline != address(0) */\n    tag_437:\n        /* \"contracts/roy.sol\":3989:6213  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n      iszero\n      tag_435\n      jumpi\n        /* \"contracts/roy.sol\":4071:4085  uint256 reward */\n      0x00\n        /* \"contracts/roy.sol\":4104:4110  i == 0 */\n      0xff\n      dup3\n      and\n        /* \"contracts/roy.sol\":4100:6165  if (i == 0) {... */\n      tag_438\n      jumpi\n        /* \"contracts/roy.sol\":4130:4142  isFirstStake */\n      dup4\n        /* \"contracts/roy.sol\":4126:5728  if (isFirstStake) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"contracts/roy.sol\":4204:4224  uint256 directReward */\n      0x00\n        /* \"contracts/roy.sol\":4242:4245  100 */\n      0x64\n        /* \"contracts/roy.sol\":4228:4238  amount * 5 */\n      tag_440\n        /* \"contracts/roy.sol\":4228:4234  amount */\n      dup11\n        /* \"contracts/roy.sol\":4237:4238  5 */\n      0x05\n        /* \"contracts/roy.sol\":4228:4238  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_440:\n        /* \"contracts/roy.sol\":4227:4245  (amount * 5) / 100 */\n      tag_441\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_441:\n        /* \"contracts/roy.sol\":4204:4245  uint256 directReward = (amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":4263:4283  uint256 level1Reward */\n      0x00\n        /* \"contracts/roy.sol\":4301:4304  100 */\n      0x64\n        /* \"contracts/roy.sol\":4287:4297  amount * 5 */\n      tag_442\n        /* \"contracts/roy.sol\":4287:4293  amount */\n      dup12\n        /* \"contracts/roy.sol\":4296:4297  5 */\n      0x05\n        /* \"contracts/roy.sol\":4287:4297  amount * 5 */\n      tag_208\n      jump\t// in\n    tag_442:\n        /* \"contracts/roy.sol\":4286:4304  (amount * 5) / 100 */\n      tag_443\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_443:\n        /* \"contracts/roy.sol\":4263:4304  uint256 level1Reward = (amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":4369:4396  directReward + level1Reward */\n      tag_444\n        /* \"contracts/roy.sol\":4263:4304  uint256 level1Reward = (amount * 5) / 100 */\n      dup2\n        /* \"contracts/roy.sol\":4369:4381  directReward */\n      dup4\n        /* \"contracts/roy.sol\":4369:4396  directReward + level1Reward */\n      tag_212\n      jump\t// in\n    tag_444:\n        /* \"contracts/roy.sol\":4331:4340  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":4331:4365  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4331:4340  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":4331:4350  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":4331:4365  usdtToken.balanceOf(address(this)) */\n      tag_445\n      swap1\n        /* \"contracts/roy.sol\":4359:4363  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":4331:4365  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_445:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_446\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_446:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_448\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_448:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_449\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_449:\n        /* \"contracts/roy.sol\":4331:4396  usdtToken.balanceOf(address(this)) >= directReward + level1Reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":4323:4430  require(usdtToken.balanceOf(address(this)) >= directReward + level1Reward, \"Insufficient contract balance\") */\n      tag_450\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_450:\n        /* \"contracts/roy.sol\":4457:4466  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":4457:4497  usdtToken.transfer(upline, directReward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4457:4466  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":4457:4475  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":4457:4497  usdtToken.transfer(upline, directReward) */\n      tag_452\n      swap1\n        /* \"contracts/roy.sol\":4476:4482  upline */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":4484:4496  directReward */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":4457:4497  usdtToken.transfer(upline, directReward) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_452:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_453\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_453:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_455\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_455:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_456\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_456:\n        /* \"contracts/roy.sol\":4449:4533  require(usdtToken.transfer(upline, directReward), \"Direct referral transfer failed\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_459\n      jump\t// in\n    tag_457:\n        /* \"contracts/roy.sol\":4559:4568  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":4559:4599  usdtToken.transfer(upline, level1Reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4559:4568  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":4559:4577  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":4559:4599  usdtToken.transfer(upline, level1Reward) */\n      tag_460\n      swap1\n        /* \"contracts/roy.sol\":4578:4584  upline */\n      dup9\n      swap1\n        /* \"contracts/roy.sol\":4586:4598  level1Reward */\n      dup6\n      swap1\n        /* \"contracts/roy.sol\":4559:4599  usdtToken.transfer(upline, level1Reward) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_460:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_461\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_461:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_463\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_463:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_464\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_464:\n        /* \"contracts/roy.sol\":4551:4634  require(usdtToken.transfer(upline, level1Reward), \"Level 1 reward transfer failed\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_467\n      jump\t// in\n    tag_465:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4653:4681  directReferralIncome[upline] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":4653:4673  directReferralIncome */\n      0x07\n        /* \"contracts/roy.sol\":4653:4681  directReferralIncome[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":4653:4697  directReferralIncome[upline] += directReward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":4685:4697  directReward */\n      dup5\n      swap3\n        /* \"contracts/roy.sol\":4653:4681  directReferralIncome[upline] */\n      swap1\n        /* \"contracts/roy.sol\":4653:4697  directReferralIncome[upline] += directReward */\n      tag_468\n      swap1\n        /* \"contracts/roy.sol\":4685:4697  directReward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":4653:4697  directReferralIncome[upline] += directReward */\n      tag_212\n      jump\t// in\n    tag_468:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/roy.sol\":4744:4771  directReward + level1Reward */\n      tag_469\n      swap1\n      pop\n        /* \"contracts/roy.sol\":4759:4771  level1Reward */\n      dup2\n        /* \"contracts/roy.sol\":4744:4756  directReward */\n      dup4\n        /* \"contracts/roy.sol\":4744:4771  directReward + level1Reward */\n      tag_212\n      jump\t// in\n    tag_469:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4715:4728  users[upline] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":4715:4720  users */\n      0x03\n        /* \"contracts/roy.sol\":4715:4728  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":4715:4740  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":4715:4771  users[upline].totalIncome += directReward + level1Reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":4715:4740  users[upline].totalIncome */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":4715:4728  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":4715:4771  users[upline].totalIncome += directReward + level1Reward */\n      tag_470\n      swap1\n      dup5\n      swap1\n      tag_212\n      jump\t// in\n    tag_470:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4789:4802  users[upline] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":4789:4794  users */\n      0x03\n        /* \"contracts/roy.sol\":4789:4802  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":4789:4814  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":4789:4830  users[upline].levelIncome += level1Reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":4818:4830  level1Reward */\n      dup4\n      swap3\n        /* \"contracts/roy.sol\":4789:4802  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":4789:4830  users[upline].levelIncome += level1Reward */\n      tag_471\n      swap1\n        /* \"contracts/roy.sol\":4818:4830  level1Reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":4789:4830  users[upline].levelIncome += level1Reward */\n      tag_212\n      jump\t// in\n    tag_471:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":4932:4955  directReferrals[upline] */\n      dup6\n      and\n        /* \"contracts/roy.sol\":4902:4929  ReferralInfo[] storage refs */\n      0x00\n        /* \"contracts/roy.sol\":4932:4955  directReferrals[upline] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":4932:4947  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":4932:4955  directReferrals[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/roy.sol\":4973:5251  for (uint256 j = 0; j < refs.length; j++) {... */\n    tag_472:\n        /* \"contracts/roy.sol\":4997:5008  refs.length */\n      dup2\n      sload\n        /* \"contracts/roy.sol\":4993:5008  j < refs.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":4973:5251  for (uint256 j = 0; j < refs.length; j++) {... */\n      iszero\n      tag_473\n      jumpi\n        /* \"contracts/roy.sol\":5068:5078  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5041:5078  refs[j].referralAddress == msg.sender */\n      and\n        /* \"contracts/roy.sol\":5041:5045  refs */\n      dup3\n        /* \"contracts/roy.sol\":5046:5047  j */\n      dup3\n        /* \"contracts/roy.sol\":5041:5048  refs[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_475\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_475:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":5041:5064  refs[j].referralAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":5041:5078  refs[j].referralAddress == msg.sender */\n      eq\n        /* \"contracts/roy.sol\":5037:5233  if (refs[j].referralAddress == msg.sender) {... */\n      iszero\n      tag_477\n      jumpi\n        /* \"contracts/roy.sol\":5130:5142  directReward */\n      dup4\n        /* \"contracts/roy.sol\":5106:5110  refs */\n      dup3\n        /* \"contracts/roy.sol\":5111:5112  j */\n      dup3\n        /* \"contracts/roy.sol\":5106:5113  refs[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_478\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_478:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":5106:5126  refs[j].incomeEarned */\n      0x01\n      add\n      0x00\n        /* \"contracts/roy.sol\":5106:5142  refs[j].incomeEarned += directReward */\n      dup3\n      dup3\n      sload\n      tag_480\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_480:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/roy.sol\":5205:5210  break */\n      tag_473\n      swap1\n      pop\n      jump\n        /* \"contracts/roy.sol\":5037:5233  if (refs[j].referralAddress == msg.sender) {... */\n    tag_477:\n        /* \"contracts/roy.sol\":5010:5013  j++ */\n      dup1\n      tag_481\n      dup2\n      tag_190\n      jump\t// in\n    tag_481:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":4973:5251  for (uint256 j = 0; j < refs.length; j++) {... */\n      jump(tag_472)\n    tag_473:\n      pop\n        /* \"contracts/roy.sol\":4126:5728  if (isFirstStake) {... */\n      pop\n      pop\n      pop\n      jump(tag_482)\n    tag_439:\n        /* \"contracts/roy.sol\":5327:5330  100 */\n      0x64\n        /* \"contracts/roy.sol\":5308:5320  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":5321:5322  i */\n      dup4\n        /* \"contracts/roy.sol\":5308:5323  levelRewards[i] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_483\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_483:\n      0x20\n      dup2\n      div\n      swap2\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/roy.sol\":5299:5323  amount * levelRewards[i] */\n      tag_485\n      swap2\n        /* \"contracts/roy.sol\":5308:5323  levelRewards[i] */\n      0x1f\n      and\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":5299:5305  amount */\n      dup11\n        /* \"contracts/roy.sol\":5299:5323  amount * levelRewards[i] */\n      tag_208\n      jump\t// in\n    tag_485:\n        /* \"contracts/roy.sol\":5298:5330  (amount * levelRewards[i]) / 100 */\n      tag_486\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_486:\n        /* \"contracts/roy.sol\":5356:5365  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":5356:5390  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":5289:5330  reward = (amount * levelRewards[i]) / 100 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5356:5365  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":5356:5375  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":5356:5390  usdtToken.balanceOf(address(this)) */\n      tag_487\n      swap1\n        /* \"contracts/roy.sol\":5384:5388  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":5356:5390  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_487:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_488\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_488:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_490\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_490:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_491\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_491:\n        /* \"contracts/roy.sol\":5356:5400  usdtToken.balanceOf(address(this)) >= reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":5348:5434  require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\") */\n      tag_492\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_492:\n        /* \"contracts/roy.sol\":5460:5469  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":5460:5494  usdtToken.transfer(upline, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5460:5469  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":5460:5478  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":5460:5494  usdtToken.transfer(upline, reward) */\n      tag_494\n      swap1\n        /* \"contracts/roy.sol\":5479:5485  upline */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":5487:5493  reward */\n      dup6\n      swap1\n        /* \"contracts/roy.sol\":5460:5494  usdtToken.transfer(upline, reward) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_494:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_495\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_495:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_497\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_497:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_498\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_498:\n        /* \"contracts/roy.sol\":5452:5529  require(usdtToken.transfer(upline, reward), \"Level 1 reward transfer failed\") */\n      tag_499\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_467\n      jump\t// in\n    tag_499:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5548:5561  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":5548:5553  users */\n      0x03\n        /* \"contracts/roy.sol\":5548:5561  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":5548:5573  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":5548:5583  users[upline].totalIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":5577:5583  reward */\n      dup4\n      swap3\n        /* \"contracts/roy.sol\":5548:5561  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":5548:5583  users[upline].totalIncome += reward */\n      tag_501\n      swap1\n        /* \"contracts/roy.sol\":5577:5583  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":5548:5583  users[upline].totalIncome += reward */\n      tag_212\n      jump\t// in\n    tag_501:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5601:5614  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":5601:5606  users */\n      0x03\n        /* \"contracts/roy.sol\":5601:5614  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":5601:5626  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":5601:5636  users[upline].levelIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":5630:5636  reward */\n      dup4\n      swap3\n        /* \"contracts/roy.sol\":5601:5614  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":5601:5636  users[upline].levelIncome += reward */\n      tag_502\n      swap1\n        /* \"contracts/roy.sol\":5630:5636  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":5601:5636  users[upline].levelIncome += reward */\n      tag_212\n      jump\t// in\n    tag_502:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":4126:5728  if (isFirstStake) {... */\n    tag_482:\n        /* \"contracts/roy.sol\":4100:6165  if (i == 0) {... */\n      jump(tag_503)\n    tag_438:\n        /* \"contracts/roy.sol\":5796:5799  100 */\n      0x64\n        /* \"contracts/roy.sol\":5777:5789  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":5790:5791  i */\n      dup4\n        /* \"contracts/roy.sol\":5777:5792  levelRewards[i] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_504\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_504:\n      0x20\n      dup2\n      div\n      swap2\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/roy.sol\":5768:5792  amount * levelRewards[i] */\n      tag_506\n      swap2\n        /* \"contracts/roy.sol\":5777:5792  levelRewards[i] */\n      0x1f\n      and\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":5768:5774  amount */\n      dup11\n        /* \"contracts/roy.sol\":5768:5792  amount * levelRewards[i] */\n      tag_208\n      jump\t// in\n    tag_506:\n        /* \"contracts/roy.sol\":5767:5799  (amount * levelRewards[i]) / 100 */\n      tag_507\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_507:\n        /* \"contracts/roy.sol\":5821:5830  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":5821:5855  usdtToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":5758:5799  reward = (amount * levelRewards[i]) / 100 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5821:5830  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":5821:5840  usdtToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/roy.sol\":5821:5855  usdtToken.balanceOf(address(this)) */\n      tag_508\n      swap1\n        /* \"contracts/roy.sol\":5849:5853  this */\n      address\n      swap1\n        /* \"contracts/roy.sol\":5821:5855  usdtToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_508:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_509\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_509:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_511\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_511:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_512\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_512:\n        /* \"contracts/roy.sol\":5821:5865  usdtToken.balanceOf(address(this)) >= reward */\n      lt\n      iszero\n        /* \"contracts/roy.sol\":5813:5899  require(usdtToken.balanceOf(address(this)) >= reward, \"Insufficient contract balance\") */\n      tag_513\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_263\n      jump\t// in\n    tag_513:\n        /* \"contracts/roy.sol\":5921:5930  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":5921:5955  usdtToken.transfer(upline, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":5921:5930  usdtToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":5921:5939  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":5921:5955  usdtToken.transfer(upline, reward) */\n      tag_515\n      swap1\n        /* \"contracts/roy.sol\":5940:5946  upline */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":5948:5954  reward */\n      dup6\n      swap1\n        /* \"contracts/roy.sol\":5921:5955  usdtToken.transfer(upline, reward) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_515:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_516\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_516:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_518\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_518:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_519\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_519:\n        /* \"contracts/roy.sol\":5913:5988  require(usdtToken.transfer(upline, reward), \"Level reward transfer failed\") */\n      tag_520\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_522\n      jump\t// in\n    tag_520:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":6003:6016  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6003:6008  users */\n      0x03\n        /* \"contracts/roy.sol\":6003:6016  users[upline] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":6003:6028  users[upline].totalIncome */\n      0x02\n      add\n        /* \"contracts/roy.sol\":6003:6038  users[upline].totalIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":6032:6038  reward */\n      dup4\n      swap3\n        /* \"contracts/roy.sol\":6003:6016  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":6003:6038  users[upline].totalIncome += reward */\n      tag_523\n      swap1\n        /* \"contracts/roy.sol\":6032:6038  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":6003:6038  users[upline].totalIncome += reward */\n      tag_212\n      jump\t// in\n    tag_523:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":6052:6065  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6052:6057  users */\n      0x03\n        /* \"contracts/roy.sol\":6052:6065  users[upline] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/roy.sol\":6052:6077  users[upline].levelIncome */\n      add\n        /* \"contracts/roy.sol\":6052:6087  users[upline].levelIncome += reward */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":6081:6087  reward */\n      dup4\n      swap3\n        /* \"contracts/roy.sol\":6052:6065  users[upline] */\n      swap1\n        /* \"contracts/roy.sol\":6052:6087  users[upline].levelIncome += reward */\n      tag_524\n      swap1\n        /* \"contracts/roy.sol\":6081:6087  reward */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":6052:6087  users[upline].levelIncome += reward */\n      tag_212\n      jump\t// in\n    tag_524:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":4100:6165  if (i == 0) {... */\n    tag_503:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":6184:6197  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6184:6189  users */\n      0x03\n        /* \"contracts/roy.sol\":6184:6197  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":6184:6206  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":4056:4059  i++ */\n      dup1\n      tag_525\n      dup2\n      tag_526\n      jump\t// in\n    tag_525:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":3989:6213  for (uint8 i = 0; i < levelRewards.length && upline != address(0); i++) {... */\n      jump(tag_434)\n    tag_435:\n      pop\n        /* \"contracts/roy.sol\":2131:2132  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":2998:6215  function stake(uint256 numDays, uint256 amount) external onlyRegistered {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1704:1749  mapping(uint256 => uint256) public stakingAPY */\n    tag_103:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":428:448  address public owner */\n    tag_106:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":14100:14258  function getDirectReferralCount(address user)... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14223:14244  directReferrals[user] */\n      and\n        /* \"contracts/roy.sol\":14193:14200  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":14223:14244  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":14223:14238  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":14223:14244  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":14223:14251  directReferrals[user].length */\n      sload\n      swap1\n        /* \"contracts/roy.sol\":14100:14258  function getDirectReferralCount(address user)... */\n      jump\t// out\n        /* \"contracts/roy.sol\":19042:19138  function getTotalUsers() external view returns (uint256) {... */\n    tag_113:\n        /* \"contracts/roy.sol\":19116:19124  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":19116:19131  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":19042:19138  function getTotalUsers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/roy.sol\":7340:8084  function getReferralIncomeDetails(address user)... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7616:7637  directReferrals[user] */\n      dup2\n      and\n        /* \"contracts/roy.sol\":7586:7613  ReferralInfo[] storage refs */\n      0x00\n        /* \"contracts/roy.sol\":7616:7637  directReferrals[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":7616:7631  directReferrals */\n      0x04\n        /* \"contracts/roy.sol\":7616:7637  directReferrals[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":7663:7674  refs.length */\n      dup1\n      sload\n        /* \"contracts/roy.sol\":7448:7482  address[] memory referralAddresses */\n      0x60\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"contracts/roy.sol\":7616:7637  directReferrals[user] */\n      swap1\n        /* \"contracts/roy.sol\":7663:7674  refs.length */\n      dup1\n        /* \"contracts/roy.sol\":7705:7725  new address[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_530\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_530:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_531\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_531:\n      pop\n        /* \"contracts/roy.sol\":7685:7725  referralAddresses = new address[](count) */\n      swap5\n      pop\n        /* \"contracts/roy.sol\":7759:7764  count */\n      dup1\n        /* \"contracts/roy.sol\":7745:7765  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_532\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_532:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_533\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_533:\n      pop\n        /* \"contracts/roy.sol\":7735:7765  incomes = new uint256[](count) */\n      swap4\n      pop\n        /* \"contracts/roy.sol\":7802:7807  count */\n      dup1\n        /* \"contracts/roy.sol\":7788:7808  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_534\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_534:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_535\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_535:\n      pop\n        /* \"contracts/roy.sol\":7775:7808  timestamps = new uint256[](count) */\n      swap3\n      pop\n        /* \"contracts/roy.sol\":7824:7833  uint256 i */\n      0x00\n        /* \"contracts/roy.sol\":7819:8020  for (uint256 i = 0; i < count; i++) {... */\n    tag_536:\n        /* \"contracts/roy.sol\":7843:7848  count */\n      dup2\n        /* \"contracts/roy.sol\":7839:7840  i */\n      dup2\n        /* \"contracts/roy.sol\":7839:7848  i < count */\n      lt\n        /* \"contracts/roy.sol\":7819:8020  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_537\n      jumpi\n        /* \"contracts/roy.sol\":7892:7896  refs */\n      dup3\n        /* \"contracts/roy.sol\":7897:7898  i */\n      dup2\n        /* \"contracts/roy.sol\":7892:7899  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_539\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_539:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/roy.sol\":7892:7915  refs[i].referralAddress */\n      sload\n        /* \"contracts/roy.sol\":7869:7889  referralAddresses[i] */\n      dup7\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":7892:7915  refs[i].referralAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":7869:7886  referralAddresses */\n      dup8\n      swap1\n        /* \"contracts/roy.sol\":7887:7888  i */\n      dup4\n      swap1\n        /* \"contracts/roy.sol\":7869:7889  referralAddresses[i] */\n      dup2\n      lt\n      tag_541\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_541:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":7869:7915  referralAddresses[i] = refs[i].referralAddress */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":7942:7946  refs */\n      dup3\n        /* \"contracts/roy.sol\":7947:7948  i */\n      dup2\n        /* \"contracts/roy.sol\":7942:7949  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_542\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_542:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":7942:7962  refs[i].incomeEarned */\n      0x01\n      add\n      sload\n        /* \"contracts/roy.sol\":7929:7936  incomes */\n      dup6\n        /* \"contracts/roy.sol\":7937:7938  i */\n      dup3\n        /* \"contracts/roy.sol\":7929:7939  incomes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_544\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_544:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":7929:7962  incomes[i] = refs[i].incomeEarned */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/roy.sol\":7992:7996  refs */\n      dup3\n        /* \"contracts/roy.sol\":7997:7998  i */\n      dup2\n        /* \"contracts/roy.sol\":7992:7999  refs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_545\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_545:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/roy.sol\":7992:8009  refs[i].timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/roy.sol\":7976:7986  timestamps */\n      dup5\n        /* \"contracts/roy.sol\":7987:7988  i */\n      dup3\n        /* \"contracts/roy.sol\":7976:7989  timestamps[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_547\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_547:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/roy.sol\":7976:8009  timestamps[i] = refs[i].timestamp */\n      mstore\n        /* \"contracts/roy.sol\":7850:7853  i++ */\n      dup1\n      tag_548\n      dup2\n      tag_190\n      jump\t// in\n    tag_548:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":7819:8020  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_536)\n    tag_537:\n      pop\n        /* \"contracts/roy.sol\":8030:8077  return (referralAddresses, incomes, timestamps) */\n      pop\n      pop\n        /* \"contracts/roy.sol\":7340:8084  function getReferralIncomeDetails(address user)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1817:1842  address[] public allUsers */\n    tag_122:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_549\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_549:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":1541:1578  mapping(address => User) public users */\n    tag_126:\n      0x03\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x04\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup5\n      jump\t// out\n        /* \"contracts/roy.sol\":487:510  IERC20 public usdtToken */\n    tag_130:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":14264:14421  function getDirectReferralIncome(address user)... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":14388:14414  directReferralIncome[user] */\n      and\n        /* \"contracts/roy.sol\":14358:14365  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":14388:14414  directReferralIncome[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":14388:14408  directReferralIncome */\n      0x07\n        /* \"contracts/roy.sol\":14388:14414  directReferralIncome[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/roy.sol\":14264:14421  function getDirectReferralIncome(address user)... */\n      jump\t// out\n        /* \"contracts/roy.sol\":6355:7330  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n    tag_139:\n        /* \"contracts/roy.sol\":6463:6479  uint256 interest */\n      0x00\n        /* \"contracts/roy.sol\":6481:6500  uint256 totalReturn */\n      dup1\n        /* \"contracts/roy.sol\":6533:6534  0 */\n      0x00\n        /* \"contracts/roy.sol\":6524:6530  amount */\n      dup5\n        /* \"contracts/roy.sol\":6524:6534  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":6516:6568  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_553\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_555\n      jump\t// in\n    tag_553:\n        /* \"contracts/roy.sol\":6608:6609  0 */\n      0x00\n        /* \"contracts/roy.sol\":6586:6605  stakingAPY[numDays] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6586:6596  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":6586:6605  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/roy.sol\":6578:6638  require(stakingAPY[numDays] > 0, \"Invalid staking duration\") */\n      tag_556\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_419\n      jump\t// in\n    tag_556:\n        /* \"contracts/roy.sol\":6649:6660  uint256 apy */\n      0x00\n        /* \"contracts/roy.sol\":6663:6682  stakingAPY[numDays] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":6663:6673  stakingAPY */\n      0x06\n        /* \"contracts/roy.sol\":6663:6682  stakingAPY[numDays] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"contracts/roy.sol\":6737:6739  30 */\n      0x1e\n        /* \"contracts/roy.sol\":6726:6739  numDays == 30 */\n      dup6\n      eq\n        /* \"contracts/roy.sol\":6722:7223  if (numDays == 30) {... */\n      iszero\n      tag_558\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":6769:6777  100 * 30 */\n      0x0bb8\n        /* \"contracts/roy.sol\":6722:7223  if (numDays == 30) {... */\n      jump(tag_569)\n    tag_558:\n        /* \"contracts/roy.sol\":6798:6805  numDays */\n      dup5\n        /* \"contracts/roy.sol\":6809:6811  60 */\n      0x3c\n        /* \"contracts/roy.sol\":6798:6811  numDays == 60 */\n      eq\n        /* \"contracts/roy.sol\":6794:7223  if (numDays == 60) {... */\n      iszero\n      tag_560\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":6841:6849  100 * 60 */\n      0x1770\n        /* \"contracts/roy.sol\":6794:7223  if (numDays == 60) {... */\n      jump(tag_569)\n    tag_560:\n        /* \"contracts/roy.sol\":6870:6877  numDays */\n      dup5\n        /* \"contracts/roy.sol\":6881:6883  90 */\n      0x5a\n        /* \"contracts/roy.sol\":6870:6883  numDays == 90 */\n      eq\n        /* \"contracts/roy.sol\":6866:7223  if (numDays == 90) {... */\n      iszero\n      tag_562\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":6913:6921  100 * 90 */\n      0x2328\n        /* \"contracts/roy.sol\":6866:7223  if (numDays == 90) {... */\n      jump(tag_569)\n    tag_562:\n        /* \"contracts/roy.sol\":6942:6949  numDays */\n      dup5\n        /* \"contracts/roy.sol\":6953:6956  120 */\n      0x78\n        /* \"contracts/roy.sol\":6942:6956  numDays == 120 */\n      eq\n        /* \"contracts/roy.sol\":6938:7223  if (numDays == 120) {... */\n      iszero\n      tag_564\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":6986:6995  100 * 120 */\n      0x2ee0\n        /* \"contracts/roy.sol\":6938:7223  if (numDays == 120) {... */\n      jump(tag_569)\n    tag_564:\n        /* \"contracts/roy.sol\":7016:7023  numDays */\n      dup5\n        /* \"contracts/roy.sol\":7027:7030  180 */\n      0xb4\n        /* \"contracts/roy.sol\":7016:7030  numDays == 180 */\n      eq\n        /* \"contracts/roy.sol\":7012:7223  if (numDays == 180) {... */\n      iszero\n      tag_566\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":7060:7069  100 * 180 */\n      0x4650\n        /* \"contracts/roy.sol\":7012:7223  if (numDays == 180) {... */\n      jump(tag_569)\n    tag_566:\n        /* \"contracts/roy.sol\":7090:7097  numDays */\n      dup5\n        /* \"contracts/roy.sol\":7101:7104  365 */\n      0x016d\n        /* \"contracts/roy.sol\":7090:7104  numDays == 365 */\n      eq\n        /* \"contracts/roy.sol\":7086:7223  if (numDays == 365) {... */\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"contracts/roy.sol\":7134:7143  100 * 365 */\n      0x8e94\n        /* \"contracts/roy.sol\":7086:7223  if (numDays == 365) {... */\n    tag_569:\n        /* \"contracts/roy.sol\":7271:7282  denominator */\n      dup1\n        /* \"contracts/roy.sol\":7260:7267  numDays */\n      dup6\n        /* \"contracts/roy.sol\":7245:7257  amount * apy */\n      tag_571\n        /* \"contracts/roy.sol\":7254:7257  apy */\n      dup5\n        /* \"contracts/roy.sol\":7245:7251  amount */\n      dup10\n        /* \"contracts/roy.sol\":7245:7257  amount * apy */\n      tag_208\n      jump\t// in\n    tag_571:\n        /* \"contracts/roy.sol\":7245:7267  amount * apy * numDays */\n      tag_572\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_572:\n        /* \"contracts/roy.sol\":7244:7282  (amount * apy * numDays) / denominator */\n      tag_573\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_573:\n        /* \"contracts/roy.sol\":7233:7282  interest = (amount * apy * numDays) / denominator */\n      swap4\n      pop\n        /* \"contracts/roy.sol\":7306:7323  amount + interest */\n      tag_574\n        /* \"contracts/roy.sol\":7233:7282  interest = (amount * apy * numDays) / denominator */\n      dup5\n        /* \"contracts/roy.sol\":7306:7312  amount */\n      dup8\n        /* \"contracts/roy.sol\":7306:7323  amount + interest */\n      tag_212\n      jump\t// in\n    tag_574:\n        /* \"contracts/roy.sol\":7292:7323  totalReturn = amount + interest */\n      swap3\n      pop\n        /* \"contracts/roy.sol\":6355:7330  function getEstimatedReturn(uint256 amount, uint256 numDays)... */\n      pop\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":16178:16295  function getTotalIncome(address user) external view returns (uint256) {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":16265:16276  users[user] */\n      and\n        /* \"contracts/roy.sol\":16239:16246  uint256 */\n      0x00\n        /* \"contracts/roy.sol\":16265:16276  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":16265:16270  users */\n      0x03\n        /* \"contracts/roy.sol\":16265:16276  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":16265:16288  users[user].totalIncome */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/roy.sol\":16178:16295  function getTotalIncome(address user) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":18925:19036  function isRegistered(address user) external view returns (bool) {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19007:19018  users[user] */\n      and\n        /* \"contracts/roy.sol\":18984:18988  bool */\n      0x00\n        /* \"contracts/roy.sol\":19007:19018  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":19007:19012  users */\n      0x03\n        /* \"contracts/roy.sol\":19007:19018  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":19007:19029  users[user].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/roy.sol\":18925:19036  function isRegistered(address user) external view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/roy.sol\":19144:19457  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_157:\n        /* \"contracts/roy.sol\":2198:2203  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/roy.sol\":2184:2194  msg.sender */\n      caller\n        /* \"contracts/roy.sol\":2184:2203  msg.sender == owner */\n      eq\n        /* \"contracts/roy.sol\":2176:2232  require(msg.sender == owner, \"Only owner can call this\") */\n      tag_579\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_313\n      jump\t// in\n    tag_579:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19232:19248  to != address(0) */\n      dup3\n      and\n        /* \"contracts/roy.sol\":19224:19278  require(to != address(0), \"Invalid recipient address\") */\n      tag_582\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_584\n      jump\t// in\n    tag_582:\n        /* \"contracts/roy.sol\":19305:19306  0 */\n      0x00\n        /* \"contracts/roy.sol\":19296:19302  amount */\n      dup2\n        /* \"contracts/roy.sol\":19296:19306  amount > 0 */\n      gt\n        /* \"contracts/roy.sol\":19288:19343  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_585\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_587\n      jump\t// in\n    tag_585:\n        /* \"contracts/roy.sol\":19369:19378  usdtToken */\n      sload(0x02)\n        /* \"contracts/roy.sol\":19369:19399  usdtToken.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":19354:19366  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":19369:19378  usdtToken */\n      and\n      swap1\n        /* \"contracts/roy.sol\":19369:19387  usdtToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/roy.sol\":19369:19399  usdtToken.transfer(to, amount) */\n      tag_588\n      swap1\n        /* \"contracts/roy.sol\":19388:19390  to */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":19392:19398  amount */\n      dup7\n      swap1\n        /* \"contracts/roy.sol\":19369:19399  usdtToken.transfer(to, amount) */\n      0x04\n      add\n      tag_267\n      jump\t// in\n    tag_588:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_589\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_589:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_591\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_591:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_592\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_592:\n        /* \"contracts/roy.sol\":19354:19399  bool success = usdtToken.transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":19417:19424  success */\n      dup1\n        /* \"contracts/roy.sol\":19409:19450  require(success, \"Token transfer failed\") */\n      tag_593\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_595\n      jump\t// in\n    tag_593:\n        /* \"contracts/roy.sol\":2242:2243  _ */\n      pop\n        /* \"contracts/roy.sol\":19144:19457  function ownerTransfer(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1848:1894  uint8[5] public levelRewards = [5, 3, 2, 1, 1] */\n    tag_160:\n      0x09\n      dup2\n      0x05\n      dup2\n      lt\n      tag_596\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_596:\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":16683:18751  function getLevelIncomeDistribution(address _user)... */\n    tag_164:\n        /* \"contracts/roy.sol\":16781:16805  LevelIncomeData[] memory */\n      0x60\n        /* \"contracts/roy.sol\":16821:16839  uint256 totalCount */\n      0x00\n        /* \"contracts/roy.sol\":16859:16868  uint256 i */\n      dup1\n        /* \"contracts/roy.sol\":16854:17394  for (uint256 i = 0; i < allUsers.length; i++) {... */\n    tag_599:\n        /* \"contracts/roy.sol\":16878:16886  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":16878:16893  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":16874:16893  i < allUsers.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":16854:17394  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      iszero\n      tag_600\n      jumpi\n        /* \"contracts/roy.sol\":16914:16928  address staker */\n      0x00\n        /* \"contracts/roy.sol\":16931:16939  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":16940:16941  i */\n      dup3\n        /* \"contracts/roy.sol\":16931:16942  allUsers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_602\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_602:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":16980:16993  users[staker] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":16980:16985  users */\n      0x03\n        /* \"contracts/roy.sol\":16980:16993  users[staker] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":16931:16942  allUsers[i] */\n      0x01\n        /* \"contracts/roy.sol\":16980:17000  users[staker].stakes */\n      add\n        /* \"contracts/roy.sol\":16956:17000  Stake[] memory stakes = users[staker].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup7\n      mul\n      dup2\n      add\n      dup7\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":16931:16942  allUsers[i] */\n      swap3\n      swap6\n      pop\n        /* \"contracts/roy.sol\":16956:17000  Stake[] memory stakes = users[staker].stakes */\n      swap1\n      swap3\n        /* \"contracts/roy.sol\":16980:17000  users[staker].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":16956:17000  Stake[] memory stakes = users[staker].stakes */\n      swap1\n        /* \"contracts/roy.sol\":16931:16942  allUsers[i] */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":16956:17000  Stake[] memory stakes = users[staker].stakes */\n      dup5\n      add\n    tag_604:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_605\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_604)\n    tag_605:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17031:17044  users[staker] */\n      dup4\n      dup2\n      and\n        /* \"contracts/roy.sol\":17014:17028  address upline */\n      0x00\n        /* \"contracts/roy.sol\":17031:17044  users[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":17031:17036  users */\n      0x03\n        /* \"contracts/roy.sol\":17031:17044  users[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":17031:17053  users[staker].referrer */\n      sload\n        /* \"contracts/roy.sol\":16956:17000  Stake[] memory stakes = users[staker].stakes */\n      swap3\n      swap4\n      pop\n        /* \"contracts/roy.sol\":17031:17053  users[staker].referrer */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":17068:17384  for (... */\n    tag_607:\n        /* \"contracts/roy.sol\":17131:17150  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":17123:17128  level */\n      dup2\n        /* \"contracts/roy.sol\":17123:17150  level < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":17123:17174  level < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_610\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17154:17174  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":17123:17174  level < levelRewards.length && upline != address(0) */\n    tag_610:\n        /* \"contracts/roy.sol\":17068:17384  for (... */\n      iszero\n      tag_608\n      jumpi\n        /* \"contracts/roy.sol\":17246:17251  _user */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17236:17251  upline == _user */\n      and\n        /* \"contracts/roy.sol\":17236:17242  upline */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17236:17251  upline == _user */\n      and\n      eq\n        /* \"contracts/roy.sol\":17232:17321  if (upline == _user) {... */\n      iszero\n      tag_611\n      jumpi\n        /* \"contracts/roy.sol\":17289:17302  stakes.length */\n      dup3\n      mload\n        /* \"contracts/roy.sol\":17275:17302  totalCount += stakes.length */\n      tag_612\n      swap1\n      dup8\n      tag_212\n      jump\t// in\n    tag_612:\n      swap6\n      pop\n        /* \"contracts/roy.sol\":17232:17321  if (upline == _user) {... */\n    tag_611:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17347:17360  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":17347:17352  users */\n      0x03\n        /* \"contracts/roy.sol\":17347:17360  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":17347:17369  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":17192:17199  level++ */\n      dup1\n      tag_613\n      dup2\n      tag_526\n      jump\t// in\n    tag_613:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17068:17384  for (... */\n      jump(tag_607)\n    tag_608:\n      pop\n        /* \"contracts/roy.sol\":16854:17394  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":16895:16898  i++ */\n      dup1\n      dup1\n      tag_614\n      swap1\n      tag_190\n      jump\t// in\n    tag_614:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":16854:17394  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      jump(tag_599)\n    tag_600:\n      pop\n        /* \"contracts/roy.sol\":17404:17439  LevelIncomeData[] memory incomeData */\n      0x00\n        /* \"contracts/roy.sol\":17464:17474  totalCount */\n      dup2\n        /* \"contracts/roy.sol\":17442:17475  new LevelIncomeData[](totalCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_615\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_615:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_616\n      jumpi\n      dup2\n      0x20\n      add\n    tag_617:\n      tag_618\n      tag_619\n      jump\t// in\n    tag_618:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_617\n      jumpi\n      swap1\n      pop\n    tag_616:\n      pop\n        /* \"contracts/roy.sol\":17404:17475  LevelIncomeData[] memory incomeData = new LevelIncomeData[](totalCount) */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":17485:17498  uint256 index */\n      0x00\n        /* \"contracts/roy.sol\":17518:17527  uint256 i */\n      dup1\n        /* \"contracts/roy.sol\":17513:18717  for (uint256 i = 0; i < allUsers.length; i++) {... */\n    tag_620:\n        /* \"contracts/roy.sol\":17537:17545  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":17537:17552  allUsers.length */\n      sload\n        /* \"contracts/roy.sol\":17533:17552  i < allUsers.length */\n      dup2\n      lt\n        /* \"contracts/roy.sol\":17513:18717  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      iszero\n      tag_621\n      jumpi\n        /* \"contracts/roy.sol\":17573:17587  address staker */\n      0x00\n        /* \"contracts/roy.sol\":17590:17598  allUsers */\n      0x08\n        /* \"contracts/roy.sol\":17599:17600  i */\n      dup3\n        /* \"contracts/roy.sol\":17590:17601  allUsers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_623\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_623:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/roy.sol\":17639:17652  users[staker] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":17639:17644  users */\n      0x03\n        /* \"contracts/roy.sol\":17639:17652  users[staker] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/roy.sol\":17590:17601  allUsers[i] */\n      0x01\n        /* \"contracts/roy.sol\":17639:17659  users[staker].stakes */\n      add\n        /* \"contracts/roy.sol\":17615:17659  Stake[] memory stakes = users[staker].stakes */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup7\n      mul\n      dup2\n      add\n      dup7\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/roy.sol\":17590:17601  allUsers[i] */\n      swap3\n      swap6\n      pop\n        /* \"contracts/roy.sol\":17615:17659  Stake[] memory stakes = users[staker].stakes */\n      swap1\n      swap3\n        /* \"contracts/roy.sol\":17639:17659  users[staker].stakes */\n      swap1\n      swap2\n        /* \"contracts/roy.sol\":17615:17659  Stake[] memory stakes = users[staker].stakes */\n      swap1\n        /* \"contracts/roy.sol\":17590:17601  allUsers[i] */\n      dup5\n      swap1\n        /* \"contracts/roy.sol\":17615:17659  Stake[] memory stakes = users[staker].stakes */\n      dup5\n      add\n    tag_625:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_626\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x06\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_625)\n    tag_626:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17690:17703  users[staker] */\n      dup4\n      dup2\n      and\n        /* \"contracts/roy.sol\":17673:17687  address upline */\n      0x00\n        /* \"contracts/roy.sol\":17690:17703  users[staker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":17690:17695  users */\n      0x03\n        /* \"contracts/roy.sol\":17690:17703  users[staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/roy.sol\":17690:17712  users[staker].referrer */\n      sload\n        /* \"contracts/roy.sol\":17615:17659  Stake[] memory stakes = users[staker].stakes */\n      swap3\n      swap4\n      pop\n        /* \"contracts/roy.sol\":17690:17712  users[staker].referrer */\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":17727:18707  for (... */\n    tag_628:\n        /* \"contracts/roy.sol\":17790:17809  levelRewards.length */\n      0x05\n        /* \"contracts/roy.sol\":17782:17787  level */\n      dup2\n        /* \"contracts/roy.sol\":17782:17809  level < levelRewards.length */\n      0xff\n      and\n      lt\n        /* \"contracts/roy.sol\":17782:17833  level < levelRewards.length && upline != address(0) */\n      dup1\n      iszero\n      tag_631\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17813:17833  upline != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/roy.sol\":17782:17833  level < levelRewards.length && upline != address(0) */\n    tag_631:\n        /* \"contracts/roy.sol\":17727:18707  for (... */\n      iszero\n      tag_629\n      jumpi\n        /* \"contracts/roy.sol\":17905:17910  _user */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17895:17910  upline == _user */\n      and\n        /* \"contracts/roy.sol\":17895:17901  upline */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":17895:17910  upline == _user */\n      and\n      eq\n        /* \"contracts/roy.sol\":17891:18644  if (upline == _user) {... */\n      iszero\n      tag_632\n      jumpi\n        /* \"contracts/roy.sol\":17939:17948  uint256 j */\n      0x00\n        /* \"contracts/roy.sol\":17934:18626  for (uint256 j = 0; j < stakes.length; j++) {... */\n    tag_633:\n        /* \"contracts/roy.sol\":17958:17964  stakes */\n      dup4\n        /* \"contracts/roy.sol\":17958:17971  stakes.length */\n      mload\n        /* \"contracts/roy.sol\":17954:17955  j */\n      dup2\n        /* \"contracts/roy.sol\":17954:17971  j < stakes.length */\n      lt\n        /* \"contracts/roy.sol\":17934:18626  for (uint256 j = 0; j < stakes.length; j++) {... */\n      iszero\n      tag_634\n      jumpi\n        /* \"contracts/roy.sol\":18004:18022  Stake memory stake */\n      0x00\n        /* \"contracts/roy.sol\":18025:18031  stakes */\n      dup5\n        /* \"contracts/roy.sol\":18032:18033  j */\n      dup3\n        /* \"contracts/roy.sol\":18025:18034  stakes[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_636\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_636:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/roy.sol\":18004:18034  Stake memory stake = stakes[j] */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":18060:18074  uint256 income */\n      0x00\n        /* \"contracts/roy.sol\":18144:18147  100 */\n      0x64\n        /* \"contracts/roy.sol\":18093:18105  levelRewards */\n      0x09\n        /* \"contracts/roy.sol\":18106:18111  level */\n      dup6\n        /* \"contracts/roy.sol\":18093:18112  levelRewards[level] */\n      0xff\n      and\n      0x05\n      dup2\n      lt\n      tag_637\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_637:\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/roy.sol\":18078:18112  stake.amount * levelRewards[level] */\n      0xff\n      and\n        /* \"contracts/roy.sol\":18078:18083  stake */\n      dup4\n        /* \"contracts/roy.sol\":18078:18090  stake.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":18078:18112  stake.amount * levelRewards[level] */\n      tag_639\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_639:\n        /* \"contracts/roy.sol\":18077:18147  (stake.amount * levelRewards[level]) /... */\n      tag_640\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_640:\n        /* \"contracts/roy.sol\":18060:18147  uint256 income = (stake.amount * levelRewards[level]) /... */\n      swap1\n      pop\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/roy.sol\":18259:18264  _user */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18303:18308  stake */\n      dup4\n        /* \"contracts/roy.sol\":18303:18316  stake.stakeId */\n      0x00\n      add\n      mload\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18359:18364  stake */\n      dup4\n        /* \"contracts/roy.sol\":18359:18371  stake.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18417:18423  income */\n      dup3\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18468:18474  staker */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18515:18520  stake */\n      dup4\n        /* \"contracts/roy.sol\":18515:18530  stake.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/roy.sol\":18567:18572  level */\n      dup6\n        /* \"contracts/roy.sol\":18575:18576  1 */\n      0x01\n        /* \"contracts/roy.sol\":18567:18576  level + 1 */\n      tag_641\n      swap2\n      swap1\n      tag_642\n      jump\t// in\n    tag_641:\n        /* \"contracts/roy.sol\":18196:18603  LevelIncomeData({... */\n      0xff\n      and\n      swap1\n      mstore\n        /* \"contracts/roy.sol\":18174:18184  incomeData */\n      dup11\n        /* \"contracts/roy.sol\":18185:18192  index++ */\n      dup11\n      tag_643\n      dup2\n      tag_190\n      jump\t// in\n    tag_643:\n      swap12\n      pop\n        /* \"contracts/roy.sol\":18174:18193  incomeData[index++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_644\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_644:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/roy.sol\":18174:18603  incomeData[index++] = LevelIncomeData({... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/roy.sol\":17934:18626  for (uint256 j = 0; j < stakes.length; j++) {... */\n      pop\n      pop\n        /* \"contracts/roy.sol\":17973:17976  j++ */\n      dup1\n      dup1\n      tag_645\n      swap1\n      tag_190\n      jump\t// in\n    tag_645:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17934:18626  for (uint256 j = 0; j < stakes.length; j++) {... */\n      jump(tag_633)\n    tag_634:\n      pop\n        /* \"contracts/roy.sol\":17891:18644  if (upline == _user) {... */\n    tag_632:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/roy.sol\":18670:18683  users[upline] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/roy.sol\":18670:18675  users */\n      0x03\n        /* \"contracts/roy.sol\":18670:18683  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/roy.sol\":18670:18692  users[upline].referrer */\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/roy.sol\":17851:17858  level++ */\n      dup1\n      tag_646\n      dup2\n      tag_526\n      jump\t// in\n    tag_646:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17727:18707  for (... */\n      jump(tag_628)\n    tag_629:\n      pop\n        /* \"contracts/roy.sol\":17513:18717  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/roy.sol\":17554:17557  i++ */\n      dup1\n      dup1\n      tag_647\n      swap1\n      tag_190\n      jump\t// in\n    tag_647:\n      swap2\n      pop\n      pop\n        /* \"contracts/roy.sol\":17513:18717  for (uint256 i = 0; i < allUsers.length; i++) {... */\n      jump(tag_620)\n    tag_621:\n      pop\n        /* \"contracts/roy.sol\":18734:18744  incomeData */\n      swap1\n      swap5\n        /* \"contracts/roy.sol\":16683:18751  function getLevelIncomeDistribution(address _user)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/roy.sol\":1755:1810  mapping(address => uint256) public directReferralIncome */\n    tag_169:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/roy.sol\":454:481  uint256 public stakeCounter */\n    tag_172:\n      sload(0x01)\n      dup2\n      jump\t// out\n    tag_324:\n      0x01\n      dup4\n      add\n      swap2\n      dup4\n      swap1\n      dup3\n      iszero\n      tag_648\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n      0x00\n    tag_649:\n      dup4\n      dup3\n      gt\n      iszero\n      tag_650\n      jumpi\n      dup4\n      mload\n      dup4\n      dup3\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap3\n      0x20\n      add\n      swap3\n      0x01\n      add\n      0x20\n      dup2\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_649)\n    tag_650:\n      dup1\n      iszero\n      tag_651\n      jumpi\n      dup3\n      dup2\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      add\n      0x20\n      dup2\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_650)\n    tag_651:\n      pop\n    tag_648:\n      pop\n      tag_652\n      swap3\n      swap2\n      pop\n      tag_653\n      jump\t// in\n    tag_652:\n      pop\n      swap1\n      jump\t// out\n    tag_619:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_653:\n    tag_654:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_652\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_654)\n        /* \"#utility.yul\":14:189   */\n    tag_657:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_661:\n        /* \"#utility.yul\":355:386   */\n      tag_662\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_657\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:663   */\n    tag_44:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_664:\n        /* \"#utility.yul\":575:606   */\n      tag_665\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_657\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":565:606   */\n      swap5\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":625:657   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":484:663   */\n      jump\t// out\n        /* \"#utility.yul\":668:1607   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":801:804   */\n      0xa0\n        /* \"#utility.yul\":789:798   */\n      dup3\n        /* \"#utility.yul\":780:787   */\n      dup5\n        /* \"#utility.yul\":776:799   */\n      sub\n        /* \"#utility.yul\":772:805   */\n      slt\n        /* \"#utility.yul\":769:771   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":823:829   */\n      dup1\n        /* \"#utility.yul\":815:821   */\n      dup2\n        /* \"#utility.yul\":808:830   */\n      revert\n        /* \"#utility.yul\":769:771   */\n    tag_667:\n        /* \"#utility.yul\":877:884   */\n      dup3\n        /* \"#utility.yul\":870:874   */\n      0x1f\n        /* \"#utility.yul\":859:868   */\n      dup4\n        /* \"#utility.yul\":855:875   */\n      add\n        /* \"#utility.yul\":851:885   */\n      slt\n        /* \"#utility.yul\":841:843   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":904:910   */\n      dup1\n        /* \"#utility.yul\":896:902   */\n      dup2\n        /* \"#utility.yul\":889:911   */\n      revert\n        /* \"#utility.yul\":841:843   */\n    tag_668:\n        /* \"#utility.yul\":942:944   */\n      0x40\n        /* \"#utility.yul\":936:945   */\n      mload\n        /* \"#utility.yul\":984:987   */\n      0xa0\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":972:988   */\n      add\n        /* \"#utility.yul\":1054:1060   */\n      dup2\n        /* \"#utility.yul\":1042:1052   */\n      dup2\n        /* \"#utility.yul\":1039:1061   */\n      lt\n        /* \"#utility.yul\":1018:1036   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1006:1016   */\n      dup3\n        /* \"#utility.yul\":1003:1037   */\n      gt\n        /* \"#utility.yul\":1000:1062   */\n      or\n        /* \"#utility.yul\":997:999   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":1065:1083   */\n      tag_670\n      tag_671\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":1101:1103   */\n      0x40\n        /* \"#utility.yul\":1094:1116   */\n      mstore\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1162:1171   */\n      dup4\n        /* \"#utility.yul\":1201:1204   */\n      0xa0\n        /* \"#utility.yul\":1186:1205   */\n      dup2\n      add\n        /* \"#utility.yul\":1183:1215   */\n      dup7\n      lt\n        /* \"#utility.yul\":1180:1182   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":1233:1239   */\n      dup4\n        /* \"#utility.yul\":1225:1231   */\n      dup5\n        /* \"#utility.yul\":1218:1240   */\n      revert\n        /* \"#utility.yul\":1180:1182   */\n    tag_672:\n        /* \"#utility.yul\":1260:1266   */\n      dup4\n        /* \"#utility.yul\":1275:1576   */\n    tag_673:\n        /* \"#utility.yul\":1289:1293   */\n      0x05\n        /* \"#utility.yul\":1286:1287   */\n      dup2\n        /* \"#utility.yul\":1283:1294   */\n      lt\n        /* \"#utility.yul\":1275:1576   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":1362:1365   */\n      dup2\n        /* \"#utility.yul\":1349:1366   */\n      calldataload\n        /* \"#utility.yul\":1410:1414   */\n      0xff\n        /* \"#utility.yul\":1403:1408   */\n      dup2\n        /* \"#utility.yul\":1399:1415   */\n      and\n        /* \"#utility.yul\":1392:1397   */\n      dup2\n        /* \"#utility.yul\":1389:1416   */\n      eq\n        /* \"#utility.yul\":1379:1381   */\n      tag_676\n      jumpi\n        /* \"#utility.yul\":1435:1441   */\n      dup6\n        /* \"#utility.yul\":1427:1433   */\n      dup7\n        /* \"#utility.yul\":1420:1442   */\n      revert\n        /* \"#utility.yul\":1379:1381   */\n    tag_676:\n        /* \"#utility.yul\":1457:1475   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1498:1502   */\n      0x20\n        /* \"#utility.yul\":1522:1534   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":1554:1566   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":1309:1310   */\n      0x01\n        /* \"#utility.yul\":1302:1311   */\n      add\n        /* \"#utility.yul\":1275:1576   */\n      jump(tag_673)\n    tag_675:\n      pop\n        /* \"#utility.yul\":1595:1601   */\n      swap2\n      swap6\n        /* \"#utility.yul\":759:1607   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1909   */\n    tag_272:\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1711:1718   */\n      dup5\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1702   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":1753:1759   */\n      dup1\n        /* \"#utility.yul\":1745:1751   */\n      dup2\n        /* \"#utility.yul\":1738:1760   */\n      revert\n        /* \"#utility.yul\":1700:1702   */\n    tag_678:\n        /* \"#utility.yul\":1790:1799   */\n      dup2\n        /* \"#utility.yul\":1784:1800   */\n      mload\n        /* \"#utility.yul\":1843:1848   */\n      dup1\n        /* \"#utility.yul\":1836:1849   */\n      iszero\n        /* \"#utility.yul\":1829:1850   */\n      iszero\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1851   */\n      eq\n        /* \"#utility.yul\":1809:1811   */\n      tag_662\n      jumpi\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1862:1868   */\n      dup3\n        /* \"#utility.yul\":1855:1877   */\n      revert\n        /* \"#utility.yul\":1914:2104   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2014:2023   */\n      dup3\n        /* \"#utility.yul\":2005:2012   */\n      dup5\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:1996   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":2047:2053   */\n      dup1\n        /* \"#utility.yul\":2039:2045   */\n      dup2\n        /* \"#utility.yul\":2032:2054   */\n      revert\n        /* \"#utility.yul\":1994:1996   */\n    tag_681:\n      pop\n        /* \"#utility.yul\":2075:2098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1984:2104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2109:2303   */\n    tag_260:\n      0x00\n        /* \"#utility.yul\":2232:2234   */\n      0x20\n        /* \"#utility.yul\":2220:2229   */\n      dup3\n        /* \"#utility.yul\":2211:2218   */\n      dup5\n        /* \"#utility.yul\":2207:2230   */\n      sub\n        /* \"#utility.yul\":2203:2235   */\n      slt\n        /* \"#utility.yul\":2200:2202   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":2253:2259   */\n      dup1\n        /* \"#utility.yul\":2245:2251   */\n      dup2\n        /* \"#utility.yul\":2238:2260   */\n      revert\n        /* \"#utility.yul\":2200:2202   */\n    tag_683:\n      pop\n        /* \"#utility.yul\":2281:2297   */\n      mload\n      swap2\n        /* \"#utility.yul\":2190:2303   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2566   */\n    tag_76:\n      0x00\n      dup1\n        /* \"#utility.yul\":2437:2439   */\n      0x40\n        /* \"#utility.yul\":2425:2434   */\n      dup4\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2412:2435   */\n      sub\n        /* \"#utility.yul\":2408:2440   */\n      slt\n        /* \"#utility.yul\":2405:2407   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":2458:2464   */\n      dup2\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2443:2465   */\n      revert\n        /* \"#utility.yul\":2405:2407   */\n    tag_685:\n      pop\n      pop\n        /* \"#utility.yul\":2486:2509   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2556:2558   */\n      0x20\n        /* \"#utility.yul\":2541:2559   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2528:2560   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2395:2566   */\n      jump\t// out\n        /* \"#utility.yul\":2571:3014   */\n    tag_686:\n      0x00\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2662:2674   */\n      mload\n        /* \"#utility.yul\":2695:2701   */\n      dup1\n        /* \"#utility.yul\":2690:2693   */\n      dup5\n        /* \"#utility.yul\":2683:2702   */\n      mstore\n        /* \"#utility.yul\":2721:2725   */\n      0x20\n        /* \"#utility.yul\":2750:2752   */\n      dup1\n        /* \"#utility.yul\":2745:2748   */\n      dup6\n        /* \"#utility.yul\":2741:2753   */\n      add\n        /* \"#utility.yul\":2734:2753   */\n      swap5\n      pop\n        /* \"#utility.yul\":2787:2789   */\n      dup1\n        /* \"#utility.yul\":2780:2785   */\n      dup5\n        /* \"#utility.yul\":2776:2790   */\n      add\n        /* \"#utility.yul\":2808:2811   */\n      dup4\n        /* \"#utility.yul\":2820:2989   */\n    tag_688:\n        /* \"#utility.yul\":2834:2840   */\n      dup4\n        /* \"#utility.yul\":2831:2832   */\n      dup2\n        /* \"#utility.yul\":2828:2841   */\n      lt\n        /* \"#utility.yul\":2820:2989   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":2895:2908   */\n      dup2\n      mload\n        /* \"#utility.yul\":2883:2909   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2929:2941   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":2964:2979   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2856:2857   */\n      0x01\n        /* \"#utility.yul\":2849:2858   */\n      add\n        /* \"#utility.yul\":2820:2989   */\n      jump(tag_688)\n    tag_690:\n      pop\n        /* \"#utility.yul\":3005:3008   */\n      swap5\n      swap6\n        /* \"#utility.yul\":2638:3014   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3222   */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3183:3215   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3165:3216   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3153:3155   */\n      0x20\n        /* \"#utility.yul\":3138:3156   */\n      add\n      swap1\n        /* \"#utility.yul\":3120:3222   */\n      jump\t// out\n        /* \"#utility.yul\":3227:3602   */\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3485:3500   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":3467:3501   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3537:3552   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3532:3534   */\n      0x20\n        /* \"#utility.yul\":3517:3535   */\n      dup3\n      add\n        /* \"#utility.yul\":3510:3553   */\n      mstore\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3569:3587   */\n      dup2\n      add\n        /* \"#utility.yul\":3562:3596   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3417:3419   */\n      0x60\n        /* \"#utility.yul\":3402:3420   */\n      add\n      swap1\n        /* \"#utility.yul\":3384:3602   */\n      jump\t// out\n        /* \"#utility.yul\":3607:3881   */\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3799:3831   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3781:3832   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3848:3866   */\n      dup3\n      add\n        /* \"#utility.yul\":3841:3875   */\n      mstore\n        /* \"#utility.yul\":3769:3771   */\n      0x40\n        /* \"#utility.yul\":3754:3772   */\n      add\n      swap1\n        /* \"#utility.yul\":3736:3881   */\n      jump\t// out\n        /* \"#utility.yul\":3886:4231   */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4106:4138   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4088:4139   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4155:4173   */\n      dup4\n      add\n        /* \"#utility.yul\":4148:4182   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4213:4215   */\n      0x40\n        /* \"#utility.yul\":4198:4216   */\n      dup3\n      add\n        /* \"#utility.yul\":4191:4225   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x60\n        /* \"#utility.yul\":4061:4079   */\n      add\n      swap1\n        /* \"#utility.yul\":4043:4231   */\n      jump\t// out\n        /* \"#utility.yul\":4236:4663   */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4479:4511   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4461:4512   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4543:4545   */\n      0x20\n        /* \"#utility.yul\":4528:4546   */\n      dup5\n      add\n        /* \"#utility.yul\":4521:4555   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4571:4589   */\n      dup4\n      add\n        /* \"#utility.yul\":4564:4598   */\n      mstore\n        /* \"#utility.yul\":4641:4655   */\n      iszero\n        /* \"#utility.yul\":4634:4656   */\n      iszero\n        /* \"#utility.yul\":4629:4631   */\n      0x60\n        /* \"#utility.yul\":4614:4632   */\n      dup3\n      add\n        /* \"#utility.yul\":4607:4657   */\n      mstore\n        /* \"#utility.yul\":4448:4451   */\n      0x80\n        /* \"#utility.yul\":4433:4452   */\n      add\n      swap1\n        /* \"#utility.yul\":4415:4663   */\n      jump\t// out\n        /* \"#utility.yul\":4668:5383   */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5023:5055   */\n      swap9\n      swap1\n      swap9\n      and\n        /* \"#utility.yul\":5005:5056   */\n      dup9\n      mstore\n        /* \"#utility.yul\":5087:5089   */\n      0x20\n        /* \"#utility.yul\":5072:5090   */\n      dup9\n      add\n        /* \"#utility.yul\":5065:5099   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":5130:5132   */\n      0x40\n        /* \"#utility.yul\":5115:5133   */\n      dup8\n      add\n        /* \"#utility.yul\":5108:5142   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5173:5175   */\n      0x60\n        /* \"#utility.yul\":5158:5176   */\n      dup7\n      add\n        /* \"#utility.yul\":5151:5185   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5216:5219   */\n      0x80\n        /* \"#utility.yul\":5201:5220   */\n      dup6\n      add\n        /* \"#utility.yul\":5194:5229   */\n      mstore\n        /* \"#utility.yul\":5043:5046   */\n      0xa0\n        /* \"#utility.yul\":5245:5264   */\n      dup5\n      add\n        /* \"#utility.yul\":5238:5273   */\n      mstore\n        /* \"#utility.yul\":5304:5307   */\n      0xc0\n        /* \"#utility.yul\":5289:5308   */\n      dup4\n      add\n        /* \"#utility.yul\":5282:5317   */\n      mstore\n        /* \"#utility.yul\":5361:5375   */\n      iszero\n        /* \"#utility.yul\":5354:5376   */\n      iszero\n        /* \"#utility.yul\":5348:5351   */\n      0xe0\n        /* \"#utility.yul\":5333:5352   */\n      dup3\n      add\n        /* \"#utility.yul\":5326:5377   */\n      mstore\n        /* \"#utility.yul\":4992:4995   */\n      0x0100\n        /* \"#utility.yul\":4977:4996   */\n      add\n      swap1\n        /* \"#utility.yul\":4959:5383   */\n      jump\t// out\n        /* \"#utility.yul\":5388:6440   */\n    tag_119:\n        /* \"#utility.yul\":5734:5736   */\n      0x60\n        /* \"#utility.yul\":5746:5767   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5816:5829   */\n      dup5\n      mload\n        /* \"#utility.yul\":5719:5737   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5838:5860   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5388:6440   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5914:5918   */\n      0x20\n      swap1\n        /* \"#utility.yul\":5891:5894   */\n      0x80\n        /* \"#utility.yul\":5876:5895   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5941:5956   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":5388:6440   */\n      dup5\n        /* \"#utility.yul\":5987:6182   */\n    tag_698:\n        /* \"#utility.yul\":6001:6007   */\n      dup3\n        /* \"#utility.yul\":5998:5999   */\n      dup2\n        /* \"#utility.yul\":5995:6008   */\n      lt\n        /* \"#utility.yul\":5987:6182   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":6066:6079   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6062:6101   */\n      and\n        /* \"#utility.yul\":6050:6102   */\n      dup5\n      mstore\n        /* \"#utility.yul\":6122:6134   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6157:6172   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6098:6099   */\n      0x01\n        /* \"#utility.yul\":6016:6025   */\n      add\n        /* \"#utility.yul\":5987:6182   */\n      jump(tag_698)\n    tag_700:\n        /* \"#utility.yul\":5991:5994   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6227:6236   */\n      dup4\n        /* \"#utility.yul\":6222:6225   */\n      dup2\n        /* \"#utility.yul\":6218:6237   */\n      sub\n        /* \"#utility.yul\":6213:6215   */\n      dup3\n        /* \"#utility.yul\":6202:6211   */\n      dup6\n        /* \"#utility.yul\":6198:6216   */\n      add\n        /* \"#utility.yul\":6191:6238   */\n      mstore\n        /* \"#utility.yul\":6261:6308   */\n      tag_701\n        /* \"#utility.yul\":6304:6307   */\n      dup2\n        /* \"#utility.yul\":6296:6302   */\n      dup8\n        /* \"#utility.yul\":6261:6308   */\n      tag_686\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":6247:6308   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6356:6365   */\n      dup3\n        /* \"#utility.yul\":6348:6354   */\n      dup2\n        /* \"#utility.yul\":6344:6366   */\n      sub\n        /* \"#utility.yul\":6339:6341   */\n      0x40\n        /* \"#utility.yul\":6328:6337   */\n      dup5\n        /* \"#utility.yul\":6324:6342   */\n      add\n        /* \"#utility.yul\":6317:6367   */\n      mstore\n        /* \"#utility.yul\":6384:6434   */\n      tag_702\n        /* \"#utility.yul\":6427:6433   */\n      dup2\n        /* \"#utility.yul\":6419:6425   */\n      dup6\n        /* \"#utility.yul\":6384:6434   */\n      tag_686\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":6376:6434   */\n      swap7\n        /* \"#utility.yul\":5695:6440   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6445:7696   */\n    tag_166:\n        /* \"#utility.yul\":6680:6682   */\n      0x20\n        /* \"#utility.yul\":6732:6753   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6802:6815   */\n      dup3\n      mload\n        /* \"#utility.yul\":6705:6723   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6824:6846   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6445:7696   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6680:6682   */\n      swap1\n        /* \"#utility.yul\":6865:6867   */\n      0x40\n      swap1\n        /* \"#utility.yul\":6883:6901   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6924:6939   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":6445:7696   */\n      dup6\n        /* \"#utility.yul\":6970:7670   */\n    tag_704:\n        /* \"#utility.yul\":6984:6990   */\n      dup3\n        /* \"#utility.yul\":6981:6982   */\n      dup2\n        /* \"#utility.yul\":6978:6991   */\n      lt\n        /* \"#utility.yul\":6970:7670   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":7043:7056   */\n      dup2\n      mload\n        /* \"#utility.yul\":7127:7136   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7123:7141   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":7111:7142   */\n      dup7\n      mstore\n        /* \"#utility.yul\":7182:7193   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":7176:7194   */\n      mload\n        /* \"#utility.yul\":7162:7174   */\n      dup9\n      dup8\n      add\n        /* \"#utility.yul\":7155:7195   */\n      mstore\n        /* \"#utility.yul\":7235:7246   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":7229:7247   */\n      mload\n        /* \"#utility.yul\":7215:7227   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":7208:7248   */\n      mstore\n        /* \"#utility.yul\":7271:7275   */\n      0x60\n        /* \"#utility.yul\":7315:7326   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":7309:7327   */\n      mload\n        /* \"#utility.yul\":7295:7307   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":7288:7328   */\n      mstore\n        /* \"#utility.yul\":7351:7355   */\n      0x80\n        /* \"#utility.yul\":7399:7410   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":7393:7411   */\n      mload\n        /* \"#utility.yul\":7389:7416   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7375:7387   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7368:7417   */\n      mstore\n        /* \"#utility.yul\":7087:7090   */\n      0xa0\n        /* \"#utility.yul\":7484:7495   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7478:7496   */\n      mload\n        /* \"#utility.yul\":7464:7476   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7457:7497   */\n      mstore\n        /* \"#utility.yul\":7520:7524   */\n      0xc0\n        /* \"#utility.yul\":7568:7579   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7562:7580   */\n      mload\n        /* \"#utility.yul\":7582:7586   */\n      0xff\n        /* \"#utility.yul\":7558:7587   */\n      and\n        /* \"#utility.yul\":7544:7556   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":7537:7588   */\n      mstore\n        /* \"#utility.yul\":7617:7621   */\n      0xe0\n        /* \"#utility.yul\":7608:7622   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7645:7660   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7096:7097   */\n      0x01\n        /* \"#utility.yul\":6999:7008   */\n      add\n        /* \"#utility.yul\":6970:7670   */\n      jump(tag_704)\n    tag_706:\n      pop\n        /* \"#utility.yul\":7687:7690   */\n      swap2\n      swap8\n        /* \"#utility.yul\":6660:7696   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7701:7968   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":7880:7882   */\n      0x20\n        /* \"#utility.yul\":7869:7878   */\n      dup3\n        /* \"#utility.yul\":7862:7883   */\n      mstore\n        /* \"#utility.yul\":7900:7962   */\n      tag_662\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7947:7956   */\n      dup4\n        /* \"#utility.yul\":7943:7961   */\n      add\n        /* \"#utility.yul\":7935:7941   */\n      dup5\n        /* \"#utility.yul\":7900:7962   */\n      tag_686\n      jump\t// in\n        /* \"#utility.yul\":7973:8160   */\n    tag_150:\n        /* \"#utility.yul\":8138:8152   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8131:8153   */\n      iszero\n        /* \"#utility.yul\":8113:8154   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8101:8103   */\n      0x20\n        /* \"#utility.yul\":8086:8104   */\n      add\n      swap1\n        /* \"#utility.yul\":8068:8160   */\n      jump\t// out\n        /* \"#utility.yul\":8386:8733   */\n    tag_304:\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8570:8591   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8627:8629   */\n      0x17\n        /* \"#utility.yul\":8607:8625   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8600:8630   */\n      mstore\n        /* \"#utility.yul\":8666:8691   */\n      0x5265666572726572206e6f742072656769737465726564000000000000000000\n        /* \"#utility.yul\":8661:8663   */\n      0x40\n        /* \"#utility.yul\":8646:8664   */\n      dup3\n      add\n        /* \"#utility.yul\":8639:8692   */\n      mstore\n        /* \"#utility.yul\":8724:8726   */\n      0x60\n        /* \"#utility.yul\":8709:8727   */\n      add\n      swap1\n        /* \"#utility.yul\":8560:8733   */\n      jump\t// out\n        /* \"#utility.yul\":8738:9076   */\n    tag_194:\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8922:8943   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8979:8981   */\n      0x0e\n        /* \"#utility.yul\":8959:8977   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8952:8982   */\n      mstore\n      shl(0x92, 0x139bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":9013:9015   */\n      0x40\n        /* \"#utility.yul\":8998:9016   */\n      dup3\n      add\n        /* \"#utility.yul\":8991:9035   */\n      mstore\n        /* \"#utility.yul\":9067:9069   */\n      0x60\n        /* \"#utility.yul\":9052:9070   */\n      add\n      swap1\n        /* \"#utility.yul\":8912:9076   */\n      jump\t// out\n        /* \"#utility.yul\":9081:9426   */\n    tag_301:\n        /* \"#utility.yul\":9283:9285   */\n      0x20\n        /* \"#utility.yul\":9265:9286   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9322:9324   */\n      0x15\n        /* \"#utility.yul\":9302:9320   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9295:9325   */\n      mstore\n      shl(0x59, 0x21b0b73737ba103932b332b9103cb7bab939b2b633)\n        /* \"#utility.yul\":9356:9358   */\n      0x40\n        /* \"#utility.yul\":9341:9359   */\n      dup3\n      add\n        /* \"#utility.yul\":9334:9385   */\n      mstore\n        /* \"#utility.yul\":9417:9419   */\n      0x60\n        /* \"#utility.yul\":9402:9420   */\n      add\n      swap1\n        /* \"#utility.yul\":9255:9426   */\n      jump\t// out\n        /* \"#utility.yul\":9431:9786   */\n    tag_459:\n        /* \"#utility.yul\":9633:9635   */\n      0x20\n        /* \"#utility.yul\":9615:9636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9672:9674   */\n      0x1f\n        /* \"#utility.yul\":9652:9670   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9645:9675   */\n      mstore\n        /* \"#utility.yul\":9711:9744   */\n      0x44697265637420726566657272616c207472616e73666572206661696c656400\n        /* \"#utility.yul\":9706:9708   */\n      0x40\n        /* \"#utility.yul\":9691:9709   */\n      dup3\n      add\n        /* \"#utility.yul\":9684:9745   */\n      mstore\n        /* \"#utility.yul\":9777:9779   */\n      0x60\n        /* \"#utility.yul\":9762:9780   */\n      add\n      swap1\n        /* \"#utility.yul\":9605:9786   */\n      jump\t// out\n        /* \"#utility.yul\":9791:10145   */\n    tag_467:\n        /* \"#utility.yul\":9993:9995   */\n      0x20\n        /* \"#utility.yul\":9975:9996   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10032:10034   */\n      0x1e\n        /* \"#utility.yul\":10012:10030   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10005:10035   */\n      mstore\n        /* \"#utility.yul\":10071:10103   */\n      0x4c6576656c203120726577617264207472616e73666572206661696c65640000\n        /* \"#utility.yul\":10066:10068   */\n      0x40\n        /* \"#utility.yul\":10051:10069   */\n      dup3\n      add\n        /* \"#utility.yul\":10044:10104   */\n      mstore\n        /* \"#utility.yul\":10136:10138   */\n      0x60\n        /* \"#utility.yul\":10121:10139   */\n      add\n      swap1\n        /* \"#utility.yul\":9965:10145   */\n      jump\t// out\n        /* \"#utility.yul\":10150:10506   */\n    tag_587:\n        /* \"#utility.yul\":10352:10354   */\n      0x20\n        /* \"#utility.yul\":10334:10355   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10371:10389   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10364:10394   */\n      mstore\n        /* \"#utility.yul\":10430:10464   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":10425:10427   */\n      0x40\n        /* \"#utility.yul\":10410:10428   */\n      dup3\n      add\n        /* \"#utility.yul\":10403:10465   */\n      mstore\n        /* \"#utility.yul\":10497:10499   */\n      0x60\n        /* \"#utility.yul\":10482:10500   */\n      add\n      swap1\n        /* \"#utility.yul\":10324:10506   */\n      jump\t// out\n        /* \"#utility.yul\":10511:10864   */\n    tag_555:\n        /* \"#utility.yul\":10713:10715   */\n      0x20\n        /* \"#utility.yul\":10695:10716   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10752:10754   */\n      0x1d\n        /* \"#utility.yul\":10732:10750   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10725:10755   */\n      mstore\n        /* \"#utility.yul\":10791:10822   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":10786:10788   */\n      0x40\n        /* \"#utility.yul\":10771:10789   */\n      dup3\n      add\n        /* \"#utility.yul\":10764:10823   */\n      mstore\n        /* \"#utility.yul\":10855:10857   */\n      0x60\n        /* \"#utility.yul\":10840:10858   */\n      add\n      swap1\n        /* \"#utility.yul\":10685:10864   */\n      jump\t// out\n        /* \"#utility.yul\":10869:11211   */\n    tag_298:\n        /* \"#utility.yul\":11071:11073   */\n      0x20\n        /* \"#utility.yul\":11053:11074   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11110:11112   */\n      0x12\n        /* \"#utility.yul\":11090:11108   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11083:11113   */\n      mstore\n      shl(0x72, 0x105b1c9958591e481c9959da5cdd195c9959)\n        /* \"#utility.yul\":11144:11146   */\n      0x40\n        /* \"#utility.yul\":11129:11147   */\n      dup3\n      add\n        /* \"#utility.yul\":11122:11170   */\n      mstore\n        /* \"#utility.yul\":11202:11204   */\n      0x60\n        /* \"#utility.yul\":11187:11205   */\n      add\n      swap1\n        /* \"#utility.yul\":11043:11211   */\n      jump\t// out\n        /* \"#utility.yul\":11216:11568   */\n    tag_522:\n        /* \"#utility.yul\":11418:11420   */\n      0x20\n        /* \"#utility.yul\":11400:11421   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11457:11459   */\n      0x1c\n        /* \"#utility.yul\":11437:11455   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11430:11460   */\n      mstore\n        /* \"#utility.yul\":11496:11526   */\n      0x4c6576656c20726577617264207472616e73666572206661696c656400000000\n        /* \"#utility.yul\":11491:11493   */\n      0x40\n        /* \"#utility.yul\":11476:11494   */\n      dup3\n      add\n        /* \"#utility.yul\":11469:11527   */\n      mstore\n        /* \"#utility.yul\":11559:11561   */\n      0x60\n        /* \"#utility.yul\":11544:11562   */\n      add\n      swap1\n        /* \"#utility.yul\":11390:11568   */\n      jump\t// out\n        /* \"#utility.yul\":11573:11977   */\n    tag_423:\n        /* \"#utility.yul\":11775:11777   */\n      0x20\n        /* \"#utility.yul\":11757:11778   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11814:11816   */\n      0x28\n        /* \"#utility.yul\":11794:11812   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11787:11817   */\n      mstore\n        /* \"#utility.yul\":11853:11887   */\n      0x5265666572726572206d757374207374616b65206265666f726520796f752063\n        /* \"#utility.yul\":11848:11850   */\n      0x40\n        /* \"#utility.yul\":11833:11851   */\n      dup3\n      add\n        /* \"#utility.yul\":11826:11888   */\n      mstore\n      shl(0xc0, 0x616e207374616b65)\n        /* \"#utility.yul\":11919:11921   */\n      0x60\n        /* \"#utility.yul\":11904:11922   */\n      dup3\n      add\n        /* \"#utility.yul\":11897:11935   */\n      mstore\n        /* \"#utility.yul\":11967:11970   */\n      0x80\n        /* \"#utility.yul\":11952:11971   */\n      add\n      swap1\n        /* \"#utility.yul\":11747:11977   */\n      jump\t// out\n        /* \"#utility.yul\":11982:12329   */\n    tag_289:\n        /* \"#utility.yul\":12184:12186   */\n      0x20\n        /* \"#utility.yul\":12166:12187   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12223:12225   */\n      0x17\n        /* \"#utility.yul\":12203:12221   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12196:12226   */\n      mstore\n        /* \"#utility.yul\":12262:12287   */\n      0x4f6e6c79206f776e65722063616e207769746864726177000000000000000000\n        /* \"#utility.yul\":12257:12259   */\n      0x40\n        /* \"#utility.yul\":12242:12260   */\n      dup3\n      add\n        /* \"#utility.yul\":12235:12288   */\n      mstore\n        /* \"#utility.yul\":12320:12322   */\n      0x60\n        /* \"#utility.yul\":12305:12323   */\n      add\n      swap1\n        /* \"#utility.yul\":12156:12329   */\n      jump\t// out\n        /* \"#utility.yul\":12334:12686   */\n    tag_243:\n        /* \"#utility.yul\":12536:12538   */\n      0x20\n        /* \"#utility.yul\":12518:12539   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12575:12577   */\n      0x1c\n        /* \"#utility.yul\":12555:12573   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12548:12578   */\n      mstore\n        /* \"#utility.yul\":12614:12644   */\n      0x556e737570706f72746564207374616b696e67206475726174696f6e00000000\n        /* \"#utility.yul\":12609:12611   */\n      0x40\n        /* \"#utility.yul\":12594:12612   */\n      dup3\n      add\n        /* \"#utility.yul\":12587:12645   */\n      mstore\n        /* \"#utility.yul\":12677:12679   */\n      0x60\n        /* \"#utility.yul\":12662:12680   */\n      add\n      swap1\n        /* \"#utility.yul\":12508:12686   */\n      jump\t// out\n        /* \"#utility.yul\":12691:13089   */\n    tag_285:\n        /* \"#utility.yul\":12893:12895   */\n      0x20\n        /* \"#utility.yul\":12875:12896   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12932:12934   */\n      0x22\n        /* \"#utility.yul\":12912:12930   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12905:12935   */\n      mstore\n        /* \"#utility.yul\":12971:13005   */\n      0x5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d\n        /* \"#utility.yul\":12966:12968   */\n      0x40\n        /* \"#utility.yul\":12951:12969   */\n      dup3\n      add\n        /* \"#utility.yul\":12944:13006   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":13037:13039   */\n      0x60\n        /* \"#utility.yul\":13022:13040   */\n      dup3\n      add\n        /* \"#utility.yul\":13015:13047   */\n      mstore\n        /* \"#utility.yul\":13079:13082   */\n      0x80\n        /* \"#utility.yul\":13064:13083   */\n      add\n      swap1\n        /* \"#utility.yul\":12865:13089   */\n      jump\t// out\n        /* \"#utility.yul\":13094:13439   */\n    tag_595:\n        /* \"#utility.yul\":13296:13298   */\n      0x20\n        /* \"#utility.yul\":13278:13299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13335:13337   */\n      0x15\n        /* \"#utility.yul\":13315:13333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13308:13338   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":13369:13371   */\n      0x40\n        /* \"#utility.yul\":13354:13372   */\n      dup3\n      add\n        /* \"#utility.yul\":13347:13398   */\n      mstore\n        /* \"#utility.yul\":13430:13432   */\n      0x60\n        /* \"#utility.yul\":13415:13433   */\n      add\n      swap1\n        /* \"#utility.yul\":13268:13439   */\n      jump\t// out\n        /* \"#utility.yul\":13444:13792   */\n    tag_419:\n        /* \"#utility.yul\":13646:13648   */\n      0x20\n        /* \"#utility.yul\":13628:13649   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13685:13687   */\n      0x18\n        /* \"#utility.yul\":13665:13683   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13658:13688   */\n      mstore\n        /* \"#utility.yul\":13724:13750   */\n      0x496e76616c6964207374616b696e67206475726174696f6e0000000000000000\n        /* \"#utility.yul\":13719:13721   */\n      0x40\n        /* \"#utility.yul\":13704:13722   */\n      dup3\n      add\n        /* \"#utility.yul\":13697:13751   */\n      mstore\n        /* \"#utility.yul\":13783:13785   */\n      0x60\n        /* \"#utility.yul\":13768:13786   */\n      add\n      swap1\n        /* \"#utility.yul\":13618:13792   */\n      jump\t// out\n        /* \"#utility.yul\":13797:14146   */\n    tag_584:\n        /* \"#utility.yul\":13999:14001   */\n      0x20\n        /* \"#utility.yul\":13981:14002   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14038:14040   */\n      0x19\n        /* \"#utility.yul\":14018:14036   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14011:14041   */\n      mstore\n        /* \"#utility.yul\":14077:14104   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":14072:14074   */\n      0x40\n        /* \"#utility.yul\":14057:14075   */\n      dup3\n      add\n        /* \"#utility.yul\":14050:14105   */\n      mstore\n        /* \"#utility.yul\":14137:14139   */\n      0x60\n        /* \"#utility.yul\":14122:14140   */\n      add\n      swap1\n        /* \"#utility.yul\":13971:14146   */\n      jump\t// out\n        /* \"#utility.yul\":14151:14507   */\n    tag_215:\n        /* \"#utility.yul\":14353:14355   */\n      0x20\n        /* \"#utility.yul\":14335:14356   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14372:14390   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14365:14395   */\n      mstore\n        /* \"#utility.yul\":14431:14465   */\n      0x5374616b696e6720706572696f64206e6f742079657420636f6d706c65746564\n        /* \"#utility.yul\":14426:14428   */\n      0x40\n        /* \"#utility.yul\":14411:14429   */\n      dup3\n      add\n        /* \"#utility.yul\":14404:14466   */\n      mstore\n        /* \"#utility.yul\":14498:14500   */\n      0x60\n        /* \"#utility.yul\":14483:14501   */\n      add\n      swap1\n        /* \"#utility.yul\":14325:14507   */\n      jump\t// out\n        /* \"#utility.yul\":14512:14856   */\n    tag_275:\n        /* \"#utility.yul\":14714:14716   */\n      0x20\n        /* \"#utility.yul\":14696:14717   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14753:14755   */\n      0x14\n        /* \"#utility.yul\":14733:14751   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14726:14756   */\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":14787:14789   */\n      0x40\n        /* \"#utility.yul\":14772:14790   */\n      dup3\n      add\n        /* \"#utility.yul\":14765:14815   */\n      mstore\n        /* \"#utility.yul\":14847:14849   */\n      0x60\n        /* \"#utility.yul\":14832:14850   */\n      add\n      swap1\n        /* \"#utility.yul\":14686:14856   */\n      jump\t// out\n        /* \"#utility.yul\":14861:15268   */\n    tag_307:\n        /* \"#utility.yul\":15063:15065   */\n      0x20\n        /* \"#utility.yul\":15045:15066   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15102:15104   */\n      0x2b\n        /* \"#utility.yul\":15082:15100   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15075:15105   */\n      mstore\n        /* \"#utility.yul\":15141:15175   */\n      0x5265666572726572206d757374207374616b65206265666f726520796f752063\n        /* \"#utility.yul\":15136:15138   */\n      0x40\n        /* \"#utility.yul\":15121:15139   */\n      dup3\n      add\n        /* \"#utility.yul\":15114:15176   */\n      mstore\n      shl(0xa9, 0x30b7103932b3b4b9ba32b9)\n        /* \"#utility.yul\":15207:15209   */\n      0x60\n        /* \"#utility.yul\":15192:15210   */\n      dup3\n      add\n        /* \"#utility.yul\":15185:15226   */\n      mstore\n        /* \"#utility.yul\":15258:15261   */\n      0x80\n        /* \"#utility.yul\":15243:15262   */\n      add\n      swap1\n        /* \"#utility.yul\":15035:15268   */\n      jump\t// out\n        /* \"#utility.yul\":15273:15612   */\n    tag_409:\n        /* \"#utility.yul\":15475:15477   */\n      0x20\n        /* \"#utility.yul\":15457:15478   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15514:15516   */\n      0x0f\n        /* \"#utility.yul\":15494:15512   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15487:15517   */\n      mstore\n      shl(0x8a, 0x14dd185ad9481b9bdd08199bdd5b99)\n        /* \"#utility.yul\":15548:15550   */\n      0x40\n        /* \"#utility.yul\":15533:15551   */\n      dup3\n      add\n        /* \"#utility.yul\":15526:15571   */\n      mstore\n        /* \"#utility.yul\":15603:15605   */\n      0x60\n        /* \"#utility.yul\":15588:15606   */\n      add\n      swap1\n        /* \"#utility.yul\":15447:15612   */\n      jump\t// out\n        /* \"#utility.yul\":15617:16023   */\n    tag_343:\n        /* \"#utility.yul\":15819:15821   */\n      0x20\n        /* \"#utility.yul\":15801:15822   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15858:15860   */\n      0x2a\n        /* \"#utility.yul\":15838:15856   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15831:15861   */\n      mstore\n        /* \"#utility.yul\":15897:15931   */\n      0x456d657267656e637920636c61696d20616c6c6f776564206f6e6c7920616674\n        /* \"#utility.yul\":15892:15894   */\n      0x40\n        /* \"#utility.yul\":15877:15895   */\n      dup3\n      add\n        /* \"#utility.yul\":15870:15932   */\n      mstore\n      shl(0xb0, 0x65722031302064617973)\n        /* \"#utility.yul\":15963:15965   */\n      0x60\n        /* \"#utility.yul\":15948:15966   */\n      dup3\n      add\n        /* \"#utility.yul\":15941:15981   */\n      mstore\n        /* \"#utility.yul\":16013:16016   */\n      0x80\n        /* \"#utility.yul\":15998:16017   */\n      add\n      swap1\n        /* \"#utility.yul\":15791:16023   */\n      jump\t// out\n        /* \"#utility.yul\":16028:16427   */\n    tag_416:\n        /* \"#utility.yul\":16230:16232   */\n      0x20\n        /* \"#utility.yul\":16212:16233   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16269:16271   */\n      0x23\n        /* \"#utility.yul\":16249:16267   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16242:16272   */\n      mstore\n        /* \"#utility.yul\":16308:16342   */\n      0x5374616b6520616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":16303:16305   */\n      0x40\n        /* \"#utility.yul\":16288:16306   */\n      dup3\n      add\n        /* \"#utility.yul\":16281:16343   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":16374:16376   */\n      0x60\n        /* \"#utility.yul\":16359:16377   */\n      dup3\n      add\n        /* \"#utility.yul\":16352:16385   */\n      mstore\n        /* \"#utility.yul\":16417:16420   */\n      0x80\n        /* \"#utility.yul\":16402:16421   */\n      add\n      swap1\n        /* \"#utility.yul\":16202:16427   */\n      jump\t// out\n        /* \"#utility.yul\":16432:16776   */\n    tag_366:\n        /* \"#utility.yul\":16634:16636   */\n      0x20\n        /* \"#utility.yul\":16616:16637   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16673:16675   */\n      0x14\n        /* \"#utility.yul\":16653:16671   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16646:16676   */\n      mstore\n      shl(0x62, 0x155cd95c881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":16707:16709   */\n      0x40\n        /* \"#utility.yul\":16692:16710   */\n      dup3\n      add\n        /* \"#utility.yul\":16685:16735   */\n      mstore\n        /* \"#utility.yul\":16767:16769   */\n      0x60\n        /* \"#utility.yul\":16752:16770   */\n      add\n      swap1\n        /* \"#utility.yul\":16606:16776   */\n      jump\t// out\n        /* \"#utility.yul\":16781:17130   */\n    tag_374:\n        /* \"#utility.yul\":16983:16985   */\n      0x20\n        /* \"#utility.yul\":16965:16986   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17022:17024   */\n      0x19\n        /* \"#utility.yul\":17002:17020   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16995:17025   */\n      mstore\n        /* \"#utility.yul\":17061:17088   */\n      0x41646d696e20666565207472616e73666572206661696c656400000000000000\n        /* \"#utility.yul\":17056:17058   */\n      0x40\n        /* \"#utility.yul\":17041:17059   */\n      dup3\n      add\n        /* \"#utility.yul\":17034:17089   */\n      mstore\n        /* \"#utility.yul\":17121:17123   */\n      0x60\n        /* \"#utility.yul\":17106:17124   */\n      add\n      swap1\n        /* \"#utility.yul\":16955:17130   */\n      jump\t// out\n        /* \"#utility.yul\":17135:17488   */\n    tag_263:\n        /* \"#utility.yul\":17337:17339   */\n      0x20\n        /* \"#utility.yul\":17319:17340   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17376:17378   */\n      0x1d\n        /* \"#utility.yul\":17356:17374   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17349:17379   */\n      mstore\n        /* \"#utility.yul\":17415:17446   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":17410:17412   */\n      0x40\n        /* \"#utility.yul\":17395:17413   */\n      dup3\n      add\n        /* \"#utility.yul\":17388:17447   */\n      mstore\n        /* \"#utility.yul\":17479:17481   */\n      0x60\n        /* \"#utility.yul\":17464:17482   */\n      add\n      swap1\n        /* \"#utility.yul\":17309:17488   */\n      jump\t// out\n        /* \"#utility.yul\":17493:17841   */\n    tag_313:\n        /* \"#utility.yul\":17695:17697   */\n      0x20\n        /* \"#utility.yul\":17677:17698   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17734:17736   */\n      0x18\n        /* \"#utility.yul\":17714:17732   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17707:17737   */\n      mstore\n        /* \"#utility.yul\":17773:17799   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000\n        /* \"#utility.yul\":17768:17770   */\n      0x40\n        /* \"#utility.yul\":17753:17771   */\n      dup3\n      add\n        /* \"#utility.yul\":17746:17800   */\n      mstore\n        /* \"#utility.yul\":17832:17834   */\n      0x60\n        /* \"#utility.yul\":17817:17835   */\n      add\n      swap1\n        /* \"#utility.yul\":17667:17841   */\n      jump\t// out\n        /* \"#utility.yul\":17846:18186   */\n    tag_317:\n        /* \"#utility.yul\":18048:18050   */\n      0x20\n        /* \"#utility.yul\":18030:18051   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18087:18089   */\n      0x10\n        /* \"#utility.yul\":18067:18085   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18060:18090   */\n      mstore\n      shl(0x84, 0x044617973206d757374206265203e203)\n        /* \"#utility.yul\":18121:18123   */\n      0x40\n        /* \"#utility.yul\":18106:18124   */\n      dup3\n      add\n        /* \"#utility.yul\":18099:18145   */\n      mstore\n        /* \"#utility.yul\":18177:18179   */\n      0x60\n        /* \"#utility.yul\":18162:18180   */\n      add\n      swap1\n        /* \"#utility.yul\":18020:18186   */\n      jump\t// out\n        /* \"#utility.yul\":18191:18533   */\n    tag_391:\n        /* \"#utility.yul\":18393:18395   */\n      0x20\n        /* \"#utility.yul\":18375:18396   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18432:18434   */\n      0x12\n        /* \"#utility.yul\":18412:18430   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18405:18435   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1bdcda5d1a5bdb9259)\n        /* \"#utility.yul\":18466:18468   */\n      0x40\n        /* \"#utility.yul\":18451:18469   */\n      dup3\n      add\n        /* \"#utility.yul\":18444:18492   */\n      mstore\n        /* \"#utility.yul\":18524:18526   */\n      0x60\n        /* \"#utility.yul\":18509:18527   */\n      add\n      swap1\n        /* \"#utility.yul\":18365:18533   */\n      jump\t// out\n        /* \"#utility.yul\":18538:18715   */\n    tag_82:\n        /* \"#utility.yul\":18684:18709   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":18672:18674   */\n      0x20\n        /* \"#utility.yul\":18657:18675   */\n      add\n      swap1\n        /* \"#utility.yul\":18639:18715   */\n      jump\t// out\n        /* \"#utility.yul\":18720:18968   */\n    tag_141:\n        /* \"#utility.yul\":18894:18919   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":18950:18952   */\n      0x20\n        /* \"#utility.yul\":18935:18953   */\n      dup3\n      add\n        /* \"#utility.yul\":18928:18962   */\n      mstore\n        /* \"#utility.yul\":18882:18884   */\n      0x40\n        /* \"#utility.yul\":18867:18885   */\n      add\n      swap1\n        /* \"#utility.yul\":18849:18968   */\n      jump\t// out\n        /* \"#utility.yul\":18973:19300   */\n    tag_378:\n        /* \"#utility.yul\":19183:19208   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":19239:19241   */\n      0x20\n        /* \"#utility.yul\":19224:19242   */\n      dup4\n      add\n        /* \"#utility.yul\":19217:19251   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":19282:19284   */\n      0x40\n        /* \"#utility.yul\":19267:19285   */\n      dup3\n      add\n        /* \"#utility.yul\":19260:19294   */\n      mstore\n        /* \"#utility.yul\":19171:19173   */\n      0x60\n        /* \"#utility.yul\":19156:19174   */\n      add\n      swap1\n        /* \"#utility.yul\":19138:19300   */\n      jump\t// out\n        /* \"#utility.yul\":19629:19813   */\n    tag_59:\n        /* \"#utility.yul\":19801:19805   */\n      0xff\n        /* \"#utility.yul\":19789:19806   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":19771:19807   */\n      dup2\n      mstore\n        /* \"#utility.yul\":19759:19761   */\n      0x20\n        /* \"#utility.yul\":19744:19762   */\n      add\n      swap1\n        /* \"#utility.yul\":19726:19813   */\n      jump\t// out\n        /* \"#utility.yul\":19818:19946   */\n    tag_212:\n      0x00\n        /* \"#utility.yul\":19889:19890   */\n      dup3\n        /* \"#utility.yul\":19885:19891   */\n      not\n        /* \"#utility.yul\":19882:19883   */\n      dup3\n        /* \"#utility.yul\":19879:19892   */\n      gt\n        /* \"#utility.yul\":19876:19878   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":19895:19913   */\n      tag_746\n      tag_747\n      jump\t// in\n    tag_746:\n      pop\n        /* \"#utility.yul\":19931:19940   */\n      add\n      swap1\n        /* \"#utility.yul\":19866:19946   */\n      jump\t// out\n        /* \"#utility.yul\":19951:20155   */\n    tag_642:\n      0x00\n        /* \"#utility.yul\":20025:20029   */\n      0xff\n        /* \"#utility.yul\":20022:20023   */\n      dup3\n        /* \"#utility.yul\":20018:20030   */\n      and\n        /* \"#utility.yul\":20057:20061   */\n      0xff\n        /* \"#utility.yul\":20054:20055   */\n      dup5\n        /* \"#utility.yul\":20050:20062   */\n      and\n        /* \"#utility.yul\":20092:20095   */\n      dup1\n        /* \"#utility.yul\":20086:20090   */\n      0xff\n        /* \"#utility.yul\":20082:20096   */\n      sub\n        /* \"#utility.yul\":20077:20080   */\n      dup3\n        /* \"#utility.yul\":20074:20097   */\n      gt\n        /* \"#utility.yul\":20071:20073   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":20100:20118   */\n      tag_750\n      tag_747\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":20136:20149   */\n      add\n      swap4\n        /* \"#utility.yul\":19997:20155   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20160:20377   */\n    tag_251:\n      0x00\n        /* \"#utility.yul\":20226:20227   */\n      dup3\n        /* \"#utility.yul\":20216:20218   */\n      tag_752\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":20251:20282   */\n      dup2\n      mstore\n        /* \"#utility.yul\":20305:20309   */\n      0x12\n        /* \"#utility.yul\":20302:20303   */\n      0x04\n        /* \"#utility.yul\":20295:20310   */\n      mstore\n        /* \"#utility.yul\":20333:20337   */\n      0x24\n        /* \"#utility.yul\":20258:20259   */\n      dup2\n        /* \"#utility.yul\":20323:20338   */\n      revert\n        /* \"#utility.yul\":20216:20218   */\n    tag_752:\n      pop\n        /* \"#utility.yul\":20362:20371   */\n      div\n      swap1\n        /* \"#utility.yul\":20206:20377   */\n      jump\t// out\n        /* \"#utility.yul\":20382:20550   */\n    tag_208:\n      0x00\n        /* \"#utility.yul\":20488:20489   */\n      dup2\n        /* \"#utility.yul\":20484:20485   */\n      0x00\n        /* \"#utility.yul\":20480:20486   */\n      not\n        /* \"#utility.yul\":20476:20490   */\n      div\n        /* \"#utility.yul\":20473:20474   */\n      dup4\n        /* \"#utility.yul\":20470:20491   */\n      gt\n        /* \"#utility.yul\":20465:20466   */\n      dup3\n        /* \"#utility.yul\":20458:20467   */\n      iszero\n        /* \"#utility.yul\":20451:20468   */\n      iszero\n        /* \"#utility.yul\":20447:20492   */\n      and\n        /* \"#utility.yul\":20444:20446   */\n      iszero\n      tag_755\n      jumpi\n        /* \"#utility.yul\":20495:20513   */\n      tag_755\n      tag_747\n      jump\t// in\n    tag_755:\n      pop\n        /* \"#utility.yul\":20535:20544   */\n      mul\n      swap1\n        /* \"#utility.yul\":20434:20550   */\n      jump\t// out\n        /* \"#utility.yul\":20555:20680   */\n    tag_349:\n      0x00\n        /* \"#utility.yul\":20623:20624   */\n      dup3\n        /* \"#utility.yul\":20620:20621   */\n      dup3\n        /* \"#utility.yul\":20617:20625   */\n      lt\n        /* \"#utility.yul\":20614:20616   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":20628:20646   */\n      tag_758\n      tag_747\n      jump\t// in\n    tag_758:\n      pop\n        /* \"#utility.yul\":20665:20674   */\n      sub\n      swap1\n        /* \"#utility.yul\":20604:20680   */\n      jump\t// out\n        /* \"#utility.yul\":20685:20820   */\n    tag_190:\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":20745:20762   */\n      dup3\n      eq\n        /* \"#utility.yul\":20742:20744   */\n      iszero\n      tag_761\n      jumpi\n        /* \"#utility.yul\":20765:20783   */\n      tag_761\n      tag_747\n      jump\t// in\n    tag_761:\n      pop\n        /* \"#utility.yul\":20812:20813   */\n      0x01\n        /* \"#utility.yul\":20801:20814   */\n      add\n      swap1\n        /* \"#utility.yul\":20732:20820   */\n      jump\t// out\n        /* \"#utility.yul\":20825:21000   */\n    tag_526:\n      0x00\n        /* \"#utility.yul\":20906:20910   */\n      0xff\n        /* \"#utility.yul\":20899:20904   */\n      dup3\n        /* \"#utility.yul\":20895:20911   */\n      and\n        /* \"#utility.yul\":20935:20939   */\n      0xff\n        /* \"#utility.yul\":20926:20933   */\n      dup2\n        /* \"#utility.yul\":20923:20940   */\n      eq\n        /* \"#utility.yul\":20920:20922   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":20943:20961   */\n      tag_764\n      tag_747\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":20992:20993   */\n      0x01\n        /* \"#utility.yul\":20979:20994   */\n      add\n      swap3\n        /* \"#utility.yul\":20870:21000   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21005:21132   */\n    tag_747:\n        /* \"#utility.yul\":21066:21076   */\n      0x4e487b71\n        /* \"#utility.yul\":21061:21064   */\n      0xe0\n        /* \"#utility.yul\":21057:21077   */\n      shl\n        /* \"#utility.yul\":21054:21055   */\n      0x00\n        /* \"#utility.yul\":21047:21078   */\n      mstore\n        /* \"#utility.yul\":21097:21101   */\n      0x11\n        /* \"#utility.yul\":21094:21095   */\n      0x04\n        /* \"#utility.yul\":21087:21102   */\n      mstore\n        /* \"#utility.yul\":21121:21125   */\n      0x24\n        /* \"#utility.yul\":21118:21119   */\n      0x00\n        /* \"#utility.yul\":21111:21126   */\n      revert\n        /* \"#utility.yul\":21137:21264   */\n    tag_671:\n        /* \"#utility.yul\":21198:21208   */\n      0x4e487b71\n        /* \"#utility.yul\":21193:21196   */\n      0xe0\n        /* \"#utility.yul\":21189:21209   */\n      shl\n        /* \"#utility.yul\":21186:21187   */\n      0x00\n        /* \"#utility.yul\":21179:21210   */\n      mstore\n        /* \"#utility.yul\":21229:21233   */\n      0x41\n        /* \"#utility.yul\":21226:21227   */\n      0x04\n        /* \"#utility.yul\":21219:21234   */\n      mstore\n        /* \"#utility.yul\":21253:21257   */\n      0x24\n        /* \"#utility.yul\":21250:21251   */\n      0x00\n        /* \"#utility.yul\":21243:21258   */\n      revert\n\n    auxdata: 0xa26469706673582212208e440ac19261fd8dd5565f47c079d9d4167ac2de7b821777b81661ac070fdf1264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:326:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0xA0 MSTORE PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xE0 DUP2 SWAP1 MSTORE PUSH2 0x100 MSTORE PUSH3 0x30 SWAP2 PUSH1 0x9 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B62 CODESIZE SUB DUP1 PUSH3 0x3B62 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x61 SWAP2 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP1 DUP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR DUP3 SSTORE SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP3 DUP4 SWAP1 MSTORE PUSH32 0xB6BA906FF52451A7A924E2EAEB8AEA3EBEE7350A8703E5E417EDB25358C7DCC1 SSTORE PUSH32 0x6CA6DCAFC04B6E03616746C3528366F990E332021E35D59275BE746D65CAE0A7 SWAP4 SWAP1 SWAP4 SSTORE PUSH32 0x1727C0104C2870C3003671480695F7DAB262614528B49265008E76FD3D48C5FE SWAP3 SWAP1 SWAP3 SSTORE PUSH32 0x5451FE6494362676DDB91456D9957C85D968E6F82956407C931A14C023049E6A SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 PUSH32 0xFB78EB295A86B096B5F095822BD250A277112BE4103EA4A7608D96ECA726B2C1 SSTORE PUSH2 0x16D SWAP1 MSTORE PUSH1 0x14 PUSH32 0xBBF8ADEA84D189C39869A372AB30AEBA9246EEA044EDC5A37AC100921B2C4E1 SSTORE PUSH3 0x27A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH3 0x221 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1F0 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1B0 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x21F JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x1F0 JUMP JUMPDEST POP JUMPDEST POP PUSH3 0x22F SWAP3 SWAP2 POP PUSH3 0x233 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x273 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x38D8 DUP1 PUSH3 0x28A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98278EFB GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC2D3C677 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE45A57D0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE45A57D0 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF71AE56 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF6E88873 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF7B17D10 EQ PUSH2 0x4AC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xC2D3C677 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xC5B89C0A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD85C8966 EQ PUSH2 0x453 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAA7ED462 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xBD297178 EQ PUSH2 0x3FF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x98278EFB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x9D747BAD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x797C7F5F GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x797C7F5F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x875BB4E2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x656596A5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x6C8C2156 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x314 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x4850D2A2 EQ PUSH2 0x2BB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5AD3935 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E43EB27 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x21923BDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x28FE7031 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2F7D JUMP JUMPDEST PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x379A JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3162 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x376D JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E41 JUMP JUMPDEST PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x173D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEF JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP3 SWAP2 SWAP1 PUSH2 0x3776 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x267B JUMP JUMPDEST PUSH2 0x446 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x253 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x27D3 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x30CF JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 SWAP2 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP2 LT PUSH2 0x546 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x558 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x56A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x60 SWAP2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x674 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x753 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCF0 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH3 0x15180 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x1E EQ ISZERO PUSH2 0x881 JUMPI POP PUSH2 0xBB8 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x3C EQ ISZERO PUSH2 0x8C4 JUMPI POP PUSH2 0x1770 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x5A EQ ISZERO PUSH2 0x907 JUMPI POP PUSH2 0x2328 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x927 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x78 EQ ISZERO PUSH2 0x94A JUMPI POP PUSH2 0x2EE0 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x96A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0xB4 EQ ISZERO PUSH2 0x98D JUMPI POP PUSH2 0x4650 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0x16D EQ ISZERO PUSH2 0x9D1 JUMPI POP PUSH2 0x8E94 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP5 DUP9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xA3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xA94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAE5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xBCA SWAP1 DUP14 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3515 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xC86 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SLOAD DUP11 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP PUSH2 0xD02 JUMP JUMPDEST DUP1 PUSH2 0xCFA DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D6 JUMP JUMPDEST POP DUP1 PUSH2 0xD20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3401 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xD87 SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3543 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x4 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD DUP5 AND DUP11 OR SWAP1 SSTORE SWAP1 DUP8 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE SWAP8 DUP9 MSTORE DUP8 DUP6 ADD DUP8 DUP2 MSTORE TIMESTAMP SWAP5 DUP10 ADD SWAP5 DUP6 MSTORE DUP2 SLOAD DUP1 DUP6 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 SWAP1 SWAP7 KECCAK256 SWAP7 MLOAD SWAP6 SWAP1 SWAP5 MUL SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR DUP5 SSTORE SWAP1 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x9 DUP3 PUSH1 0x5 PUSH2 0x2CE6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1060 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x10F4 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1460 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1119 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH3 0xD2F00 PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35B7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x117A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP2 POP PUSH1 0x64 PUSH2 0x119C DUP4 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11B4 DUP3 DUP5 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11E9 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1279 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x12CE SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3644 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1386 SWAP1 PUSH20 0x9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3672 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1442 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP3 DUP9 SWAP2 PUSH2 0x3784 JUMP JUMPDEST DUP1 PUSH2 0x146A DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x14A3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F3 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x153B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3741 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1574 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1719 JUMPI DUP12 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1614 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1648 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH3 0x15180 PUSH2 0x1683 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x16A7 JUMPI POP DUP2 TIMESTAMP LT JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x64 DUP6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP7 DUP9 DUP7 DUP9 SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP POP POP POP POP POP POP POP POP PUSH2 0x1732 JUMP JUMPDEST DUP1 PUSH2 0x1711 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15EA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x358E JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x178F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3601 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3472 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1811 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1846 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x18C8 SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x1A70 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x222B JUMPI PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x2007 JUMPI DUP4 ISZERO PUSH2 0x1E0F JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x1A94 DUP11 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1A9E SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1AAF DUP12 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC5 DUP2 DUP4 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AF5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B45 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1B95 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE7 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1C03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1C35 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C87 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1CCB SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1CDB SWAP1 POP DUP2 DUP4 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1D06 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D36 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1E06 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1DF4 JUMPI DUP4 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DE9 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E06 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x1DFE DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D55 JUMP JUMPDEST POP POP POP POP PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1E35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1E54 SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1E5E SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1E93 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE3 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1F33 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1FA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FCC SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FFC SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x202D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x204C SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x208B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x212B SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217D SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x2199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21C4 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21F4 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2223 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A55 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2313 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x233C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2366 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x238F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E9 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x23FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x243C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x246E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x249A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24E1 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2395 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x25A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1E DUP6 EQ ISZERO PUSH2 0x25ED JUMPI POP PUSH2 0xBB8 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x3C EQ ISZERO PUSH2 0x25FF JUMPI POP PUSH2 0x1770 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x5A EQ ISZERO PUSH2 0x2611 JUMPI POP PUSH2 0x2328 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x78 EQ ISZERO PUSH2 0x2623 JUMPI POP PUSH2 0x2EE0 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0xB4 EQ ISZERO PUSH2 0x2635 JUMPI POP PUSH2 0x4650 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH2 0x16D EQ ISZERO PUSH2 0x9D1 JUMPI POP PUSH2 0x8E94 JUMPDEST DUP1 DUP6 PUSH2 0x2650 DUP5 DUP10 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x265A SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2664 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2670 DUP5 DUP8 PUSH2 0x37A8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x270A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34A9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x272A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x275D SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27AF SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x27CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3443 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x27E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2996 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2830 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2874 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2921 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x297F JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x294F JUMPI DUP3 MLOAD PUSH2 0x294C SWAP1 DUP8 PUSH2 0x37A8 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2977 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2906 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x298E SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2803 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x29E6 PUSH2 0x2D79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x29DE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2CC4 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2ADE JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2A71 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2B1E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2CAD JUMPI DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2C7D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2C7B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 DUP6 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x2B9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2BC5 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2BCF SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE DUP11 DUP11 PUSH2 0x2C3B DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x2C5B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2C73 SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B40 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2CA5 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B03 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2CBC SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A00 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0x2D69 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2D3A JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2CFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D67 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2D3A JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2D75 SWAP3 SWAP2 POP PUSH2 0x2DCB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DCC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2E11 DUP3 PUSH2 0x2DE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2E33 DUP4 PUSH2 0x2DE0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E60 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E83 JUMPI PUSH2 0x2E83 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0xA0 DUP2 ADD DUP7 LT ISZERO PUSH2 0x2E97 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP4 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2EB2 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E99 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2E11 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F03 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F34 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F56 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x309C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3077 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x30B0 DUP2 DUP8 PUSH2 0x2F43 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x30C5 DUP2 DUP6 PUSH2 0x2F43 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3155 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30EC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x2E11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F43 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206E6F742072656769737465726564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD081C9959DA5CDD195C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x44697265637420726566657272616C207472616E73666572206661696C656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C203120726577617264207472616E73666572206661696C65640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C20726577617264207472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x616E207374616B65 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207374616B696E67206475726174696F6E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E67206475726174696F6E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x30B7103932B3B4B9BA32B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x14DD185AD9481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x65722031302064617973 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x155CD95C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E20666565207472616E73666572206661696C656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x44617973206D757374206265203E203 PUSH1 0x84 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1BDCDA5D1A5BDB9259 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x37BB JUMPI PUSH2 0x37BB PUSH2 0x3876 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x37DD JUMPI PUSH2 0x37DD PUSH2 0x3876 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3800 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x381F JUMPI PUSH2 0x381F PUSH2 0x3876 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3836 JUMPI PUSH2 0x3836 PUSH2 0x3876 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x384F JUMPI PUSH2 0x384F PUSH2 0x3876 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x386D JUMPI PUSH2 0x386D PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DIFFICULTY EXP 0xC1 SWAP3 PUSH2 0xFD8D 0xD5 JUMP 0x5F SELFBALANCE 0xC0 PUSH26 0xD9D4167AC2DE7B821777B81661AC070FDF1264736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "1848:46:0:-:0;388:19175;1848:46;1880:1;388:19175;1848:46;;;1883:1;1848:46;;1886:1;1848:46;;1889:1;1848:46;;;;;;;;;;388:19175;1848:46;:::i;:::-;;517:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;559:5;:18;;567:10;-1:-1:-1;;;;;;559:18:0;;;;;;;587:9;:30;;;;;-1:-1:-1;;;;;587:30:0;;;;;;633:5;;;;627:12;;:5;:12;;;;;;;:23;;;;:30;;-1:-1:-1;;627:30:0;-1:-1:-1;627:30:0;;;;;;668:10;:14;;;;;:18;696:14;:18;;;;725:14;:18;;;;753:15;:19;;;;800:1;782:15;:19;822:3;811:15;;829:2;811:15;:20;388:19175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:19175:0;;;-1:-1:-1;388:19175:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:1;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;:::-;388:19175:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21266:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "397:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:848:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "823:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "780:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "789:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "776:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "801:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:33:1"
															},
															"nodeType": "YulIf",
															"src": "769:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "887:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "896:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "904:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "889:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "889:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "889:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "859:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "870:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "855:20:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:42:1"
															},
															"nodeType": "YulIf",
															"src": "841:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "942:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "926:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "954:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "984:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:16:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "958:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1063:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1065:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1065:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1065:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1006:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1018:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1003:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1003:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1042:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1039:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1000:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:62:1"
															},
															"nodeType": "YulIf",
															"src": "997:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1101:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1105:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1125:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1136:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1129:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:20:1",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1162:9:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1216:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1225:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1233:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1218:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1218:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1218:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1201:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1186:19:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1207:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:32:1"
															},
															"nodeType": "YulIf",
															"src": "1180:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1251:15:1",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1260:6:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1255:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1322:254:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1362:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1349:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1349:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1418:26:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "1427:6:1"
																							},
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "1435:6:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1420:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:22:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1420:22:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "1392:5:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "1403:5:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1410:4:1",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "1399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1399:16:1"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "1389:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1389:27:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:35:1"
																		},
																		"nodeType": "YulIf",
																		"src": "1379:2:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1464:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1469:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:18:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1488:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1498:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1492:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1515:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1526:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1531:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1522:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1522:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1515:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1547:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1558:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1563:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1554:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1554:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1547:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1286:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:4:1",
																		"type": "",
																		"value": "0x05"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:11:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1295:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1297:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1306:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1309:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1302:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1297:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1279:3:1",
																"statements": []
															},
															"src": "1275:301:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1585:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1595:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint8_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													}
												],
												"src": "668:939:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1736:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1745:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1753:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1738:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:1"
															},
															"nodeType": "YulIf",
															"src": "1700:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1784:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1775:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1853:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1862:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1870:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1855:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1843:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1836:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1836:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1829:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:40:1"
															},
															"nodeType": "YulIf",
															"src": "1809:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1888:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1898:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1656:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1679:6:1",
														"type": ""
													}
												],
												"src": "1612:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2039:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2047:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:1"
															},
															"nodeType": "YulIf",
															"src": "1994:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2065:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2088:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2075:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1950:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1961:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:1",
														"type": ""
													}
												],
												"src": "1914:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2236:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2245:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2253:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2238:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2238:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2211:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:32:1"
															},
															"nodeType": "YulIf",
															"src": "2200:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2287:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2281:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2156:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2167:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2179:6:1",
														"type": ""
													}
												],
												"src": "2109:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2441:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2450:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2458:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2443:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2443:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:32:1"
															},
															"nodeType": "YulIf",
															"src": "2405:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2476:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2518:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2556:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2528:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2353:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2364:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2376:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2384:6:1",
														"type": ""
													}
												],
												"src": "2308:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:376:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2668:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2662:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2652:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2690:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2711:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2721:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2715:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2734:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2745:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2750:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2780:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2787:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2766:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2799:12:1",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "2808:3:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2803:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2869:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2890:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2901:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2895:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2883:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2883:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2883:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2922:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2933:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2938:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2929:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2929:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2922:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2954:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2968:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2976:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2964:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2964:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2954:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2831:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2828:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2842:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2844:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2853:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2856:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2849:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2849:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2844:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2824:3:1",
																"statements": []
															},
															"src": "2820:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2998:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3005:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2998:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2615:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2622:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2630:3:1",
														"type": ""
													}
												],
												"src": "2571:443:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3130:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3172:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3203:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3208:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3199:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3199:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3212:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3195:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3183:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3089:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3100:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3111:4:1",
														"type": ""
													}
												],
												"src": "3019:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3394:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3394:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3429:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3452:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3433:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3474:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3497:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3485:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3467:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3541:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3537:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3589:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3562:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3337:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3348:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3356:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3375:4:1",
														"type": ""
													}
												],
												"src": "3227:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3736:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3746:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3788:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3819:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3824:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3815:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3815:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3828:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3852:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3868:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3697:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3708:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3716:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3727:4:1",
														"type": ""
													}
												],
												"src": "3607:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4043:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4053:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4053:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4095:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4110:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4126:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4131:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4122:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4122:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4135:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4118:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4118:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4175:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4213:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4218:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4191:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3996:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4007:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4015:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4023:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4034:4:1",
														"type": ""
													}
												],
												"src": "3886:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4415:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4468:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4483:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4499:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4504:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4495:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4495:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4508:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4491:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4491:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4548:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "4648:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4641:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4641:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4634:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4360:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4371:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4379:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4387:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4395:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4406:4:1",
														"type": ""
													}
												],
												"src": "4236:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4959:424:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4969:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4969:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5012:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5027:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5043:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5048:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5039:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5039:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5052:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5035:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5087:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5092:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5065:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5119:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5130:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5115:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5135:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5173:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5158:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5151:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5216:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5201:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5222:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5194:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5260:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5266:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5238:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5293:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5304:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5282:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5348:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value7",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5361:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5361:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5354:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4872:9:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4883:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4891:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4899:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4907:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4915:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4931:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4950:4:1",
														"type": ""
													}
												],
												"src": "4668:715:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5695:745:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5705:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5723:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5709:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5746:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5776:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5787:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5780:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5802:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5822:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5816:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5806:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5845:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5869:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5869:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5904:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5914:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5908:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5927:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5945:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5953:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5931:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5965:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5974:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6036:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6057:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6072:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6066:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6066:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6089:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6094:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6085:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6085:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6098:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "6081:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6081:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6062:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6062:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6050:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6050:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6050:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6115:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6126:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6131:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6122:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6122:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6115:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6147:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6161:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6169:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6157:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6157:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6147:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5998:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6001:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5995:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6009:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6011:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6020:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6023:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6016:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6016:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6011:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5991:3:1",
																"statements": []
															},
															"src": "5987:195:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6202:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6213:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6222:3:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6227:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6191:47:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6247:61:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6296:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6304:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6261:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6261:47:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "6251:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "6348:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6356:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6376:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6419:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6384:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:50:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6376:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5648:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5659:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5667:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5686:4:1",
														"type": ""
													}
												],
												"src": "5388:1052:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6660:1036:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6670:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6680:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6674:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6691:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6709:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6720:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6695:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6750:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6732:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6732:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6762:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6773:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6766:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6788:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6808:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6792:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6831:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6839:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6824:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6855:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6865:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6859:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6876:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6887:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6898:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6910:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6928:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6936:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6924:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6914:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6948:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6957:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6952:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7019:651:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7033:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7049:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7043:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "7037:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7069:29:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7087:3:1",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7092:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7083:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7083:11:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7096:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7079:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7079:19:1"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "7073:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7118:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7133:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7127:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7127:9:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7138:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7123:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7123:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7111:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7166:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7171:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7162:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7162:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7186:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7190:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7182:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7182:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7176:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7176:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7155:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7155:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7219:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "7224:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7215:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7215:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7239:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "7243:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7235:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7235:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7229:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7229:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7208:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7208:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7208:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7261:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7271:4:1",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "7265:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7299:3:1"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7304:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7295:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7295:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7319:2:1"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "7323:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7315:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7315:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7309:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7309:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7288:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7288:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7341:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7351:4:1",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "7345:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7379:3:1"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "7384:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7375:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7375:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "7403:2:1"
																										},
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "7407:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7399:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7399:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7393:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7393:18:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7413:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7389:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7389:27:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7368:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7368:49:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7430:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7440:4:1",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "7434:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7468:3:1"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "7473:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7464:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7464:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7488:2:1"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "7492:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7484:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7484:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7478:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7478:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7457:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7457:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7510:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7520:4:1",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "7514:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7548:3:1"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "7553:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7544:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7544:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "7572:2:1"
																										},
																										{
																											"name": "_8",
																											"nodeType": "YulIdentifier",
																											"src": "7576:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7568:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7568:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7562:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7562:18:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7582:4:1",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7558:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7537:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7537:51:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:51:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7601:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7612:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7617:4:1",
																					"type": "",
																					"value": "0xe0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7608:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7608:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7601:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7635:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7649:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7657:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7645:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7645:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6981:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6984:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6978:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6978:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6992:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6994:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7003:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7006:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6999:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6999:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6994:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6974:3:1",
																"statements": []
															},
															"src": "6970:700:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7679:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7687:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6629:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6640:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6651:4:1",
														"type": ""
													}
												],
												"src": "6445:1251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7862:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7892:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7900:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:62:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7892:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7821:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7843:4:1",
														"type": ""
													}
												],
												"src": "7701:267:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8068:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8120:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8138:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8138:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8131:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8131:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8037:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8059:4:1",
														"type": ""
													}
												],
												"src": "7973:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8279:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8331:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8346:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8362:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8367:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8358:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8358:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8371:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8354:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8354:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8324:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$29__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8248:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8270:4:1",
														"type": ""
													}
												],
												"src": "8165:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8560:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8622:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8627:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8600:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8661:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8666:25:1",
																		"type": "",
																		"value": "Referrer not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8639:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8701:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8713:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8724:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8709:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8709:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8701:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8537:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8551:4:1",
														"type": ""
													}
												],
												"src": "8386:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8979:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9002:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9013:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8998:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9018:16:1",
																		"type": "",
																		"value": "Not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8991:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9044:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9067:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9044:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8889:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8903:4:1",
														"type": ""
													}
												],
												"src": "8738:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9255:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9265:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9356:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9341:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9361:23:1",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9334:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9334:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9394:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9417:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9394:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9232:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9246:4:1",
														"type": ""
													}
												],
												"src": "9081:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9605:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9615:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9615:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9667:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9652:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9672:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9645:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9695:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9706:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9691:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9711:33:1",
																		"type": "",
																		"value": "Direct referral transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9684:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9684:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9754:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9766:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9777:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9754:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9582:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9596:4:1",
														"type": ""
													}
												],
												"src": "9431:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9965:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9982:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9993:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10027:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10012:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10005:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10055:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10066:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10071:32:1",
																		"type": "",
																		"value": "Level 1 reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10044:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10113:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10136:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9942:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9956:4:1",
														"type": ""
													}
												],
												"src": "9791:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10324:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10334:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10334:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10371:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10364:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10364:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10414:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10425:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10410:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10430:34:1",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10403:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10403:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10474:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10482:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10474:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10301:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10315:4:1",
														"type": ""
													}
												],
												"src": "10150:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10685:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10702:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10713:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10747:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10732:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10752:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10786:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10791:31:1",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10764:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10764:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10832:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10844:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10855:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10840:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10840:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10832:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10662:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10676:4:1",
														"type": ""
													}
												],
												"src": "10511:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11043:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11071:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11105:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11090:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11110:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11083:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11149:20:1",
																		"type": "",
																		"value": "Already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11122:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11122:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11179:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11191:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11187:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11187:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11179:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11020:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11034:4:1",
														"type": ""
													}
												],
												"src": "10869:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11390:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11407:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11400:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11400:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11452:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11437:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11430:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11430:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11491:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11496:30:1",
																		"type": "",
																		"value": "Level reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11469:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11469:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11536:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11548:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11559:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11544:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11367:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11381:4:1",
														"type": ""
													}
												],
												"src": "11216:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11764:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11775:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11757:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11757:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11814:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11787:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11853:34:1",
																		"type": "",
																		"value": "Referrer must stake before you c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11908:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11924:10:1",
																		"type": "",
																		"value": "an stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11897:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11944:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11967:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11952:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11944:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11724:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11738:4:1",
														"type": ""
													}
												],
												"src": "11573:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12156:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12166:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12207:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12218:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12203:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12223:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12196:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12196:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12246:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12257:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12242:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12262:25:1",
																		"type": "",
																		"value": "Only owner can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12235:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12297:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12309:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12320:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12305:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12297:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12133:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12147:4:1",
														"type": ""
													}
												],
												"src": "11982:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12508:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12518:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12518:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12555:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12575:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12548:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12548:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12609:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12594:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12614:30:1",
																		"type": "",
																		"value": "Unsupported staking duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12587:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12587:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12654:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12666:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12677:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12662:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12499:4:1",
														"type": ""
													}
												],
												"src": "12334:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12865:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12882:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12875:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12875:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12916:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12927:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12912:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12932:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12905:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12905:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12951:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12971:34:1",
																		"type": "",
																		"value": "Stake not found or already claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12944:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12944:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13026:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13037:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13022:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13022:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13042:4:1",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13015:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13015:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13056:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13079:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13064:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13056:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12842:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12856:4:1",
														"type": ""
													}
												],
												"src": "12691:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13268:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13278:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13278:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13330:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13315:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13335:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13308:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13308:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13369:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13354:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13374:23:1",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13347:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13419:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13430:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13407:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13245:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13259:4:1",
														"type": ""
													}
												],
												"src": "13094:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13618:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13628:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13665:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13685:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13658:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13704:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13724:26:1",
																		"type": "",
																		"value": "Invalid staking duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13697:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13697:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13760:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13772:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13783:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13768:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13760:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13609:4:1",
														"type": ""
													}
												],
												"src": "13444:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13971:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13988:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13999:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13981:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14033:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14018:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14038:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14011:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14011:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14072:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14057:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14077:27:1",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14050:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14050:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14114:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14126:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14137:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14122:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14114:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13948:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13962:4:1",
														"type": ""
													}
												],
												"src": "13797:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14325:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14342:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14353:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14335:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14335:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14387:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14372:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14392:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14365:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14365:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14426:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14411:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14431:34:1",
																		"type": "",
																		"value": "Staking period not yet completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14404:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14404:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14475:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14487:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14498:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14483:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14475:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14302:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14316:4:1",
														"type": ""
													}
												],
												"src": "14151:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14686:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14703:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14696:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14696:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14733:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14753:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14726:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14726:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14776:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14787:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14772:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14792:22:1",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14765:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14765:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14824:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14836:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14847:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14832:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14832:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14824:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14663:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14677:4:1",
														"type": ""
													}
												],
												"src": "14512:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15035:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15052:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15063:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15045:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15045:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15086:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15097:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15082:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15102:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15075:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15075:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15075:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15136:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15121:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15141:34:1",
																		"type": "",
																		"value": "Referrer must stake before you c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15114:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15114:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15196:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15207:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15192:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15212:13:1",
																		"type": "",
																		"value": "an register"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15185:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15185:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15235:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15247:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15258:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15243:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15243:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15235:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15012:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15026:4:1",
														"type": ""
													}
												],
												"src": "14861:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15447:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15457:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15457:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15494:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15514:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15487:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15537:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15548:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15533:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15553:17:1",
																		"type": "",
																		"value": "Stake not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15526:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15580:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15592:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15603:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15588:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15580:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15424:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15438:4:1",
														"type": ""
													}
												],
												"src": "15273:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15791:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15808:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15819:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15801:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15801:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15838:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15858:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15831:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15831:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15881:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15892:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15877:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15897:34:1",
																		"type": "",
																		"value": "Emergency claim allowed only aft"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15870:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15870:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15952:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15963:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15948:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15948:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15968:12:1",
																		"type": "",
																		"value": "er 10 days"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15941:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15941:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15990:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16013:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15998:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15990:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15768:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15782:4:1",
														"type": ""
													}
												],
												"src": "15617:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16202:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16230:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16212:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16212:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16249:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16269:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16242:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16242:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16292:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16303:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16288:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16308:34:1",
																		"type": "",
																		"value": "Stake amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16281:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16281:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16374:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16359:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16379:5:1",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16352:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16352:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16394:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16417:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16402:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16394:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16179:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16193:4:1",
														"type": ""
													}
												],
												"src": "16028:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16606:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16616:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16616:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16653:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16673:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16646:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16646:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16707:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16692:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16712:22:1",
																		"type": "",
																		"value": "User transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16685:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16685:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16744:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16756:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16767:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16752:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16744:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16583:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16597:4:1",
														"type": ""
													}
												],
												"src": "16432:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16955:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16983:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16965:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16965:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17002:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17022:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16995:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16995:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17056:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17041:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17061:27:1",
																		"type": "",
																		"value": "Admin fee transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17034:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17034:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17098:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17110:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17121:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17106:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17098:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16932:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16946:4:1",
														"type": ""
													}
												],
												"src": "16781:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17309:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17326:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17337:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17319:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17319:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17360:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17371:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17356:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17356:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17376:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17349:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17349:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17399:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17410:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17395:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17415:31:1",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17388:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17388:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17468:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17479:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17464:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17464:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17456:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17286:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17300:4:1",
														"type": ""
													}
												],
												"src": "17135:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17667:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17684:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17695:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17677:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17677:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17729:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17714:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17734:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17707:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17707:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17768:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17753:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17773:26:1",
																		"type": "",
																		"value": "Only owner can call this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17746:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17746:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17809:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17832:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17644:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17658:4:1",
														"type": ""
													}
												],
												"src": "17493:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18020:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18030:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18030:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18082:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18067:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18087:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18060:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18060:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18121:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18106:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18126:18:1",
																		"type": "",
																		"value": "Days must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18099:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18099:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18154:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18166:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18177:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18162:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18154:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17997:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18011:4:1",
														"type": ""
													}
												],
												"src": "17846:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18365:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18382:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18375:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18375:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18416:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18427:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18412:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18432:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18405:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18405:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18455:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18466:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18451:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18471:20:1",
																		"type": "",
																		"value": "Invalid positionId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18444:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18444:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18501:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18509:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18501:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18342:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18356:4:1",
														"type": ""
													}
												],
												"src": "18191:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18639:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18649:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18661:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18672:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18657:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18649:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18691:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18702:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18684:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18684:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18608:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18619:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18630:4:1",
														"type": ""
													}
												],
												"src": "18538:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18849:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18859:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18871:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18882:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18867:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18859:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18901:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18912:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18894:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18894:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18939:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18950:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18935:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18955:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18928:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18928:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18810:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18821:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18829:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18840:4:1",
														"type": ""
													}
												],
												"src": "18720:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19138:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19148:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19171:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19156:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19148:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19190:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19201:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19183:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19228:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19239:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19224:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19244:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19217:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19217:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19267:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19287:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19260:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19091:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19102:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19110:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19118:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19129:4:1",
														"type": ""
													}
												],
												"src": "18973:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19462:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19472:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19495:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19480:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19472:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19514:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19525:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19507:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19507:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19563:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19548:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19568:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19541:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19541:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19595:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19606:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19591:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19611:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19584:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19584:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19415:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19426:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19434:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19442:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19453:4:1",
														"type": ""
													}
												],
												"src": "19305:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19726:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19736:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19748:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19759:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19744:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19744:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19736:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19778:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19793:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19801:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19789:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19771:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19771:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19695:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19706:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19717:4:1",
														"type": ""
													}
												],
												"src": "19629:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19866:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19893:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19895:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19895:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19895:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19882:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19889:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19885:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19879:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19879:13:1"
															},
															"nodeType": "YulIf",
															"src": "19876:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19924:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19935:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19938:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19931:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19924:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19849:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19852:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19858:3:1",
														"type": ""
													}
												],
												"src": "19818:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19997:158:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20007:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20022:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20025:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20018:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20018:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "20011:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20039:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20054:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20057:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20050:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "20043:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20098:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20100:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20100:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20100:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "20077:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20086:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "20092:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20082:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20074:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20074:23:1"
															},
															"nodeType": "YulIf",
															"src": "20071:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20129:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "20140:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "20145:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20136:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20129:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19980:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19983:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19989:3:1",
														"type": ""
													}
												],
												"src": "19951:204:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20206:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20237:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "20258:1:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20265:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20270:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "20261:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20261:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20251:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20251:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20251:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20302:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20305:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20295:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20295:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20295:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "20330:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20333:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20323:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20323:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20323:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20226:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20219:9:1"
															},
															"nodeType": "YulIf",
															"src": "20216:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20357:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20366:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20369:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20362:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20357:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20191:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20194:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20200:1:1",
														"type": ""
													}
												],
												"src": "20160:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20434:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20493:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20495:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20495:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20495:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20465:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20458:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20458:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20451:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20451:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20473:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20484:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "20480:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20480:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20488:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20476:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20476:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20470:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20470:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20447:45:1"
															},
															"nodeType": "YulIf",
															"src": "20444:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20524:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20539:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20542:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20535:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20524:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20413:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20416:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20422:7:1",
														"type": ""
													}
												],
												"src": "20382:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20604:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20626:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20628:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20628:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20628:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20620:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20623:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20617:8:1"
															},
															"nodeType": "YulIf",
															"src": "20614:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20657:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20669:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20672:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20665:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20657:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20586:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20589:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20595:4:1",
														"type": ""
													}
												],
												"src": "20555:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20732:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20763:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20765:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20765:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20765:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20748:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20759:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20755:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20745:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20745:17:1"
															},
															"nodeType": "YulIf",
															"src": "20742:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20794:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20805:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20812:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20801:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20794:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20714:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20724:3:1",
														"type": ""
													}
												],
												"src": "20685:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20870:130:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20880:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20899:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20906:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20895:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20895:16:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "20884:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20941:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20943:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20943:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20943:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "20926:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20935:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20923:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20923:17:1"
															},
															"nodeType": "YulIf",
															"src": "20920:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20972:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "20983:7:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20992:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20979:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20972:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20852:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20862:3:1",
														"type": ""
													}
												],
												"src": "20825:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21037:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21054:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21061:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21066:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21057:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21047:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21047:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21094:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21097:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21087:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21087:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21121:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21111:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21111:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21005:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21169:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21186:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21193:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21198:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21189:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21179:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21179:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21226:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21229:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21219:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21219:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21250:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21253:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21243:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21243:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "21137:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_uint8_$5_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value0, value0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := headStart\n        if gt(add(headStart, 160), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, 0x05) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n            mstore(dst, value)\n            let _1 := 0x20\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value1, pos)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value2, tail_2)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := sub(shl(160, 1), 1)\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _5 := 0x60\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            let _6 := 0x80\n            mstore(add(pos, _6), and(mload(add(_3, _6)), _4))\n            let _7 := 0xa0\n            mstore(add(pos, _7), mload(add(_3, _7)))\n            let _8 := 0xc0\n            mstore(add(pos, _8), and(mload(add(_3, _8)), 0xff))\n            pos := add(pos, 0xe0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$29__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Referrer not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Cannot refer yourself\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Direct referral transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Level 1 reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Level reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Referrer must stake before you c\")\n        mstore(add(headStart, 96), \"an stake\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only owner can withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Unsupported staking duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Stake not found or already claim\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid staking duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Staking period not yet completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDT transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Referrer must stake before you c\")\n        mstore(add(headStart, 96), \"an register\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Stake not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Emergency claim allowed only aft\")\n        mstore(add(headStart, 96), \"er 10 days\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"User transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Admin fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient contract balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Only owner can call this\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Days must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid positionId\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98278EFB GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC2D3C677 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE45A57D0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE45A57D0 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xEF71AE56 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF6E88873 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xF7B17D10 EQ PUSH2 0x4AC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xC2D3C677 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xC5B89C0A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD85C8966 EQ PUSH2 0x453 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAA7ED462 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xBD297178 EQ PUSH2 0x3FF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x98278EFB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9BE572F6 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x9D747BAD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xA2BDEDF4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x797C7F5F GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x797C7F5F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x875BB4E2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x369 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5BD4E16A EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x656596A5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x6C8C2156 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x314 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x4850D2A2 EQ PUSH2 0x2BB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5AD3935 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E43EB27 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x21923BDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x28FE7031 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2F7D JUMP JUMPDEST PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x379A JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3162 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x376D JUMP JUMPDEST PUSH2 0x293 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E41 JUMP JUMPDEST PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x173D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEF JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP3 SWAP2 SWAP1 PUSH2 0x3776 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x267B JUMP JUMPDEST PUSH2 0x446 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x253 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x27D3 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x30CF JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 SWAP2 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP2 LT PUSH2 0x546 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x558 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x56A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x60 SWAP2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x62D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x674 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x753 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCF0 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH3 0x15180 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x1E EQ ISZERO PUSH2 0x881 JUMPI POP PUSH2 0xBB8 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x3C EQ ISZERO PUSH2 0x8C4 JUMPI POP PUSH2 0x1770 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x5A EQ ISZERO PUSH2 0x907 JUMPI POP PUSH2 0x2328 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x927 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x78 EQ ISZERO PUSH2 0x94A JUMPI POP PUSH2 0x2EE0 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x96A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0xB4 EQ ISZERO PUSH2 0x98D JUMPI POP PUSH2 0x4650 PUSH2 0x9E9 JUMP JUMPDEST DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0x16D EQ ISZERO PUSH2 0x9D1 JUMPI POP PUSH2 0x8E94 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD DUP5 DUP9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xA3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xA94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAE5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1 DUP8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xBCA SWAP1 DUP14 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3515 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xC86 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SLOAD DUP11 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP PUSH2 0xD02 JUMP JUMPDEST DUP1 PUSH2 0xCFA DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D6 JUMP JUMPDEST POP DUP1 PUSH2 0xD20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3401 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xD87 SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3543 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x4 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 DUP4 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD DUP5 AND DUP11 OR SWAP1 SSTORE SWAP1 DUP8 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE SWAP8 DUP9 MSTORE DUP8 DUP6 ADD DUP8 DUP2 MSTORE TIMESTAMP SWAP5 DUP10 ADD SWAP5 DUP6 MSTORE DUP2 SLOAD DUP1 DUP6 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 SWAP1 SWAP7 KECCAK256 SWAP7 MLOAD SWAP6 SWAP1 SWAP5 MUL SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR DUP5 SSTORE SWAP1 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3717 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x9 DUP3 PUSH1 0x5 PUSH2 0x2CE6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1060 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP6 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x10F4 JUMPI POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1460 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1119 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD PUSH3 0xD2F00 PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x35B7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x117A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x6 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP2 POP PUSH1 0x64 PUSH2 0x119C DUP4 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x11A6 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11B4 DUP3 DUP5 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11E9 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1 DUP7 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1279 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x12CE SWAP1 DUP13 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3644 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1386 SWAP1 PUSH20 0x9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3672 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E DUP10 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1442 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP3 DUP9 SWAP2 PUSH2 0x3784 JUMP JUMPDEST DUP1 PUSH2 0x146A DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x14A3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F3 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x153B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3741 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1574 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1719 JUMPI DUP12 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1614 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1648 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH3 0x15180 PUSH2 0x1683 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x16A7 JUMPI POP DUP2 TIMESTAMP LT JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x64 DUP6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP7 DUP9 DUP7 DUP9 SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP SWAP16 POP POP POP POP POP POP POP POP POP PUSH2 0x1732 JUMP JUMPDEST DUP1 PUSH2 0x1711 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15EA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x358E JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x31B7 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x178F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3601 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3472 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1811 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1846 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x18C8 SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x1A70 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x222B JUMPI PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x2007 JUMPI DUP4 ISZERO PUSH2 0x1E0F JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x1A94 DUP11 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1A9E SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1AAF DUP12 PUSH1 0x5 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC5 DUP2 DUP4 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AF5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B45 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1B95 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE7 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1C03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1C35 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C87 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1CCB SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1CDB SWAP1 POP DUP2 DUP4 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1D06 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D36 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1E06 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1DF4 JUMPI DUP4 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DE9 SWAP2 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E06 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x1DFE DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D55 JUMP JUMPDEST POP POP POP POP PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x1E35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1E54 SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x1E5E SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1E93 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE3 SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1F33 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1FA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FCC SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FFC SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x9 DUP4 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x202D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x204C SWAP2 PUSH1 0x1F AND PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x208B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x2F0A JUMP JUMPDEST LT ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x212B SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217D SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x2199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21C4 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21F4 SWAP1 DUP5 SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2223 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A55 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2313 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x233C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2366 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x238F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E9 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x23FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x243C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x246E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x249A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24E1 DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2395 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x25A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1E DUP6 EQ ISZERO PUSH2 0x25ED JUMPI POP PUSH2 0xBB8 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x3C EQ ISZERO PUSH2 0x25FF JUMPI POP PUSH2 0x1770 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x5A EQ ISZERO PUSH2 0x2611 JUMPI POP PUSH2 0x2328 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0x78 EQ ISZERO PUSH2 0x2623 JUMPI POP PUSH2 0x2EE0 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH1 0xB4 EQ ISZERO PUSH2 0x2635 JUMPI POP PUSH2 0x4650 PUSH2 0x2644 JUMP JUMPDEST DUP5 PUSH2 0x16D EQ ISZERO PUSH2 0x9D1 JUMPI POP PUSH2 0x8E94 JUMPDEST DUP1 DUP6 PUSH2 0x2650 DUP5 DUP10 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x265A SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2664 SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2670 DUP5 DUP8 PUSH2 0x37A8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x270A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x34A9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x272A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x275D SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27AF SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x27CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0x3443 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x27E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2996 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2830 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2874 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2921 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x297F JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x294F JUMPI DUP3 MLOAD PUSH2 0x294C SWAP1 DUP8 PUSH2 0x37A8 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2977 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2906 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x298E SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2803 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x29E6 PUSH2 0x2D79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x29DE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2CC4 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2ADE JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2A71 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND SWAP1 JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2B1E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2CAD JUMPI DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2C7D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2C7B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 DUP6 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x2B9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2BC5 SWAP2 SWAP1 PUSH2 0x3805 JUMP JUMPDEST PUSH2 0x2BCF SWAP2 SWAP1 PUSH2 0x37E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE DUP11 DUP11 PUSH2 0x2C3B DUP2 PUSH2 0x383B JUMP JUMPDEST SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x2C5B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2C73 SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B40 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2CA5 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B03 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2CBC SWAP1 PUSH2 0x383B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A00 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0x2D69 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2D3A JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2CFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D67 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2D3A JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2D75 SWAP3 SWAP2 POP PUSH2 0x2DCB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DCC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2E11 DUP3 PUSH2 0x2DE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2E33 DUP4 PUSH2 0x2DE0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E60 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E83 JUMPI PUSH2 0x2E83 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0xA0 DUP2 ADD DUP7 LT ISZERO PUSH2 0x2E97 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP4 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2EC7 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2EB2 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E99 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2E11 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F03 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F34 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F56 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x309C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3077 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x30B0 DUP2 DUP8 PUSH2 0x2F43 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x30C5 DUP2 DUP6 PUSH2 0x2F43 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3155 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30EC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x2E11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F43 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206E6F742072656769737465726564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD081C9959DA5CDD195C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x44697265637420726566657272616C207472616E73666572206661696C656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C203120726577617264207472616E73666572206661696C65640000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6576656C20726577617264207472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x616E207374616B65 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207374616B696E67206475726174696F6E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E67206475726174696F6E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5265666572726572206D757374207374616B65206265666F726520796F752063 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x30B7103932B3B4B9BA32B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x14DD185AD9481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x65722031302064617973 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x155CD95C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E20666565207472616E73666572206661696C656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x44617973206D757374206265203E203 PUSH1 0x84 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1BDCDA5D1A5BDB9259 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x37BB JUMPI PUSH2 0x37BB PUSH2 0x3876 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x37DD JUMPI PUSH2 0x37DD PUSH2 0x3876 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3800 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x381F JUMPI PUSH2 0x381F PUSH2 0x3876 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3836 JUMPI PUSH2 0x3836 PUSH2 0x3876 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x384F JUMPI PUSH2 0x384F PUSH2 0x3876 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x386D JUMPI PUSH2 0x386D PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DIFFICULTY EXP 0xC1 SWAP3 PUSH2 0xFD8D 0xD5 JUMP 0x5F SELFBALANCE 0xC0 PUSH26 0xD9D4167AC2DE7B821777B81661AC070FDF1264736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "388:19175:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:57;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1647:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16429:248::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13740:354::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8440:2247::-;;;;;;:::i;:::-;;:::i;:::-;;18757:162;;;;;;:::i;:::-;;:::i;2256:736::-;;;;;;:::i;:::-;;:::i;8121:164::-;;;;;;:::i;:::-;;:::i;14427:117::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8320:114::-;;;;;;:::i;:::-;;:::i;10693:1661::-;;;;;;:::i;:::-;;:::i;6224:120::-;;;:::i;12360:1374::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2998:3217::-;;;;;;:::i;:::-;;:::i;1704:45::-;;;;;;:::i;:::-;;:::i;428:20::-;;;:::i;14100:158::-;;;;;;:::i;:::-;;:::i;19042:96::-;;;:::i;7340:744::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1817:25::-;;;;;;:::i;:::-;;:::i;1541:37::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;487:23::-;;;:::i;14264:157::-;;;;;;:::i;:::-;;:::i;6355:975::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;16178:117::-;;;;;;:::i;:::-;;:::i;18925:111::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19144:313::-;;;;;;:::i;:::-;;:::i;1848:46::-;;;;;;:::i;:::-;;:::i;16683:2068::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1755:55::-;;;;;;:::i;:::-;;:::i;454:27::-;;;:::i;1584:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1584:57:0;;;;-1:-1:-1;1584:57:0;;-1:-1:-1;1584:57:0;:::o;1647:51::-;;;;;;;;;;;;-1:-1:-1;;;;;1647:51:0;;:::o;16429:248::-;-1:-1:-1;;;;;16521:21:0;;16488:5;16521:21;;;:15;:21;;;;;:28;16572:2;16563:11;;16559:25;;16583:1;16576:8;;;;;16559:25;16607:1;16598:5;:10;16594:24;;16617:1;16610:8;;;;;16594:24;16641:1;16632:5;:10;16628:24;;16651:1;16644:8;;;;;16628:24;16669:1;16662:8;;;16429:248;;;;:::o;13740:354::-;-1:-1:-1;;;;;13874:12:0;;13858:13;13874:12;;;:5;:12;;;;;:19;;:26;13826:16;;13874:26;13933:20;;;;;;-1:-1:-1;;;13933:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13933:20:0;;13910:43;;13969:9;13964:103;13988:5;13984:1;:9;13964:103;;;-1:-1:-1;;;;;14023:12:0;;;;;;:5;:12;;;;;:19;;:22;;14043:1;;14023:22;;;;-1:-1:-1;;;14023:22:0;;;;;;;;;;;;;;;;;;;:33;;;14014:3;14018:1;14014:6;;;;;;-1:-1:-1;;;14014:6:0;;;;;;;;;;;;;;;;;;:42;13995:3;;;;:::i;:::-;;;;13964:103;;;-1:-1:-1;14084:3:0;13740:354;-1:-1:-1;;;13740:354:0:o;8440:2247::-;2080:10;2074:17;;;;:5;:17;;;;;:28;;;;;2066:55;;;;-1:-1:-1;;;2066:55:0;;;;;;;:::i;:::-;;;;;;;;;8532:10:::1;8510:19;8572:18:::0;;;:5:::1;:18;::::0;;;;;8625:11:::1;::::0;::::1;::::0;8510:19;8676:1942:::1;8700:13:::0;;8696:17;::::1;8676:1942;;;8762:11;8738:6;8745:1;8738:9;;;;;;-1:-1:-1::0;;;8738:9:0::1;;;;;;;;;;;;;;;;;;;:20;;;:35;:57;;;;;8778:6;8785:1;8778:9;;;;;;-1:-1:-1::0;;;8778:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:17:::1;:9;::::0;;::::1;;:17;::::0;::::1;;8777:18;8738:57;8734:1874;;;8910:6;8917:1;8910:9;;;;;;-1:-1:-1::0;;;8910:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;8930:6;8910:26;;;;:::i;:::-;8887:6;8894:1;8887:9;;;;;;-1:-1:-1::0;;;8887:9:0::1;;;;;;;;;;;;;;;;;;;:19;;;:50;;;;:::i;:::-;8844:15;:93;;8815:196;;;;-1:-1:-1::0;;;8815:196:0::1;;;;;;;:::i;:::-;9030:11;9044:10;:29;9055:6;9062:1;9055:9;;;;;;-1:-1:-1::0;;;9055:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9044:29;;;;;;;;;;;;9030:43;;9091:19;9133:6;9140:1;9133:9;;;;;;-1:-1:-1::0;;;9133:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9154:2;9133:23;9129:673;;;-1:-1:-1::0;9194:8:0::1;9129:673;;;9231:6;9238:1;9231:9;;;;;;-1:-1:-1::0;;;9231:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9252:2;9231:23;9227:575;;;-1:-1:-1::0;9292:8:0::1;9227:575;;;9329:6;9336:1;9329:9;;;;;;-1:-1:-1::0;;;9329:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9350:2;9329:23;9325:477;;;-1:-1:-1::0;9390:8:0::1;9325:477;;;9427:6;9434:1;9427:9;;;;;;-1:-1:-1::0;;;9427:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9448:3;9427:24;9423:379;;;-1:-1:-1::0;9489:9:0::1;9423:379;;;9527:6;9534:1;9527:9;;;;;;-1:-1:-1::0;;;9527:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9548:3;9527:24;9523:279;;;-1:-1:-1::0;9589:9:0::1;9523:279;;;9627:6;9634:1;9627:9;;;;;;-1:-1:-1::0;;;9627:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9648:3;9627:24;9623:179;;;-1:-1:-1::0;9689:9:0::1;9623:179;;;9745:38;;-1:-1:-1::0;;;9745:38:0::1;;;;;;;:::i;9623:179::-;9820:16;9926:11;9905:6;9912:1;9905:9;;;;;;-1:-1:-1::0;;;9905:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;9879:3;9840:6;9847:1;9840:9;;;;;;-1:-1:-1::0;;;9840:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;:42;;;;:::i;:::-;:82;;;;:::i;:::-;9839:98;;;;:::i;:::-;9820:117;;9955:19;9996:8;9977:6;9984:1;9977:9;;;;;;-1:-1:-1::0;;;9977:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;:27;;;;:::i;:::-;10052:9;::::0;:34:::1;::::0;-1:-1:-1;;;10052:34:0;;9955:49;;-1:-1:-1;9955:49:0;;-1:-1:-1;;;;;10052:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;10080:4:::1;::::0;10052:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;10023:149;;;;-1:-1:-1::0;;;10023:149:0::1;;;;;;;:::i;:::-;10211:4;10191:6;10198:1;10191:9;;;;;;-1:-1:-1::0;;;10191:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:17;;:24:::0;;-1:-1:-1;;10191:24:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;10248:9:::1;::::0;:44:::1;::::0;-1:-1:-1;;;10248:44:0;;-1:-1:-1;;;;;10248:9:0;;::::1;::::0;:18:::1;::::0;:44:::1;::::0;10267:11;;10280;;10248:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10233:59;;10318:7;10310:40;;;;-1:-1:-1::0;;;10310:40:0::1;;;;;;;:::i;:::-;10403:11;-1:-1:-1::0;;;;;10374:165:0::1;;10436:6;10443:1;10436:9;;;;;;-1:-1:-1::0;;;10436:9:0::1;;;;;;;;;;;;;;;;;;;:17;;;10475:6;10482:1;10475:9;;;;;;-1:-1:-1::0;;;10475:9:0::1;;;;;;;;;;;;;;;;;;;:16;;;10513:8;10374:165;;;;;;;;:::i;:::-;;;;;;;;10566:4;10558:12;;10588:5;;;;;;;8734:1874;8715:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8676:1942;;;;10636:5;10628:52;;;;-1:-1:-1::0;;;10628:52:0::1;;;;;;;:::i;:::-;2131:1;;;;8440:2247:::0;:::o;18757:162::-;18836:5;;-1:-1:-1;;;;;18836:5:0;18822:10;:19;18814:55;;;;-1:-1:-1;;;18814:55:0;;;;;;;:::i;:::-;18879:9;;;18898:5;18879:33;;-1:-1:-1;;;18879:33:0;;-1:-1:-1;;;;;18879:9:0;;;;:18;;:33;;18898:5;;;18905:6;;18879:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18757:162;:::o;2256:736::-;2326:10;2320:17;;;;:5;:17;;;;;:28;;;;;2319:29;2311:60;;;;-1:-1:-1;;;2311:60:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2389:22:0;;2401:10;2389:22;;2381:56;;;;-1:-1:-1;;;2381:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2455:15:0;;;;;;:5;:15;;;;;:26;;;;;2447:62;;;;-1:-1:-1;;;2447:62:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2540:15:0;;2572:1;2540:15;;;:5;:15;;;;;:22;;:29;2519:123;;;;-1:-1:-1;;;2519:123:0;;;;;;;:::i;:::-;2659:10;2653:17;;;;:5;:17;;;;;;;;:37;;-1:-1:-1;;;;;2653:37:0;;;-1:-1:-1;;;;;;2653:37:0;;;;;;;2700:28;;;;:35;;-1:-1:-1;;2700:35:0;2653:37;2700:35;;;;;;2745:8;:25;;;;;;;;;;;;;;;;;;2781;;;;;;;;;2825:150;;;;;;;;;;;;;;;;2945:15;2825:150;;;;;;2781:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:736::o;8121:164::-;2198:5;;-1:-1:-1;;;;;2198:5:0;2184:10;:19;2176:56;;;;-1:-1:-1;;;2176:56:0;;;;;;;:::i;:::-;8221:1:::1;8211:7;:11;8203:40;;;;-1:-1:-1::0;;;8203:40:0::1;;;;;;;:::i;:::-;8253:19;::::0;;;:10:::1;:19;::::0;;;;;:25;8121:164::o;14427:117::-;-1:-1:-1;;;;;14514:11:0;14488:7;14514:11;;;:5;:11;;;;;;;;:23;;;14427:117::o;8320:114::-;2198:5;;-1:-1:-1;;;;;2198:5:0;2184:10;:19;2176:56;;;;-1:-1:-1;;;2176:56:0;;;;;;;:::i;:::-;8402:25:::1;:12;8417:10:::0;8402:25:::1;;:::i;10693:1661::-:0;2080:10;2074:17;;;;:5;:17;;;;;:28;;;;;2066:55;;;;-1:-1:-1;;;2066:55:0;;;;;;;:::i;:::-;10794:10:::1;10772:19;10834:18:::0;;;:5:::1;:18;::::0;;;;;10887:11:::1;::::0;::::1;::::0;10772:19;10938:1347:::1;10962:13:::0;;10958:17;::::1;10938:1347;;;11024:11;11000:6;11007:1;11000:9;;;;;;-1:-1:-1::0;;;11000:9:0::1;;;;;;;;;;;;;;;;;;;:20;;;:35;:57;;;;;11040:6;11047:1;11040:9;;;;;;-1:-1:-1::0;;;11040:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:17:::1;:9;::::0;;::::1;;:17;::::0;::::1;;11039:18;11000:57;10996:1279;;;11187:6;11194:1;11187:9;;;;;;-1:-1:-1::0;;;11187:9:0::1;;;;;;;;;;;;;;;;;;;:19;;;11209:7;11187:29;;;;:::i;:::-;11168:15;:48;;11139:161;;;;-1:-1:-1::0;;;11139:161:0::1;;;;;;;:::i;:::-;11319:14;11336:6;11343:1;11336:9;;;;;;-1:-1:-1::0;;;11336:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;:16:::1;:9;::::0;;::::1;;:16;::::0;;-1:-1:-1;11404:3:0::1;11390:10;11336:16:::0;11399:1:::1;11390:10;:::i;:::-;11389:18;;;;:::i;:::-;11370:37:::0;-1:-1:-1;11425:18:0::1;11446:17;11370:37:::0;11446:6;:17:::1;:::i;:::-;11511:9;::::0;:34:::1;::::0;-1:-1:-1;;;11511:34:0;;11425:38;;-1:-1:-1;11549:6:0;;-1:-1:-1;;;;;11511:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;11539:4:::1;::::0;11511:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;11482:144;;;;-1:-1:-1::0;;;11482:144:0::1;;;;;;;:::i;:::-;11665:4;11645:6;11652:1;11645:9;;;;;;-1:-1:-1::0;;;11645:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:17;;:24:::0;;-1:-1:-1;;11645:24:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;11748:9:::1;::::0;:43:::1;::::0;-1:-1:-1;;;11748:43:0;;-1:-1:-1;;;;;11748:9:0;;::::1;::::0;:18:::1;::::0;:43:::1;::::0;11767:11;;11780:10;;11748:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11729:62;;11817:11;11809:44;;;;-1:-1:-1::0;;;11809:44:0::1;;;;;;;:::i;:::-;11930:9;::::0;:130:::1;::::0;-1:-1:-1;;;11930:130:0;;11910:17:::1;::::0;-1:-1:-1;;;;;11930:9:0::1;::::0;:18:::1;::::0;:130:::1;::::0;11970:42:::1;::::0;12034:8;;11930:130:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11910:150;;12086:12;12078:50;;;;-1:-1:-1::0;;;12078:50:0::1;;;;;;;:::i;:::-;12160:11;-1:-1:-1::0;;;;;12152:54:0::1;;12173:6;12180:1;12173:9;;;;;;-1:-1:-1::0;;;12173:9:0::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:17:::0;12152:54:::1;::::0;::::1;::::0;12192:10;;12152:54:::1;:::i;10996:1279::-;10977:3:::0;::::1;::::0;::::1;:::i;:::-;;;;10938:1347;;6224:120:::0;6303:9;;:34;;-1:-1:-1;;;6303:34:0;;6277:7;;-1:-1:-1;;;;;6303:9:0;;:19;;:34;;6331:4;;6303:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6296:41;;6224:120;:::o;12360:1374::-;12471:12;12730:29;;;:16;:29;;;;;;12471:12;;;;;;;;;;;;;;-1:-1:-1;;;;;12730:29:0;12777:22;12769:53;;;;-1:-1:-1;;;12769:53:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;12857:15:0;;12833:21;12857:15;;;:5;:15;;;;;;;;:22;;12833:46;;;;;;;;;;;;;;;;;;;12857:22;;12833:46;:21;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12894:9;12889:803;12913:6;:13;12909:1;:17;12889:803;;;12975:11;12951:6;12958:1;12951:9;;;;;;-1:-1:-1;;;12951:9:0;;;;;;;;;;;;;;;:20;;;:35;12947:735;;;13006:14;13023:6;13030:1;13023:9;;;;;;-1:-1:-1;;;13023:9:0;;;;;;;;;;;;;;;13006:26;;13051:15;13069:10;:21;13080:1;:9;;;13069:21;;;;;;;;;;;;13051:39;;13108:11;13137:1;:9;;;13149:6;13137:18;;;;:::i;:::-;13122:1;:11;;;:34;;;;:::i;:::-;13108:48;;13174:13;13191:1;:9;;;13190:10;:35;;;;;13222:3;13204:15;:21;13190:35;13174:51;;13324:21;13377:3;13371;13360:7;13349:1;:8;;;:18;;;;:::i;:::-;13348:26;;;;:::i;:::-;:32;;;;:::i;:::-;13324:56;;13428:8;13458:1;:9;;;13489:1;:8;;;13519:1;:11;;;13552:3;13577:7;13606:13;13641:8;13399:268;;;;;;;;;;;;;;;;;;;;;;;;;;12947:735;12928:3;;;;:::i;:::-;;;;12889:803;;;;13702:25;;-1:-1:-1;;;13702:25:0;;;;;;;:::i;12360:1374::-;;;;;;;;;;:::o;2998:3217::-;2080:10;2074:17;;;;:5;:17;;;;;:28;;;;;2066:55;;;;-1:-1:-1;;;2066:55:0;;;;;;;:::i;:::-;3093:1:::1;3084:6;:10;3076:58;;;;-1:-1:-1::0;;;3076:58:0::1;;;;;;;:::i;:::-;3170:1;3148:19:::0;;;:10:::1;:19;::::0;;;;;3140:60:::1;;;;-1:-1:-1::0;;;3140:60:0::1;;;;;;;:::i;:::-;3232:10;3207:16;3226:17:::0;;;:5:::1;:17;::::0;;;;:26;-1:-1:-1;;;;;3226:26:0::1;3263:22:::0;;3259:131:::1;;-1:-1:-1::0;;;;;3305:15:0;::::1;3337:1;3305:15:::0;;;:5:::1;:15;::::0;;;;:22:::1;;:29:::0;3297:86:::1;;;;-1:-1:-1::0;;;3297:86:0::1;;;;;;;:::i;:::-;3411:9;::::0;:57:::1;::::0;-1:-1:-1;;;3411:57:0;;3396:12:::1;::::0;-1:-1:-1;;;;;3411:9:0::1;::::0;:22:::1;::::0;:57:::1;::::0;3434:10:::1;::::0;3454:4:::1;::::0;3461:6;;3411:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3396:72;;3482:7;3474:40;;;;-1:-1:-1::0;;;3474:40:0::1;;;;;;;:::i;:::-;3521:18;3544:12;;3542:14;;;;;:::i;:::-;;;;;;;3521:35;;3563:5;:17;3569:10;-1:-1:-1::0;;;;;3563:17:0::1;-1:-1:-1::0;;;;;3563:17:0::1;;;;;;;;;;;;:24;;3602:214;;;;;;;;3631:12;;3602:214;;;;3669:10;3602:214;;;;3701:6;3602:214;;;;3732:15;3602:214;;;;3770:7;3602:214;;;;3800:5;3602:214;;;;::::0;3563:259:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:10;3829:16;:28;3846:10;3829:28;;;;;;;;;;;;:41;;;;;-1:-1:-1::0;;;;;3829:41:0::1;;;;;-1:-1:-1::0;;;;;3829:41:0::1;;;;;;3877:17;3897:5;:17;3903:10;-1:-1:-1::0;;;;;3897:17:0::1;-1:-1:-1::0;;;;;3897:17:0::1;;;;;;;;;;;;:24;;:31;;;;3932:1;3897:36;3877:56;;3939:14;3956:5;:17;3962:10;-1:-1:-1::0;;;;;3956:17:0::1;-1:-1:-1::0;;;;;3956:17:0::1;;;;;;;;;;;;:26;;;;;;;;;;-1:-1:-1::0;;;;;3956:26:0::1;3939:43;;3994:7;3989:2224;4011:19;4007:1;:23;;;:47;;;;-1:-1:-1::0;;;;;;4034:20:0;::::1;::::0;::::1;4007:47;3989:2224;;;4071:14;4104:6;::::0;::::1;4100:2065;;4130:12;4126:1602;;;4204:20;4242:3;4228:10;:6:::0;4237:1:::1;4228:10;:::i;:::-;4227:18;;;;:::i;:::-;4204:41:::0;-1:-1:-1;4263:20:0::1;4301:3;4287:10;:6:::0;4296:1:::1;4287:10;:::i;:::-;4286:18;;;;:::i;:::-;4263:41:::0;-1:-1:-1;4369:27:0::1;4263:41:::0;4369:12;:27:::1;:::i;:::-;4331:9;::::0;:34:::1;::::0;-1:-1:-1;;;4331:34:0;;-1:-1:-1;;;;;4331:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;4359:4:::1;::::0;4331:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;4323:107;;;;-1:-1:-1::0;;;4323:107:0::1;;;;;;;:::i;:::-;4457:9;::::0;:40:::1;::::0;-1:-1:-1;;;4457:40:0;;-1:-1:-1;;;;;4457:9:0;;::::1;::::0;:18:::1;::::0;:40:::1;::::0;4476:6;;4484:12;;4457:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4449:84;;;;-1:-1:-1::0;;;4449:84:0::1;;;;;;;:::i;:::-;4559:9;::::0;:40:::1;::::0;-1:-1:-1;;;4559:40:0;;-1:-1:-1;;;;;4559:9:0;;::::1;::::0;:18:::1;::::0;:40:::1;::::0;4578:6;;4586:12;;4559:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4551:83;;;;-1:-1:-1::0;;;4551:83:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4653:28:0;::::1;;::::0;;;:20:::1;:28;::::0;;;;:44;;4685:12;;4653:28;:44:::1;::::0;4685:12;;4653:44:::1;:::i;:::-;::::0;;;-1:-1:-1;4744:27:0::1;::::0;-1:-1:-1;4759:12:0;4744;:27:::1;:::i;:::-;-1:-1:-1::0;;;;;4715:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:56:::0;;:25;;:13;:56:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4789:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:41:::0;;4818:12;;4789:13;:41:::1;::::0;4818:12;;4789:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4932:23:0;::::1;4902:27;4932:23:::0;;;:15:::1;:23;::::0;;;;;4973:278:::1;4997:11:::0;;4993:15;::::1;4973:278;;;5068:10;-1:-1:-1::0;;;;;5041:37:0::1;:4;5046:1;5041:7;;;;;;-1:-1:-1::0;;;5041:7:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:23:::0;-1:-1:-1;;;;;5041:23:0::1;:37;5037:196;;;5130:12;5106:4;5111:1;5106:7;;;;;;-1:-1:-1::0;;;5106:7:0::1;;;;;;;;;;;;;;;;;;;:20;;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5205:5:0::1;::::0;-1:-1:-1;5205:5:0::1;5037:196;5010:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4973:278;;;;4126:1602;;;;;;5327:3;5308:12;5321:1;5308:15;;;;;;;-1:-1:-1::0;;;5308:15:0::1;;;;;;;;;;::::0;::::1;::::0;;;::::1;::::0;5299:24:::1;::::0;5308:15;;::::1;;::::0;::::1;;;5299:6:::0;:24:::1;:::i;:::-;5298:32;;;;:::i;:::-;5356:9;::::0;:34:::1;::::0;-1:-1:-1;;;5356:34:0;;5289:41;;-1:-1:-1;5289:41:0;;-1:-1:-1;;;;;5356:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;5384:4:::1;::::0;5356:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;5348:86;;;;-1:-1:-1::0;;;5348:86:0::1;;;;;;;:::i;:::-;5460:9;::::0;:34:::1;::::0;-1:-1:-1;;;5460:34:0;;-1:-1:-1;;;;;5460:9:0;;::::1;::::0;:18:::1;::::0;:34:::1;::::0;5479:6;;5487;;5460:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5452:77;;;;-1:-1:-1::0;;;5452:77:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5548:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:35:::0;;5577:6;;5548:13;:35:::1;::::0;5577:6;;5548:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5601:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:35:::0;;5630:6;;5601:13;:35:::1;::::0;5630:6;;5601:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;4126:1602:0::1;4100:2065;;;5796:3;5777:12;5790:1;5777:15;;;;;;;-1:-1:-1::0;;;5777:15:0::1;;;;;;;;;;::::0;::::1;::::0;;;::::1;::::0;5768:24:::1;::::0;5777:15;;::::1;;::::0;::::1;;;5768:6:::0;:24:::1;:::i;:::-;5767:32;;;;:::i;:::-;5821:9;::::0;:34:::1;::::0;-1:-1:-1;;;5821:34:0;;5758:41;;-1:-1:-1;5758:41:0;;-1:-1:-1;;;;;5821:9:0;;::::1;::::0;:19:::1;::::0;:34:::1;::::0;5849:4:::1;::::0;5821:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;5813:86;;;;-1:-1:-1::0;;;5813:86:0::1;;;;;;;:::i;:::-;5921:9;::::0;:34:::1;::::0;-1:-1:-1;;;5921:34:0;;-1:-1:-1;;;;;5921:9:0;;::::1;::::0;:18:::1;::::0;:34:::1;::::0;5940:6;;5948;;5921:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5913:75;;;;-1:-1:-1::0;;;5913:75:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6003:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;:25:::1;;:35:::0;;6032:6;;6003:13;:35:::1;::::0;6032:6;;6003:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6052:13:0;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;:25:::1;:35:::0;;6081:6;;6052:13;:35:::1;::::0;6081:6;;6052:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;4100:2065:0::1;-1:-1:-1::0;;;;;;6184:13:0;;::::1;;::::0;;;:5:::1;:13;::::0;;;;:22;;;::::1;::::0;4056:3;::::1;::::0;::::1;:::i;:::-;;;;3989:2224;;;;2131:1;;;;;2998:3217:::0;;:::o;1704:45::-;;;;;;;;;;;;;:::o;428:20::-;;;-1:-1:-1;;;;;428:20:0;;:::o;14100:158::-;-1:-1:-1;;;;;14223:21:0;14193:7;14223:21;;;:15;:21;;;;;:28;;14100:158::o;19042:96::-;19116:8;:15;19042:96;:::o;7340:744::-;-1:-1:-1;;;;;7616:21:0;;7586:27;7616:21;;;:15;:21;;;;;7663:11;;7448:34;;;;;;7616:21;7663:11;7705:20;;;;;;-1:-1:-1;;;7705:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7705:20:0;;7685:40;;7759:5;7745:20;;;;;;-1:-1:-1;;;7745:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7745:20:0;;7735:30;;7802:5;7788:20;;;;;;-1:-1:-1;;;7788:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7788:20:0;;7775:33;;7824:9;7819:201;7843:5;7839:1;:9;7819:201;;;7892:4;7897:1;7892:7;;;;;;-1:-1:-1;;;7892:7:0;;;;;;;;;;;;;;;;;;;;;;:23;7869:20;;-1:-1:-1;;;;;7892:23:0;;;;7869:17;;7887:1;;7869:20;;;;-1:-1:-1;;;7869:20:0;;;;;;;;;;;;;;:46;-1:-1:-1;;;;;7869:46:0;;;-1:-1:-1;;;;;7869:46:0;;;;;7942:4;7947:1;7942:7;;;;;;-1:-1:-1;;;7942:7:0;;;;;;;;;;;;;;;;;;;:20;;;7929:7;7937:1;7929:10;;;;;;-1:-1:-1;;;7929:10:0;;;;;;;;;;;;;;:33;;;;;7992:4;7997:1;7992:7;;;;;;-1:-1:-1;;;7992:7:0;;;;;;;;;;;;;;;;;;;:17;;;7976:10;7987:1;7976:13;;;;;;-1:-1:-1;;;7976:13:0;;;;;;;;;;;;;;;;;;:33;7850:3;;;;:::i;:::-;;;;7819:201;;;;8030:47;;7340:744;;;;;:::o;1817:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1817:25:0;;-1:-1:-1;1817:25:0;:::o;1541:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1541:37:0;;;;;;;;;:::o;487:23::-;;;-1:-1:-1;;;;;487:23:0;;:::o;14264:157::-;-1:-1:-1;;;;;14388:26:0;14358:7;14388:26;;;:20;:26;;;;;;;14264:157::o;6355:975::-;6463:16;6481:19;6533:1;6524:6;:10;6516:52;;;;-1:-1:-1;;;6516:52:0;;;;;;;:::i;:::-;6608:1;6586:19;;;:10;:19;;;;;;6578:60;;;;-1:-1:-1;;;6578:60:0;;;;;;;:::i;:::-;6649:11;6663:19;;;:10;:19;;;;;;;6737:2;6726:13;;6722:501;;;-1:-1:-1;6769:8:0;6722:501;;;6798:7;6809:2;6798:13;6794:429;;;-1:-1:-1;6841:8:0;6794:429;;;6870:7;6881:2;6870:13;6866:357;;;-1:-1:-1;6913:8:0;6866:357;;;6942:7;6953:3;6942:14;6938:285;;;-1:-1:-1;6986:9:0;6938:285;;;7016:7;7027:3;7016:14;7012:211;;;-1:-1:-1;7060:9:0;7012:211;;;7090:7;7101:3;7090:14;7086:137;;;-1:-1:-1;7134:9:0;7086:137;7271:11;7260:7;7245:12;7254:3;7245:6;:12;:::i;:::-;:22;;;;:::i;:::-;7244:38;;;;:::i;:::-;7233:49;-1:-1:-1;7306:17:0;7233:49;7306:6;:17;:::i;:::-;7292:31;;6355:975;;;;;;;:::o;16178:117::-;-1:-1:-1;;;;;16265:11:0;16239:7;16265:11;;;:5;:11;;;;;:23;;;;16178:117::o;18925:111::-;-1:-1:-1;;;;;19007:11:0;18984:4;19007:11;;;:5;:11;;;;;:22;;;;;;18925:111::o;19144:313::-;2198:5;;-1:-1:-1;;;;;2198:5:0;2184:10;:19;2176:56;;;;-1:-1:-1;;;2176:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;19232:16:0;::::1;19224:54;;;;-1:-1:-1::0;;;19224:54:0::1;;;;;;;:::i;:::-;19305:1;19296:6;:10;19288:55;;;;-1:-1:-1::0;;;19288:55:0::1;;;;;;;:::i;:::-;19369:9;::::0;:30:::1;::::0;-1:-1:-1;;;19369:30:0;;19354:12:::1;::::0;-1:-1:-1;;;;;19369:9:0::1;::::0;:18:::1;::::0;:30:::1;::::0;19388:2;;19392:6;;19369:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19354:45;;19417:7;19409:41;;;;-1:-1:-1::0;;;19409:41:0::1;;;;;;;:::i;:::-;2242:1;19144:313:::0;;:::o;1848:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16683:2068::-;16781:24;16821:18;16859:9;16854:540;16878:8;:15;16874:19;;16854:540;;;16914:14;16931:8;16940:1;16931:11;;;;;;-1:-1:-1;;;16931:11:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16931:11:0;16980:13;;;:5;:13;;;;;;16931:11;16980:20;16956:44;;;;;;;;;;;;;;;;;16931:11;;-1:-1:-1;16956:44:0;;16980:20;;16956:44;16931:11;;16956:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;17031:13:0;;;17014:14;17031:13;;;:5;:13;;;;;:22;16956:44;;-1:-1:-1;17031:22:0;;;17068:316;17131:19;17123:5;:27;;;:51;;;;-1:-1:-1;;;;;;17154:20:0;;;;17123:51;17068:316;;;17246:5;-1:-1:-1;;;;;17236:15:0;:6;-1:-1:-1;;;;;17236:15:0;;17232:89;;;17289:13;;17275:27;;;;:::i;:::-;;;17232:89;-1:-1:-1;;;;;17347:13:0;;;;;;;:5;:13;;;;;:22;;;;;17192:7;;;;:::i;:::-;;;;17068:316;;;;16854:540;;;16895:3;;;;;:::i;:::-;;;;16854:540;;;;17404:35;17464:10;17442:33;;;;;;-1:-1:-1;;;17442:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17404:71;;17485:13;17518:9;17513:1204;17537:8;:15;17533:19;;17513:1204;;;17573:14;17590:8;17599:1;17590:11;;;;;;-1:-1:-1;;;17590:11:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17590:11:0;17639:13;;;:5;:13;;;;;;17590:11;17639:20;17615:44;;;;;;;;;;;;;;;;;17590:11;;-1:-1:-1;17615:44:0;;17639:20;;17615:44;17590:11;;17615:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;17690:13:0;;;17673:14;17690:13;;;:5;:13;;;;;:22;17615:44;;-1:-1:-1;17690:22:0;;;17727:980;17790:19;17782:5;:27;;;:51;;;;-1:-1:-1;;;;;;17813:20:0;;;;17782:51;17727:980;;;17905:5;-1:-1:-1;;;;;17895:15:0;:6;-1:-1:-1;;;;;17895:15:0;;17891:753;;;17939:9;17934:692;17958:6;:13;17954:1;:17;17934:692;;;18004:18;18025:6;18032:1;18025:9;;;;;;-1:-1:-1;;;18025:9:0;;;;;;;;;;;;;;;18004:30;;18060:14;18144:3;18093:12;18106:5;18093:19;;;;;;;-1:-1:-1;;;18093:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;18078:34;;:5;:12;;;:34;;;;:::i;:::-;18077:70;;;;:::i;:::-;18060:87;;18196:407;;;;;;;;18259:5;-1:-1:-1;;;;;18196:407:0;;;;;18303:5;:13;;;18196:407;;;;18359:5;:12;;;18196:407;;;;18417:6;18196:407;;;;18468:6;-1:-1:-1;;;;;18196:407:0;;;;;18515:5;:15;;;18196:407;;;;18567:5;18575:1;18567:9;;;;:::i;:::-;18196:407;;;;18174:10;18185:7;;;;:::i;:::-;;;18174:19;;;;;;-1:-1:-1;;;18174:19:0;;;;;;;;;;;;;;:429;;;;17934:692;;17973:3;;;;;:::i;:::-;;;;17934:692;;;;17891:753;-1:-1:-1;;;;;18670:13:0;;;;;;;:5;:13;;;;;:22;;;;;17851:7;;;;:::i;:::-;;;;17727:980;;;;17513:1204;;;17554:3;;;;;:::i;:::-;;;;17513:1204;;;-1:-1:-1;18734:10:0;;16683:2068;-1:-1:-1;;;;16683:2068:0:o;1755:55::-;;;;;;;;;;;;;:::o;454:27::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:175:1;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:1:o;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:1:o;668:939::-;;801:3;789:9;780:7;776:23;772:33;769:2;;;823:6;815;808:22;769:2;877:7;870:4;859:9;855:20;851:34;841:2;;904:6;896;889:22;841:2;942;936:9;984:3;976:6;972:16;1054:6;1042:10;1039:22;1018:18;1006:10;1003:34;1000:62;997:2;;;1065:18;;:::i;:::-;1101:2;1094:22;1136:6;1162:9;1201:3;1186:19;;1183:32;-1:-1:-1;1180:2:1;;;1233:6;1225;1218:22;1180:2;1260:6;1275:301;1289:4;1286:1;1283:11;1275:301;;;1362:3;1349:17;1410:4;1403:5;1399:16;1392:5;1389:27;1379:2;;1435:6;1427;1420:22;1379:2;1457:18;;1498:4;1522:12;;;;1554;;;;;1309:1;1302:9;1275:301;;;-1:-1:-1;1595:6:1;;759:848;-1:-1:-1;;;;;759:848:1:o;1612:297::-;;1732:2;1720:9;1711:7;1707:23;1703:32;1700:2;;;1753:6;1745;1738:22;1700:2;1790:9;1784:16;1843:5;1836:13;1829:21;1822:5;1819:32;1809:2;;1870:6;1862;1855:22;1914:190;;2026:2;2014:9;2005:7;2001:23;1997:32;1994:2;;;2047:6;2039;2032:22;1994:2;-1:-1:-1;2075:23:1;;1984:120;-1:-1:-1;1984:120:1:o;2109:194::-;;2232:2;2220:9;2211:7;2207:23;2203:32;2200:2;;;2253:6;2245;2238:22;2200:2;-1:-1:-1;2281:16:1;;2190:113;-1:-1:-1;2190:113:1:o;2308:258::-;;;2437:2;2425:9;2416:7;2412:23;2408:32;2405:2;;;2458:6;2450;2443:22;2405:2;-1:-1:-1;;2486:23:1;;;2556:2;2541:18;;;2528:32;;-1:-1:-1;2395:171:1:o;2571:443::-;;2668:5;2662:12;2695:6;2690:3;2683:19;2721:4;2750:2;2745:3;2741:12;2734:19;;2787:2;2780:5;2776:14;2808:3;2820:169;2834:6;2831:1;2828:13;2820:169;;;2895:13;;2883:26;;2929:12;;;;2964:15;;;;2856:1;2849:9;2820:169;;;-1:-1:-1;3005:3:1;;2638:376;-1:-1:-1;;;;;2638:376:1:o;3019:203::-;-1:-1:-1;;;;;3183:32:1;;;;3165:51;;3153:2;3138:18;;3120:102::o;3227:375::-;-1:-1:-1;;;;;3485:15:1;;;3467:34;;3537:15;;;;3532:2;3517:18;;3510:43;3584:2;3569:18;;3562:34;;;;3417:2;3402:18;;3384:218::o;3607:274::-;-1:-1:-1;;;;;3799:32:1;;;;3781:51;;3863:2;3848:18;;3841:34;3769:2;3754:18;;3736:145::o;3886:345::-;-1:-1:-1;;;;;4106:32:1;;;;4088:51;;4170:2;4155:18;;4148:34;;;;4213:2;4198:18;;4191:34;4076:2;4061:18;;4043:188::o;4236:427::-;-1:-1:-1;;;;;4479:32:1;;;;4461:51;;4543:2;4528:18;;4521:34;;;;4586:2;4571:18;;4564:34;4641:14;4634:22;4629:2;4614:18;;4607:50;4448:3;4433:19;;4415:248::o;4668:715::-;-1:-1:-1;;;;;5023:32:1;;;;5005:51;;5087:2;5072:18;;5065:34;;;;5130:2;5115:18;;5108:34;;;;5173:2;5158:18;;5151:34;;;;5216:3;5201:19;;5194:35;5043:3;5245:19;;5238:35;5304:3;5289:19;;5282:35;5361:14;5354:22;5348:3;5333:19;;5326:51;4992:3;4977:19;;4959:424::o;5388:1052::-;5734:2;5746:21;;;5816:13;;5719:18;;;5838:22;;;5388:1052;;5914:4;;5891:3;5876:19;;;5941:15;;;5388:1052;5987:195;6001:6;5998:1;5995:13;5987:195;;;6066:13;;-1:-1:-1;;;;;6062:39:1;6050:52;;6122:12;;;;6157:15;;;;6098:1;6016:9;5987:195;;;5991:3;;;6227:9;6222:3;6218:19;6213:2;6202:9;6198:18;6191:47;6261;6304:3;6296:6;6261:47;:::i;:::-;6247:61;;;6356:9;6348:6;6344:22;6339:2;6328:9;6324:18;6317:50;6384;6427:6;6419;6384:50;:::i;:::-;6376:58;5695:745;-1:-1:-1;;;;;;5695:745:1:o;6445:1251::-;6680:2;6732:21;;;6802:13;;6705:18;;;6824:22;;;6445:1251;;6680:2;6865;;6883:18;;;;6924:15;;;6445:1251;6970:700;6984:6;6981:1;6978:13;6970:700;;;7043:13;;7127:9;;-1:-1:-1;;;;;7123:18:1;;;7111:31;;7182:11;;;7176:18;7162:12;;;7155:40;7235:11;;;7229:18;7215:12;;;7208:40;7271:4;7315:11;;;7309:18;7295:12;;;7288:40;7351:4;7399:11;;;7393:18;7389:27;;;7375:12;;;7368:49;7087:3;7484:11;;;7478:18;7464:12;;;7457:40;7520:4;7568:11;;;7562:18;7582:4;7558:29;7544:12;;;7537:51;7617:4;7608:14;;;;7645:15;;;;7096:1;6999:9;6970:700;;;-1:-1:-1;7687:3:1;;6660:1036;-1:-1:-1;;;;;;;6660:1036:1:o;7701:267::-;;7880:2;7869:9;7862:21;7900:62;7958:2;7947:9;7943:18;7935:6;7900:62;:::i;7973:187::-;8138:14;;8131:22;8113:41;;8101:2;8086:18;;8068:92::o;8386:347::-;8588:2;8570:21;;;8627:2;8607:18;;;8600:30;8666:25;8661:2;8646:18;;8639:53;8724:2;8709:18;;8560:173::o;8738:338::-;8940:2;8922:21;;;8979:2;8959:18;;;8952:30;-1:-1:-1;;;9013:2:1;8998:18;;8991:44;9067:2;9052:18;;8912:164::o;9081:345::-;9283:2;9265:21;;;9322:2;9302:18;;;9295:30;-1:-1:-1;;;9356:2:1;9341:18;;9334:51;9417:2;9402:18;;9255:171::o;9431:355::-;9633:2;9615:21;;;9672:2;9652:18;;;9645:30;9711:33;9706:2;9691:18;;9684:61;9777:2;9762:18;;9605:181::o;9791:354::-;9993:2;9975:21;;;10032:2;10012:18;;;10005:30;10071:32;10066:2;10051:18;;10044:60;10136:2;10121:18;;9965:180::o;10150:356::-;10352:2;10334:21;;;10371:18;;;10364:30;10430:34;10425:2;10410:18;;10403:62;10497:2;10482:18;;10324:182::o;10511:353::-;10713:2;10695:21;;;10752:2;10732:18;;;10725:30;10791:31;10786:2;10771:18;;10764:59;10855:2;10840:18;;10685:179::o;10869:342::-;11071:2;11053:21;;;11110:2;11090:18;;;11083:30;-1:-1:-1;;;11144:2:1;11129:18;;11122:48;11202:2;11187:18;;11043:168::o;11216:352::-;11418:2;11400:21;;;11457:2;11437:18;;;11430:30;11496;11491:2;11476:18;;11469:58;11559:2;11544:18;;11390:178::o;11573:404::-;11775:2;11757:21;;;11814:2;11794:18;;;11787:30;11853:34;11848:2;11833:18;;11826:62;-1:-1:-1;;;11919:2:1;11904:18;;11897:38;11967:3;11952:19;;11747:230::o;11982:347::-;12184:2;12166:21;;;12223:2;12203:18;;;12196:30;12262:25;12257:2;12242:18;;12235:53;12320:2;12305:18;;12156:173::o;12334:352::-;12536:2;12518:21;;;12575:2;12555:18;;;12548:30;12614;12609:2;12594:18;;12587:58;12677:2;12662:18;;12508:178::o;12691:398::-;12893:2;12875:21;;;12932:2;12912:18;;;12905:30;12971:34;12966:2;12951:18;;12944:62;-1:-1:-1;;;13037:2:1;13022:18;;13015:32;13079:3;13064:19;;12865:224::o;13094:345::-;13296:2;13278:21;;;13335:2;13315:18;;;13308:30;-1:-1:-1;;;13369:2:1;13354:18;;13347:51;13430:2;13415:18;;13268:171::o;13444:348::-;13646:2;13628:21;;;13685:2;13665:18;;;13658:30;13724:26;13719:2;13704:18;;13697:54;13783:2;13768:18;;13618:174::o;13797:349::-;13999:2;13981:21;;;14038:2;14018:18;;;14011:30;14077:27;14072:2;14057:18;;14050:55;14137:2;14122:18;;13971:175::o;14151:356::-;14353:2;14335:21;;;14372:18;;;14365:30;14431:34;14426:2;14411:18;;14404:62;14498:2;14483:18;;14325:182::o;14512:344::-;14714:2;14696:21;;;14753:2;14733:18;;;14726:30;-1:-1:-1;;;14787:2:1;14772:18;;14765:50;14847:2;14832:18;;14686:170::o;14861:407::-;15063:2;15045:21;;;15102:2;15082:18;;;15075:30;15141:34;15136:2;15121:18;;15114:62;-1:-1:-1;;;15207:2:1;15192:18;;15185:41;15258:3;15243:19;;15035:233::o;15273:339::-;15475:2;15457:21;;;15514:2;15494:18;;;15487:30;-1:-1:-1;;;15548:2:1;15533:18;;15526:45;15603:2;15588:18;;15447:165::o;15617:406::-;15819:2;15801:21;;;15858:2;15838:18;;;15831:30;15897:34;15892:2;15877:18;;15870:62;-1:-1:-1;;;15963:2:1;15948:18;;15941:40;16013:3;15998:19;;15791:232::o;16028:399::-;16230:2;16212:21;;;16269:2;16249:18;;;16242:30;16308:34;16303:2;16288:18;;16281:62;-1:-1:-1;;;16374:2:1;16359:18;;16352:33;16417:3;16402:19;;16202:225::o;16432:344::-;16634:2;16616:21;;;16673:2;16653:18;;;16646:30;-1:-1:-1;;;16707:2:1;16692:18;;16685:50;16767:2;16752:18;;16606:170::o;16781:349::-;16983:2;16965:21;;;17022:2;17002:18;;;16995:30;17061:27;17056:2;17041:18;;17034:55;17121:2;17106:18;;16955:175::o;17135:353::-;17337:2;17319:21;;;17376:2;17356:18;;;17349:30;17415:31;17410:2;17395:18;;17388:59;17479:2;17464:18;;17309:179::o;17493:348::-;17695:2;17677:21;;;17734:2;17714:18;;;17707:30;17773:26;17768:2;17753:18;;17746:54;17832:2;17817:18;;17667:174::o;17846:340::-;18048:2;18030:21;;;18087:2;18067:18;;;18060:30;-1:-1:-1;;;18121:2:1;18106:18;;18099:46;18177:2;18162:18;;18020:166::o;18191:342::-;18393:2;18375:21;;;18432:2;18412:18;;;18405:30;-1:-1:-1;;;18466:2:1;18451:18;;18444:48;18524:2;18509:18;;18365:168::o;18538:177::-;18684:25;;;18672:2;18657:18;;18639:76::o;18720:248::-;18894:25;;;18950:2;18935:18;;18928:34;18882:2;18867:18;;18849:119::o;18973:327::-;19183:25;;;19239:2;19224:18;;19217:34;;;;19282:2;19267:18;;19260:34;19171:2;19156:18;;19138:162::o;19629:184::-;19801:4;19789:17;;;;19771:36;;19759:2;19744:18;;19726:87::o;19818:128::-;;19889:1;19885:6;19882:1;19879:13;19876:2;;;19895:18;;:::i;:::-;-1:-1:-1;19931:9:1;;19866:80::o;19951:204::-;;20025:4;20022:1;20018:12;20057:4;20054:1;20050:12;20092:3;20086:4;20082:14;20077:3;20074:23;20071:2;;;20100:18;;:::i;:::-;20136:13;;19997:158;-1:-1:-1;;;19997:158:1:o;20160:217::-;;20226:1;20216:2;;-1:-1:-1;;;20251:31:1;;20305:4;20302:1;20295:15;20333:4;20258:1;20323:15;20216:2;-1:-1:-1;20362:9:1;;20206:171::o;20382:168::-;;20488:1;20484;20480:6;20476:14;20473:1;20470:21;20465:1;20458:9;20451:17;20447:45;20444:2;;;20495:18;;:::i;:::-;-1:-1:-1;20535:9:1;;20434:116::o;20555:125::-;;20623:1;20620;20617:8;20614:2;;;20628:18;;:::i;:::-;-1:-1:-1;20665:9:1;;20604:76::o;20685:135::-;;-1:-1:-1;;20745:17:1;;20742:2;;;20765:18;;:::i;:::-;-1:-1:-1;20812:1:1;20801:13;;20732:88::o;20825:175::-;;20906:4;20899:5;20895:16;20935:4;20926:7;20923:17;20920:2;;;20943:18;;:::i;:::-;20992:1;20979:15;;20870:130;-1:-1:-1;;20870:130:1:o;21005:127::-;21066:10;21061:3;21057:20;21054:1;21047:31;21097:4;21094:1;21087:15;21121:4;21118:1;21111:15;21137:127;21198:10;21193:3;21189:20;21186:1;21179:31;21229:4;21226:1;21219:15;21253:4;21250:1;21243:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2910400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allUsers(uint256)": "2150",
								"claim(uint256)": "infinite",
								"claimEmergency(uint256)": "infinite",
								"directReferralIncome(address)": "1340",
								"directReferrals(address,uint256)": "3947",
								"getContractBalance()": "infinite",
								"getDirectReferralCount(address)": "1316",
								"getDirectReferralIncome(address)": "1359",
								"getEstimatedReturn(uint256,uint256)": "infinite",
								"getLevelIncome(address)": "1328",
								"getLevelIncomeDistribution(address)": "infinite",
								"getPositionIds(address)": "infinite",
								"getReferralIncomeDetails(address)": "infinite",
								"getStakeByPositionId(uint256)": "infinite",
								"getTotalIncome(address)": "1321",
								"getTotalLevelIncome(address)": "1371",
								"getTotalUsers()": "1096",
								"getUserLevel(address)": "infinite",
								"isRegistered(address)": "1355",
								"levelRewards(uint256)": "2853",
								"owner()": "1181",
								"ownerTransfer(address,uint256)": "infinite",
								"positionIdToUser(uint256)": "1282",
								"register(address)": "153516",
								"setLevelRewards(uint8[5])": "infinite",
								"setStakingAPY(uint256,uint256)": "21291",
								"stake(uint256,uint256)": "infinite",
								"stakeCounter()": "1138",
								"stakingAPY(uint256)": "1260",
								"usdtToken()": "1137",
								"users(address)": "3871",
								"withdrawUSDT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1880,
									"end": 1881,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1883,
									"end": 1884,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1889,
									"end": 1890,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1848,
									"end": 1894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 517,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 517,
									"end": 838,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 567,
									"end": 577,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 559,
									"end": 577,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 587,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 633,
									"end": 638,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 633,
									"end": 638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 638,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 633,
									"end": 638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 627,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 627,
									"end": 639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 627,
									"end": 639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 627,
									"end": 639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 627,
									"end": 639,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 627,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 627,
									"end": 650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 627,
									"end": 650,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 627,
									"end": 650,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 627,
									"end": 657,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 627,
									"end": 657,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 627,
									"end": 657,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 668,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 668,
									"end": 682,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 668,
									"end": 682,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 668,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 668,
									"end": 682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 668,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "B6BA906FF52451A7A924E2EAEB8AEA3EBEE7350A8703E5E417EDB25358C7DCC1"
								},
								{
									"begin": 668,
									"end": 686,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 710,
									"name": "PUSH",
									"source": 0,
									"value": "6CA6DCAFC04B6E03616746C3528366F990E332021E35D59275BE746D65CAE0A7"
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 696,
									"end": 714,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 725,
									"end": 739,
									"name": "PUSH",
									"source": 0,
									"value": "1727C0104C2870C3003671480695F7DAB262614528B49265008E76FD3D48C5FE"
								},
								{
									"begin": 725,
									"end": 743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 725,
									"end": 743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 725,
									"end": 743,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 725,
									"end": 743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 753,
									"end": 768,
									"name": "PUSH",
									"source": 0,
									"value": "5451FE6494362676DDB91456D9957C85D968E6F82956407C931A14C023049E6A"
								},
								{
									"begin": 753,
									"end": 772,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 753,
									"end": 772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 753,
									"end": 772,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 753,
									"end": 772,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 782,
									"end": 797,
									"name": "PUSH",
									"source": 0,
									"value": "FB78EB295A86B096B5F095822BD250A277112BE4103EA4A7608D96ECA726B2C1"
								},
								{
									"begin": 782,
									"end": 801,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 822,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "16D"
								},
								{
									"begin": 811,
									"end": 826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 811,
									"end": 826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 829,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 811,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "BBF8ADEA84D189C39869A372AB30AEBA9246EEA044EDC5A37AC100921B2C4E1"
								},
								{
									"begin": 811,
									"end": 831,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 19563,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e440ac19261fd8dd5565f47c079d9d4167ac2de7b821777b81661ac070fdf1264736f6c63430008000033",
									".code": [
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "98278EFB"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "C2D3C677"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "E45A57D0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "E45A57D0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "EF71AE56"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "F6E88873"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "F7B17D10"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "C2D3C677"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "C3C5A547"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "C5B89C0A"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "D85C8966"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "A98AD46C"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "AA7ED462"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "BD297178"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "98278EFB"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "9BE572F6"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "9D747BAD"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "A2BDEDF4"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "5BD4E16A"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "797C7F5F"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "797C7F5F"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "7B0472F0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "875BB4E2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "5BD4E16A"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "656596A5"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "6C8C2156"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "6F9FB98A"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "379607F5"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "379607F5"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "3EA521EF"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "4420E486"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "4850D2A2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "5AD3935"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "1E43EB27"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "21923BDE"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "28FE7031"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 19563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1641,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16488,
											"end": 16493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16574,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 16563,
											"end": 16574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16583,
											"end": 16584,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16576,
											"end": 16584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16576,
											"end": 16584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16607,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16598,
											"end": 16603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16617,
											"end": 16618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16610,
											"end": 16618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16610,
											"end": 16618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16632,
											"end": 16637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16632,
											"end": 16642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16628,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16628,
											"end": 16652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16651,
											"end": 16652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16644,
											"end": 16652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16644,
											"end": 16652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16644,
											"end": 16652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16644,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16644,
											"end": 16652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16628,
											"end": 16652,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16628,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16669,
											"end": 16670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16662,
											"end": 16670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16662,
											"end": 16670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13893,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13874,
											"end": 13893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13826,
											"end": 13842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 13953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 13953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13988,
											"end": 13993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 13993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14028,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14023,
											"end": 14042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14056,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14023,
											"end": 14056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14023,
											"end": 14056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14018,
											"end": 14019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13964,
											"end": 14067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14084,
											"end": 14087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13740,
											"end": 14094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8625,
											"end": 8636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8773,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8738,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 10608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8734,
											"end": 10608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8910,
											"end": 8927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8930,
											"end": 8936,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8910,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8887,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8859,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8937,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8815,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9030,
											"end": 9041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9054,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9062,
											"end": 9063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9030,
											"end": 9073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9030,
											"end": 9073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9139,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9133,
											"end": 9150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9154,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 9133,
											"end": 9156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9194,
											"end": 9202,
											"name": "PUSH",
											"source": 0,
											"value": "BB8"
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9129,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9237,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9238,
											"end": 9239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9231,
											"end": 9248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9254,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 9231,
											"end": 9254,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9292,
											"end": 9300,
											"name": "PUSH",
											"source": 0,
											"value": "1770"
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9227,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9329,
											"end": 9346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9350,
											"end": 9352,
											"name": "PUSH",
											"source": 0,
											"value": "5A"
										},
										{
											"begin": 9329,
											"end": 9352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9390,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "2328"
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9325,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9434,
											"end": 9435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9427,
											"end": 9451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "PUSH",
											"source": 0,
											"value": "2EE0"
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9423,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9527,
											"end": 9544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9551,
											"name": "PUSH",
											"source": 0,
											"value": "B4"
										},
										{
											"begin": 9527,
											"end": 9551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "PUSH",
											"source": 0,
											"value": "4650"
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9523,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9651,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 9627,
											"end": 9651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9689,
											"end": 9698,
											"name": "PUSH",
											"source": 0,
											"value": "8E94"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 9745,
											"end": 9783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9623,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9911,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9913,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9905,
											"end": 9922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9905,
											"end": 9922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9846,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9847,
											"end": 9848,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9856,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9840,
											"end": 9856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9840,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9840,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9839,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9983,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9984,
											"end": 9985,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9993,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9977,
											"end": 9993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10004,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 10004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10023,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10211,
											"end": 10215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10191,
											"end": 10197,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10208,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10191,
											"end": 10208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10266,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10248,
											"end": 10266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10278,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10291,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10248,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10310,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10414,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "PUSH",
											"source": 0,
											"value": "9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E"
										},
										{
											"begin": 10436,
											"end": 10442,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10444,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10482,
											"end": 10483,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10539,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10570,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10558,
											"end": 10570,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10558,
											"end": 10570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10588,
											"end": 10593,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 10608,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8734,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 10618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 10628,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 10687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18836,
											"end": 18841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18836,
											"end": 18841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18832,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18841,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18814,
											"end": 18869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18898,
											"end": 18903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18897,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 18879,
											"end": 18897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18898,
											"end": 18903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18898,
											"end": 18903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18898,
											"end": 18903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18905,
											"end": 18911,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18905,
											"end": 18911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18879,
											"end": 18912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18757,
											"end": 18919,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2311,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2411,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2381,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2455,
											"end": 2481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2481,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2455,
											"end": 2481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2447,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2669,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2735,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 8203,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8278,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8285,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14488,
											"end": 14495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14519,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8320,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 8402,
											"end": 8414,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8417,
											"end": 8427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10693,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10772,
											"end": 10791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10772,
											"end": 10791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10962,
											"end": 10975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10962,
											"end": 10975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10975,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11000,
											"end": 11020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11057,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11057,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11040,
											"end": 11057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 11000,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 10996,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11194,
											"end": 11195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11206,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11187,
											"end": 11206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11216,
											"name": "PUSH",
											"source": 0,
											"value": "D2F00"
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 11187,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11216,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 11139,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11319,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11343,
											"end": 11344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11352,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11336,
											"end": 11352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11407,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11390,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 11336,
											"end": 11352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11400,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11390,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11390,
											"end": 11400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11390,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 11390,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11370,
											"end": 11407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11425,
											"end": 11443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11446,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 11370,
											"end": 11407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11446,
											"end": 11452,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11446,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11446,
											"end": 11463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11446,
											"end": 11463,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 11446,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11549,
											"end": 11555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11549,
											"end": 11555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11530,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11511,
											"end": 11530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 11511,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11555,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 11555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 11482,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11665,
											"end": 11669,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11645,
											"end": 11651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11662,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11645,
											"end": 11662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 11778,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 11767,
											"end": 11778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11780,
											"end": 11790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11780,
											"end": 11790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 11748,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11729,
											"end": 11791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11729,
											"end": 11791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11817,
											"end": 11828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 11809,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11948,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11930,
											"end": 11948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12012,
											"name": "PUSH",
											"source": 0,
											"value": "9AB49A6105A768ED88B8AFD9CCA7F6886F739AAD"
										},
										{
											"begin": 11970,
											"end": 12012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12042,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 11930,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 12060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 12060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12078,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12171,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "9CDCF2F7714CCA3508C7F0110B04A90A80A3A8DD0E35DE99689DB74D28C5383E"
										},
										{
											"begin": 12173,
											"end": 12179,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12192,
											"end": 12202,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12192,
											"end": 12202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 12152,
											"end": 12206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10996,
											"end": 12275,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 10996,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 10938,
											"end": 12285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6322,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 6303,
											"end": 6322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6224,
											"end": 6344,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12746,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12777,
											"end": 12799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 12769,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12862,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12857,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12857,
											"end": 12879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12854,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12894,
											"end": 12903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12913,
											"end": 12919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12913,
											"end": 12926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 12910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 12926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12975,
											"end": 12986,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12951,
											"end": 12971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 12986,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 13682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 12947,
											"end": 13682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13006,
											"end": 13020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13030,
											"end": 13031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13006,
											"end": 13032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13006,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13080,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13080,
											"end": 13089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13080,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13146,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13137,
											"end": 13146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13149,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 13137,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13174,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13222,
											"end": 13225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13204,
											"end": 13219,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13204,
											"end": 13225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 13190,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13174,
											"end": 13225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13174,
											"end": 13225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13380,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13360,
											"end": 13367,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13350,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13349,
											"end": 13357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 13348,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 13348,
											"end": 13380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 13436,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13458,
											"end": 13459,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13489,
											"end": 13490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13489,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13489,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13489,
											"end": 13497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13519,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13519,
											"end": 13530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13519,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13555,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13584,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13606,
											"end": 13619,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13641,
											"end": 13649,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 13399,
											"end": 13667,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 13682,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 12947,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 13702,
											"end": 13727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 2066,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3076,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3140,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3259,
											"end": 3390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3305,
											"end": 3327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3305,
											"end": 3334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3297,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3411,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3458,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 3411,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3474,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3707,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3870,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3913,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3897,
											"end": 3921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3897,
											"end": 3933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3956,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 4007,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4245,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 4228,
											"end": 4234,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 4263,
											"end": 4304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 4331,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4396,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 4323,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4476,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 4457,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 4449,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4586,
											"end": 4598,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4586,
											"end": 4598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 4559,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4551,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4685,
											"end": 4697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4685,
											"end": 4697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4685,
											"end": 4697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4685,
											"end": 4697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 4744,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4715,
											"end": 4740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4902,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 5037,
											"end": 5233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5106,
											"end": 5126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 5205,
											"end": 5210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5233,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 5037,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5327,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 5299,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 5298,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5289,
											"end": 5330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5289,
											"end": 5330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5289,
											"end": 5330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5289,
											"end": 5330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5356,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5388,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 5356,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 5348,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 5452,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5553,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5548,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5548,
											"end": 5583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 4126,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 5768,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5767,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5758,
											"end": 5799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5840,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5821,
											"end": 5840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5865,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 5813,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5946,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 5913,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6008,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6028,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6003,
											"end": 6028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6038,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6057,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 4100,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6189,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 6213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 6215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14193,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14244,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14223,
											"end": 14251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14100,
											"end": 14258,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19116,
											"end": 19124,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19116,
											"end": 19131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19042,
											"end": 19138,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7759,
											"end": 7764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7765,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7843,
											"end": 7848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 7848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7886,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7942,
											"end": 7962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7936,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7937,
											"end": 7938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7992,
											"end": 8009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7992,
											"end": 8009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 7989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7976,
											"end": 8009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 8084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 487,
											"end": 510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 510,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14388,
											"end": 14414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6534,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 6516,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 6578,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6673,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 6726,
											"end": 6739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6726,
											"end": 6739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6769,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "BB8"
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 6722,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6811,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 6798,
											"end": 6811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6841,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "1770"
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 6794,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6870,
											"end": 6877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "5A"
										},
										{
											"begin": 6870,
											"end": 6883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "2328"
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 6866,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6942,
											"end": 6956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "2EE0"
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 6938,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "B4"
										},
										{
											"begin": 7016,
											"end": 7030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "PUSH",
											"source": 0,
											"value": "4650"
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 7012,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 7090,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7086,
											"end": 7223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7134,
											"end": 7143,
											"name": "PUSH",
											"source": 0,
											"value": "8E94"
										},
										{
											"begin": 7086,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 7086,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7271,
											"end": 7282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7251,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 7245,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7282,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7233,
											"end": 7282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7312,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7292,
											"end": 7323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7292,
											"end": 7323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 7330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16239,
											"end": 16246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16270,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16288,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16265,
											"end": 16288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 18988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18925,
											"end": 19036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2176,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19232,
											"end": 19248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19232,
											"end": 19248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 19224,
											"end": 19278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19305,
											"end": 19306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19296,
											"end": 19302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19296,
											"end": 19306,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 19288,
											"end": 19343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19369,
											"end": 19378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19369,
											"end": 19378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19387,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 19369,
											"end": 19387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19398,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 19369,
											"end": 19399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19417,
											"end": 19424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 19409,
											"end": 19450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16805,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16821,
											"end": 16839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16859,
											"end": 16868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16878,
											"end": 16886,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16878,
											"end": 16893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16874,
											"end": 16893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16874,
											"end": 16893,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16914,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16939,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16940,
											"end": 16941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16985,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16980,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 17000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "tag",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17014,
											"end": 17028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 17000,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17131,
											"end": 17150,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17123,
											"end": 17128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17150,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17123,
											"end": 17150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17150,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 17123,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17251,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17236,
											"end": 17251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17236,
											"end": 17251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 17232,
											"end": 17321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17289,
											"end": 17302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17289,
											"end": 17302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17321,
											"name": "tag",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 17232,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17352,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17068,
											"end": 17384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 17394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17464,
											"end": 17474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17442,
											"end": 17475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17518,
											"end": 17527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17537,
											"end": 17545,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17537,
											"end": 17552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17533,
											"end": 17552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17533,
											"end": 17552,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17599,
											"end": 17600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17644,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17639,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17673,
											"end": 17687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17695,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17690,
											"end": 17712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "tag",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17809,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17782,
											"end": 17787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17809,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17782,
											"end": 17809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 17833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 17782,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17910,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17895,
											"end": 17901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17895,
											"end": 17910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 18644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 18644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 17891,
											"end": 18644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17939,
											"end": 17948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "tag",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 17964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 17971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17954,
											"end": 17955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17954,
											"end": 17971,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18031,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18032,
											"end": 18033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18144,
											"end": 18147,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18093,
											"end": 18105,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18106,
											"end": 18111,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18093,
											"end": 18112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18078,
											"end": 18090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 18078,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 18077,
											"end": 18147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18259,
											"end": 18264,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18303,
											"end": 18316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18359,
											"end": 18364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18359,
											"end": 18371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18359,
											"end": 18371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18359,
											"end": 18371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18468,
											"end": 18474,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18515,
											"end": 18520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18515,
											"end": 18530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18515,
											"end": 18530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18515,
											"end": 18530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18567,
											"end": 18572,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18575,
											"end": 18576,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18184,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "tag",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "tag",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 18626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17891,
											"end": 18644,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 17891,
											"end": 18644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18675,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "tag",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 18707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17554,
											"end": 17557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 17513,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18734,
											"end": 18744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18744,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16683,
											"end": 18751,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "324"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "648"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "649"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "649"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "651"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "651"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "648"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "653"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "619"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "653"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 789,
											"end": 798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 776,
											"end": 799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 772,
											"end": 805,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 769,
											"end": 771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 769,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 855,
											"end": 875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 851,
											"end": 885,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1061,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1006,
											"end": 1016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1037,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1062,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 997,
											"end": 999,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1186,
											"end": 1205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1215,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1366,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1403,
											"end": 1408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1416,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 1275,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1607,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 1607,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 1809,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 2104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2395,
											"end": 2566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2909,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 2820,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 3014,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3019,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3227,
											"end": 3602,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 3227,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3602,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3881,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3607,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3886,
											"end": 4231,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3886,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4236,
											"end": 4663,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4236,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4512,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4655,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4668,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4668,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5056,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5072,
											"end": 5090,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 5289,
											"end": 5308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 5383,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5736,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 6440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6008,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 5987,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6237,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6211,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6434,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 6440,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 6440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 7696,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6991,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7142,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7558,
											"end": 7587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7621,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 6970,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 7696,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 7696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 7900,
											"end": 7962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7973,
											"end": 8160,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7973,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8386,
											"end": 8733,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8386,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8629,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8691,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206E6F742072656769737465726564000000000000000000"
										},
										{
											"begin": 8661,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8738,
											"end": 9076,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8738,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9013,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9069,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9052,
											"end": 9070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8912,
											"end": 9076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9081,
											"end": 9426,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9081,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9324,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA103932B332B9103CB7BAB939B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9255,
											"end": 9426,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9431,
											"end": 9786,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9431,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9645,
											"end": 9675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9744,
											"name": "PUSH",
											"source": 1,
											"value": "44697265637420726566657272616C207472616E73666572206661696C656400"
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9684,
											"end": 9745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9779,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9762,
											"end": 9780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9791,
											"end": 10145,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 9791,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10071,
											"end": 10103,
											"name": "PUSH",
											"source": 1,
											"value": "4C6576656C203120726577617264207472616E73666572206661696C65640000"
										},
										{
											"begin": 10066,
											"end": 10068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10138,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10506,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 10150,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10364,
											"end": 10394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10464,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 10425,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10499,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10506,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10511,
											"end": 10864,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 10511,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10869,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 10869,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11112,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11083,
											"end": 11113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11216,
											"end": 11568,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 11216,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11418,
											"end": 11420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "4C6576656C20726577617264207472616E73666572206661696C656400000000"
										},
										{
											"begin": 11491,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11568,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11573,
											"end": 11977,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 11573,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11757,
											"end": 11778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11816,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206D757374207374616B65206265666F726520796F752063"
										},
										{
											"begin": 11848,
											"end": 11850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11919,
											"end": 11921,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11952,
											"end": 11971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11747,
											"end": 11977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11982,
											"end": 12329,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 11982,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12184,
											"end": 12186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12166,
											"end": 12187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12223,
											"end": 12225,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 12203,
											"end": 12221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12262,
											"end": 12287,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E207769746864726177000000000000000000"
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12305,
											"end": 12323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12305,
											"end": 12323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12156,
											"end": 12329,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12334,
											"end": 12686,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12334,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12518,
											"end": 12539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12518,
											"end": 12539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12518,
											"end": 12539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12575,
											"end": 12577,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12548,
											"end": 12578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12644,
											"name": "PUSH",
											"source": 1,
											"value": "556E737570706F72746564207374616B696E67206475726174696F6E00000000"
										},
										{
											"begin": 12609,
											"end": 12611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12587,
											"end": 12645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12679,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12686,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12691,
											"end": 13089,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12691,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12875,
											"end": 12896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12875,
											"end": 12896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12875,
											"end": 12896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 12912,
											"end": 12930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12905,
											"end": 12935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B65206E6F7420666F756E64206F7220616C726561647920636C61696D"
										},
										{
											"begin": 12966,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 13006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13037,
											"end": 13039,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13022,
											"end": 13040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13022,
											"end": 13040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13015,
											"end": 13047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13064,
											"end": 13083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12865,
											"end": 13089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13094,
											"end": 13439,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 13094,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13296,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13278,
											"end": 13299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 13315,
											"end": 13333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13308,
											"end": 13338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13369,
											"end": 13371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13430,
											"end": 13432,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13444,
											"end": 13792,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 13444,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13628,
											"end": 13649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13628,
											"end": 13649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13628,
											"end": 13649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13687,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 13665,
											"end": 13683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13658,
											"end": 13688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13750,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964207374616B696E67206475726174696F6E0000000000000000"
										},
										{
											"begin": 13719,
											"end": 13721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13704,
											"end": 13722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13697,
											"end": 13751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13783,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13768,
											"end": 13786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13768,
											"end": 13786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13792,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13797,
											"end": 14146,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 13797,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13999,
											"end": 14001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13981,
											"end": 14002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 14002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 14002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14040,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14104,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 14072,
											"end": 14074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14057,
											"end": 14075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14139,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14122,
											"end": 14140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 14146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14151,
											"end": 14507,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14151,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14353,
											"end": 14355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14335,
											"end": 14356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14365,
											"end": 14395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B696E6720706572696F64206E6F742079657420636F6D706C65746564"
										},
										{
											"begin": 14426,
											"end": 14428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14411,
											"end": 14429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14404,
											"end": 14466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14500,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14325,
											"end": 14507,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14512,
											"end": 14856,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 14512,
											"end": 14856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14714,
											"end": 14716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14753,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14726,
											"end": 14756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14787,
											"end": 14789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14847,
											"end": 14849,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14832,
											"end": 14850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14832,
											"end": 14850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14686,
											"end": 14856,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14861,
											"end": 15268,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 14861,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15065,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15045,
											"end": 15066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15045,
											"end": 15066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15045,
											"end": 15066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15102,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 15082,
											"end": 15100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15082,
											"end": 15100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15082,
											"end": 15100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15141,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "5265666572726572206D757374207374616B65206265666F726520796F752063"
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15121,
											"end": 15139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15121,
											"end": 15139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15114,
											"end": 15176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B7103932B3B4B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15192,
											"end": 15210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15261,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15243,
											"end": 15262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15243,
											"end": 15262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15035,
											"end": 15268,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15273,
											"end": 15612,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 15273,
											"end": 15612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15457,
											"end": 15478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15457,
											"end": 15478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15457,
											"end": 15478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15514,
											"end": 15516,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 15494,
											"end": 15512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15494,
											"end": 15512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15494,
											"end": 15512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15487,
											"end": 15517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD185AD9481B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15548,
											"end": 15550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15533,
											"end": 15551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15533,
											"end": 15551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15526,
											"end": 15571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15617,
											"end": 16023,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 15617,
											"end": 16023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15801,
											"end": 15822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15801,
											"end": 15822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15801,
											"end": 15822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15858,
											"end": 15860,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 15838,
											"end": 15856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15831,
											"end": 15861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15897,
											"end": 15931,
											"name": "PUSH",
											"source": 1,
											"value": "456D657267656E637920636C61696D20616C6C6F776564206F6E6C7920616674"
										},
										{
											"begin": 15892,
											"end": 15894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65722031302064617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15963,
											"end": 15965,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15948,
											"end": 15966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15948,
											"end": 15966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16013,
											"end": 16016,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15998,
											"end": 16017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15998,
											"end": 16017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 16023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16028,
											"end": 16427,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 16028,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16230,
											"end": 16232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16212,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16269,
											"end": 16271,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 16249,
											"end": 16267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16249,
											"end": 16267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16249,
											"end": 16267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16242,
											"end": 16272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16308,
											"end": 16342,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B6520616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 16303,
											"end": 16305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16281,
											"end": 16343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16374,
											"end": 16376,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16359,
											"end": 16377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16420,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16402,
											"end": 16421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16202,
											"end": 16427,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16432,
											"end": 16776,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 16432,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16616,
											"end": 16637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16675,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 16653,
											"end": 16671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155CD95C881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16707,
											"end": 16709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16692,
											"end": 16710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16685,
											"end": 16735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16769,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16752,
											"end": 16770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16606,
											"end": 16776,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16781,
											"end": 17130,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 16781,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 16985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16965,
											"end": 16986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 16986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 16986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17022,
											"end": 17024,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17002,
											"end": 17020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "PUSH",
											"source": 1,
											"value": "41646D696E20666565207472616E73666572206661696C656400000000000000"
										},
										{
											"begin": 17056,
											"end": 17058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17041,
											"end": 17059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17041,
											"end": 17059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17123,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17106,
											"end": 17124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16955,
											"end": 17130,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17135,
											"end": 17488,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 17135,
											"end": 17488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17337,
											"end": 17339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17319,
											"end": 17340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17319,
											"end": 17340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17319,
											"end": 17340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17376,
											"end": 17378,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 17356,
											"end": 17374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17356,
											"end": 17374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17356,
											"end": 17374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17349,
											"end": 17379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17415,
											"end": 17446,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 17410,
											"end": 17412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17479,
											"end": 17481,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17464,
											"end": 17482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17464,
											"end": 17482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17309,
											"end": 17488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17493,
											"end": 17841,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 17493,
											"end": 17841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17695,
											"end": 17697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17677,
											"end": 17698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17677,
											"end": 17698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17677,
											"end": 17698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17734,
											"end": 17736,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17773,
											"end": 17799,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869730000000000000000"
										},
										{
											"begin": 17768,
											"end": 17770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17746,
											"end": 17800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17832,
											"end": 17834,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17817,
											"end": 17835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17817,
											"end": 17835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17667,
											"end": 17841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17846,
											"end": 18186,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 17846,
											"end": 18186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18048,
											"end": 18050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18089,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 18067,
											"end": 18085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18067,
											"end": 18085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18067,
											"end": 18085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18060,
											"end": 18090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44617973206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18121,
											"end": 18123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18106,
											"end": 18124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18106,
											"end": 18124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18099,
											"end": 18145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18162,
											"end": 18180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18162,
											"end": 18180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18020,
											"end": 18186,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18191,
											"end": 18533,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 18191,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18393,
											"end": 18395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18375,
											"end": 18396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18375,
											"end": 18396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18375,
											"end": 18396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18432,
											"end": 18434,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18412,
											"end": 18430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18412,
											"end": 18430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18412,
											"end": 18430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18405,
											"end": 18435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1BDCDA5D1A5BDB9259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18466,
											"end": 18468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18451,
											"end": 18469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18451,
											"end": 18469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18444,
											"end": 18492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18524,
											"end": 18526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18509,
											"end": 18527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18509,
											"end": 18527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18538,
											"end": 18715,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 18538,
											"end": 18715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18684,
											"end": 18709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18684,
											"end": 18709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18684,
											"end": 18709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18672,
											"end": 18674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18657,
											"end": 18675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18715,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18720,
											"end": 18968,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 18720,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18894,
											"end": 18919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18894,
											"end": 18919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18894,
											"end": 18919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 18952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18928,
											"end": 18962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18882,
											"end": 18884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18867,
											"end": 18885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18867,
											"end": 18885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18973,
											"end": 19300,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 18973,
											"end": 19300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19183,
											"end": 19208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19183,
											"end": 19208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19183,
											"end": 19208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19239,
											"end": 19241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19224,
											"end": 19242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19224,
											"end": 19242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19282,
											"end": 19284,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19267,
											"end": 19285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19171,
											"end": 19173,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19156,
											"end": 19174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19156,
											"end": 19174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19138,
											"end": 19300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19629,
											"end": 19813,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 19629,
											"end": 19813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19801,
											"end": 19805,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19789,
											"end": 19806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19726,
											"end": 19813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19818,
											"end": 19946,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 19818,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 19946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19889,
											"end": 19890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19885,
											"end": 19891,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19882,
											"end": 19883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19879,
											"end": 19892,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19878,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 19876,
											"end": 19878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19931,
											"end": 19940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 19940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19866,
											"end": 19946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19951,
											"end": 20155,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 19951,
											"end": 20155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19951,
											"end": 20155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20025,
											"end": 20029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20022,
											"end": 20023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20018,
											"end": 20030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20057,
											"end": 20061,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20054,
											"end": 20055,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20092,
											"end": 20095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20086,
											"end": 20090,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20082,
											"end": 20096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20074,
											"end": 20097,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20071,
											"end": 20073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20071,
											"end": 20073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 20071,
											"end": 20073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20100,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 20100,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20100,
											"end": 20118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20100,
											"end": 20118,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 20100,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20149,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19997,
											"end": 20155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19997,
											"end": 20155,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20160,
											"end": 20377,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 20160,
											"end": 20377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20160,
											"end": 20377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20226,
											"end": 20227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20251,
											"end": 20282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20305,
											"end": 20309,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 20302,
											"end": 20303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20295,
											"end": 20310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20333,
											"end": 20337,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20258,
											"end": 20259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20323,
											"end": 20338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20362,
											"end": 20371,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20362,
											"end": 20371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20206,
											"end": 20377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20382,
											"end": 20550,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 20382,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20382,
											"end": 20550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20480,
											"end": 20486,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20490,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20473,
											"end": 20474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20470,
											"end": 20491,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20465,
											"end": 20466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20458,
											"end": 20467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20451,
											"end": 20468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20447,
											"end": 20492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 20444,
											"end": 20446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20495,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 20495,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20495,
											"end": 20513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20495,
											"end": 20513,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 20495,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20535,
											"end": 20544,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20434,
											"end": 20550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20555,
											"end": 20680,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 20555,
											"end": 20680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20555,
											"end": 20680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20623,
											"end": 20624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20620,
											"end": 20621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20617,
											"end": 20625,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 20614,
											"end": 20616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20628,
											"end": 20646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 20628,
											"end": 20646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20628,
											"end": 20646,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20628,
											"end": 20646,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 20628,
											"end": 20646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20665,
											"end": 20674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20604,
											"end": 20680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20685,
											"end": 20820,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 20685,
											"end": 20820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20685,
											"end": 20820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20745,
											"end": 20762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20745,
											"end": 20762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20742,
											"end": 20744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20742,
											"end": 20744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 20742,
											"end": 20744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 20765,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20765,
											"end": 20783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20765,
											"end": 20783,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 20765,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20812,
											"end": 20813,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20801,
											"end": 20814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20732,
											"end": 20820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20825,
											"end": 21000,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 20825,
											"end": 21000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20825,
											"end": 21000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20910,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20899,
											"end": 20904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20895,
											"end": 20911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 20926,
											"end": 20933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20923,
											"end": 20940,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20920,
											"end": 20922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20920,
											"end": 20922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 20920,
											"end": 20922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20992,
											"end": 20993,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20979,
											"end": 20994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20979,
											"end": 20994,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 21000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20870,
											"end": 21000,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21005,
											"end": 21132,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 21005,
											"end": 21132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21066,
											"end": 21076,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 21061,
											"end": 21064,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21057,
											"end": 21077,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21054,
											"end": 21055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21047,
											"end": 21078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21097,
											"end": 21101,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 21094,
											"end": 21095,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21087,
											"end": 21102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21121,
											"end": 21125,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21118,
											"end": 21119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21111,
											"end": 21126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21264,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 21137,
											"end": 21264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21198,
											"end": 21208,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 21193,
											"end": 21196,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21189,
											"end": 21209,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21186,
											"end": 21187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21179,
											"end": 21210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21233,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 21226,
											"end": 21227,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21219,
											"end": 21234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21253,
											"end": 21257,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21250,
											"end": 21251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21243,
											"end": 21258,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allUsers(uint256)": "a2bdedf4",
							"claim(uint256)": "379607f5",
							"claimEmergency(uint256)": "6c8c2156",
							"directReferralIncome(address)": "f6e88873",
							"directReferrals(address,uint256)": "05ad3935",
							"getContractBalance()": "6f9fb98a",
							"getDirectReferralCount(address)": "98278efb",
							"getDirectReferralIncome(address)": "aa7ed462",
							"getEstimatedReturn(uint256,uint256)": "bd297178",
							"getLevelIncome(address)": "5bd4e16a",
							"getLevelIncomeDistribution(address)": "ef71ae56",
							"getPositionIds(address)": "28fe7031",
							"getReferralIncomeDetails(address)": "9d747bad",
							"getStakeByPositionId(uint256)": "797c7f5f",
							"getTotalIncome(address)": "c2d3c677",
							"getTotalLevelIncome(address)": "c5b89c0a",
							"getTotalUsers()": "9be572f6",
							"getUserLevel(address)": "21923bde",
							"isRegistered(address)": "c3c5a547",
							"levelRewards(uint256)": "e45a57d0",
							"owner()": "8da5cb5b",
							"ownerTransfer(address,uint256)": "d85c8966",
							"positionIdToUser(uint256)": "1e43eb27",
							"register(address)": "4420e486",
							"setLevelRewards(uint8[5])": "656596a5",
							"setStakingAPY(uint256,uint256)": "4850d2a2",
							"stake(uint256,uint256)": "7b0472f0",
							"stakeCounter()": "f7b17d10",
							"stakingAPY(uint256)": "875bb4e2",
							"usdtToken()": "a98ad46c",
							"users(address)": "a87430ba",
							"withdrawUSDT(uint256)": "3ea521ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"claimEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"directReferralIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"directReferrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"incomeEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDirectReferralCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDirectReferralIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"}],\"name\":\"getEstimatedReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLevelIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLevelIncomeDistribution\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incomeReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uplineAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"internalType\":\"struct SikkaStakingDecentralize.LevelIncomeData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPositionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getReferralIncomeDetails\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"referralAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"incomes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positionId\",\"type\":\"uint256\"}],\"name\":\"getStakeByPositionId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"perDayInterest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalLevelIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelRewards\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionIdToUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"newRewards\",\"type\":\"uint8[5]\"}],\"name\":\"setLevelRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"name\":\"setStakingAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"levelIncome\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/roy.sol\":\"SikkaStakingDecentralize\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/roy.sol\":{\"keccak256\":\"0xe0334600b48085bf1d45f394a9b91bcda6dcd438d9a400388e5dfee2858f56c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92dd1712163f7488be462c70435ba54ae1f2be1baacd861c2badd0f72c4648a6\",\"dweb:/ipfs/QmPF7mMkRepvioZxBSRodmk5JckM9gme4LKtrtVqRAaadC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 33,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "stakeCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 36,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "usdtToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)29"
							},
							{
								"astId": 149,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "users",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(User)129_storage)"
							},
							{
								"astId": 155,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "directReferrals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(ReferralInfo)116_storage)dyn_storage)"
							},
							{
								"astId": 159,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "positionIdToUser",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 163,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "stakingAPY",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 167,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "directReferralIncome",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 170,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "allUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 180,
								"contract": "contracts/roy.sol:SikkaStakingDecentralize",
								"label": "levelRewards",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_uint8)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(ReferralInfo)116_storage)dyn_storage": {
								"base": "t_struct(ReferralInfo)116_storage",
								"encoding": "dynamic_array",
								"label": "struct SikkaStakingDecentralize.ReferralInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Stake)109_storage)dyn_storage": {
								"base": "t_struct(Stake)109_storage",
								"encoding": "dynamic_array",
								"label": "struct SikkaStakingDecentralize.Stake[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)29": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(ReferralInfo)116_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(ReferralInfo)116_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(User)129_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SikkaStakingDecentralize.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)129_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(ReferralInfo)116_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.ReferralInfo",
								"members": [
									{
										"astId": 111,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "referralAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 113,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "incomeEarned",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 115,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Stake)109_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.Stake",
								"members": [
									{
										"astId": 98,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "stakeId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 100,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "positionId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "numDays",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "claimed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(User)129_storage": {
								"encoding": "inplace",
								"label": "struct SikkaStakingDecentralize.User",
								"members": [
									{
										"astId": 118,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "referrer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 122,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "stakes",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Stake)109_storage)dyn_storage"
									},
									{
										"astId": 124,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "totalIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 126,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "levelIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 128,
										"contract": "contracts/roy.sol:SikkaStakingDecentralize",
										"label": "registered",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n   --> contracts/roy.sol:583:25:\n    |\n583 |                         Stake memory stake = stakes[j];\n    |                         ^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n   --> contracts/roy.sol:124:2:\n    |\n124 |  function stake(uint256 numDays, uint256 amount) external onlyRegistered {\n    |  ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 6215,
						"file": "contracts/roy.sol",
						"message": "The other declaration is here:",
						"start": 2998
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 18022,
					"file": "contracts/roy.sol",
					"start": 18004
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/roy.sol": {
				"ast": {
					"absolutePath": "contracts/roy.sol",
					"exportedSymbols": {
						"IERC20": [
							29
						],
						"SikkaStakingDecentralize": [
							1950
						]
					},
					"id": 1951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "103:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "143:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:0"
									},
									"scope": 29,
									"src": "84:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "176:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "195:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:35:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:6:0"
									},
									"scope": 29,
									"src": "158:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "312:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "339:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:81:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:6:0"
									},
									"scope": 29,
									"src": "257:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1951,
							"src": "61:325:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1950,
							"linearizedBaseContracts": [
								1950
							],
							"name": "SikkaStakingDecentralize",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 31,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "428:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "428:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b17d10",
									"id": 33,
									"mutability": "mutable",
									"name": "stakeCounter",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "454:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 36,
									"mutability": "mutable",
									"name": "usdtToken",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "487:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$29",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 29,
											"src": "487:6:0"
										},
										"referencedDeclaration": 29,
										"src": "487:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$29",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "549:289:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "559:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 42,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "567:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "567:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "559:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "559:18:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "587:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$29",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 48,
																"name": "_usdtToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 47,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$29_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "599:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$29",
															"typeString": "contract IERC20"
														}
													},
													"src": "587:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$29",
														"typeString": "contract IERC20"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "587:30:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 52,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "627:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 54,
															"indexExpression": {
																"id": 53,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "627:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 128,
														"src": "627:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "653:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "627:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "627:30:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 59,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 61,
														"indexExpression": {
															"hexValue": "3330",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "679:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "668:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "668:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "668:18:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 65,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "696:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 67,
														"indexExpression": {
															"hexValue": "3630",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "707:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "696:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "696:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "696:18:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 71,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "725:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 73,
														"indexExpression": {
															"hexValue": "3930",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "736:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "725:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "742:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "725:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "725:18:0"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 77,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "753:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 79,
														"indexExpression": {
															"hexValue": "313230",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_120_by_1",
																"typeString": "int_const 120"
															},
															"value": "120"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "753:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "753:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "753:19:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 83,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "782:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 85,
														"indexExpression": {
															"hexValue": "313830",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "782:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "39",
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "782:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "782:19:0"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 89,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "811:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 91,
														"indexExpression": {
															"hexValue": "333635",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "822:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															},
															"value": "365"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "811:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "829:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "811:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "811:20:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_usdtToken",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "529:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:20:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:0"
									},
									"scope": 1950,
									"src": "517:321:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.Stake",
									"id": 109,
									"members": [
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "stakeId",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "867:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "867:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "positionId",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "892:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "892:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "920:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "944:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "944:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "numDays",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "971:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "971:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "claimed",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "996:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 107,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "996:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nodeType": "StructDefinition",
									"scope": 1950,
									"src": "844:171:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.ReferralInfo",
									"id": 116,
									"members": [
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "referralAddress",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1051:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1051:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "incomeEarned",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1084:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1084:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 116,
											"src": "1114:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1114:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReferralInfo",
									"nodeType": "StructDefinition",
									"scope": 1950,
									"src": "1021:117:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.User",
									"id": 129,
									"members": [
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "referrer",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1172:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1172:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 122,
											"mutability": "mutable",
											"name": "stakes",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1198:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 119,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 109,
														"src": "1198:5:0"
													},
													"referencedDeclaration": 109,
													"src": "1198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
														"typeString": "struct SikkaStakingDecentralize.Stake"
													}
												},
												"id": 121,
												"nodeType": "ArrayTypeName",
												"src": "1198:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
													"typeString": "struct SikkaStakingDecentralize.Stake[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 124,
											"mutability": "mutable",
											"name": "totalIncome",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1222:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1222:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "levelIncome",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1251:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1251:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "registered",
											"nodeType": "VariableDeclaration",
											"scope": 129,
											"src": "1280:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 127,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1280:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 1950,
									"src": "1150:152:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SikkaStakingDecentralize.LevelIncomeData",
									"id": 144,
									"members": [
										{
											"constant": false,
											"id": 131,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1341:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1341:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 133,
											"mutability": "mutable",
											"name": "stakeId",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1374:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1374:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "stakeAmount",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1399:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1399:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "incomeReceived",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1428:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1428:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "uplineAddress",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1460:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 138,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1460:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1491:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1491:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "1518:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 142,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1518:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LevelIncomeData",
									"nodeType": "StructDefinition",
									"scope": 1950,
									"src": "1308:228:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 149,
									"mutability": "mutable",
									"name": "users",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1541:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
										"typeString": "mapping(address => struct SikkaStakingDecentralize.User)"
									},
									"typeName": {
										"id": 148,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1549:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1541:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
											"typeString": "mapping(address => struct SikkaStakingDecentralize.User)"
										},
										"valueType": {
											"id": 147,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 146,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "1560:4:0"
											},
											"referencedDeclaration": 129,
											"src": "1560:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$129_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05ad3935",
									"id": 155,
									"mutability": "mutable",
									"name": "directReferrals",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1584:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])"
									},
									"typeName": {
										"id": 154,
										"keyType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1592:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1584:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo[])"
										},
										"valueType": {
											"baseType": {
												"id": 152,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 151,
													"name": "ReferralInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 116,
													"src": "1603:12:0"
												},
												"referencedDeclaration": 116,
												"src": "1603:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
													"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
												}
											},
											"id": 153,
											"nodeType": "ArrayTypeName",
											"src": "1603:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
												"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e43eb27",
									"id": 159,
									"mutability": "mutable",
									"name": "positionIdToUser",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1647:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1655:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1647:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 157,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1666:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "875bb4e2",
									"id": 163,
									"mutability": "mutable",
									"name": "stakingAPY",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1704:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 162,
										"keyType": {
											"id": 160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1712:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1704:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 161,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1723:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6e88873",
									"id": 167,
									"mutability": "mutable",
									"name": "directReferralIncome",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1755:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 166,
										"keyType": {
											"id": 164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1763:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1755:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1774:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2bdedf4",
									"id": 170,
									"mutability": "mutable",
									"name": "allUsers",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 168,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1817:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 169,
										"nodeType": "ArrayTypeName",
										"src": "1817:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e45a57d0",
									"id": 180,
									"mutability": "mutable",
									"name": "levelRewards",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "1848:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint8_$5_storage",
										"typeString": "uint8[5]"
									},
									"typeName": {
										"baseType": {
											"id": 171,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1848:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"id": 173,
										"length": {
											"hexValue": "35",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1854:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "ArrayTypeName",
										"src": "1848:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
											"typeString": "uint8[5]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "35",
												"id": 174,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1880:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "33",
												"id": 175,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1883:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "32",
												"id": 176,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1886:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "31",
												"id": 177,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1889:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 178,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1892:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 179,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1879:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
											"typeString": "uint8[5] memory"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 190,
									"name": "Claimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1924:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeId",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2003:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:109:0"
									},
									"src": "1901:123:0"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2056:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 193,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2074:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 196,
																"indexExpression": {
																	"expression": {
																		"id": 194,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2080:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2080:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2074:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 128,
															"src": "2074:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742072656769737465726564",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5",
																"typeString": "literal_string \"Not registered\""
															},
															"value": "Not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5",
																"typeString": "literal_string \"Not registered\""
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2066:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2066:55:0"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "2131:1:0"
											}
										]
									},
									"id": 203,
									"name": "onlyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:2:0"
									},
									"src": "2030:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2166:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 206,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2184:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2184:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 208,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2198:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2184:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c2074686973",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3",
																"typeString": "literal_string \"Only owner can call this\""
															},
															"value": "Only owner can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee2d85154df480e6b29218e1fcd2c3ed9a2b632aac5f4287659e7fb9381e5bf3",
																"typeString": "literal_string \"Only owner can call this\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2176:56:0"
											},
											{
												"id": 213,
												"nodeType": "PlaceholderStatement",
												"src": "2242:1:0"
											}
										]
									},
									"id": 215,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:2:0"
									},
									"src": "2145:105:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2301:691:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2319:29:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 221,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "2320:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 224,
																	"indexExpression": {
																		"expression": {
																			"id": 222,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2326:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2326:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2320:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "registered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 128,
																"src": "2320:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792072656769737465726564",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2350:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															},
															"value": "Already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2311:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 231,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2389:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 232,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2401:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2401:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2389:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2413:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2381:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2381:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2381:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 239,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2455:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"id": 240,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2461:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2455:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 128,
															"src": "2455:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265666572726572206e6f742072656769737465726564",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636",
																"typeString": "literal_string \"Referrer not registered\""
															},
															"value": "Referrer not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_042ee866aa1e6eafafb8d11db87d0135f7842b5a8e15b22855dd8c03a87f2636",
																"typeString": "literal_string \"Referrer not registered\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2447:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 247,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2540:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																				"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																			}
																		},
																		"id": 249,
																		"indexExpression": {
																			"id": 248,
																			"name": "referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "2546:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2540:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$129_storage",
																			"typeString": "struct SikkaStakingDecentralize.User storage ref"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 122,
																	"src": "2540:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																		"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2540:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2540:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265666572726572206d757374207374616b65206265666f726520796f752063616e207265676973746572",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2587:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba",
																"typeString": "literal_string \"Referrer must stake before you can register\""
															},
															"value": "Referrer must stake before you can register"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c27a69858ed0e90024efa12d3e5b69fd728330799f690d42b4b505f0f35f03ba",
																"typeString": "literal_string \"Referrer must stake before you can register\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2519:123:0"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 257,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2653:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 260,
															"indexExpression": {
																"expression": {
																	"id": 258,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2659:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2659:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2653:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "2653:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 262,
														"name": "referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2682:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2653:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2653:37:0"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 265,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 268,
															"indexExpression": {
																"expression": {
																	"id": 266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2706:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2700:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 128,
														"src": "2700:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2731:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2700:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2700:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 273,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2745:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2745:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2745:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2873:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2873:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 288,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2945:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2945:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 284,
																"name": "ReferralInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2825:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ReferralInfo_$116_storage_ptr_$",
																	"typeString": "type(struct SikkaStakingDecentralize.ReferralInfo storage pointer)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"referralAddress",
																"incomeEarned",
																"timestamp"
															],
															"nodeType": "FunctionCall",
															"src": "2825:150:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReferralInfo_$116_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ReferralInfo_$116_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 280,
																"name": "directReferrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2781:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
																}
															},
															"id": 282,
															"indexExpression": {
																"id": 281,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2797:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2781:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2781:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ReferralInfo_$116_storage_$returns$__$",
															"typeString": "function (struct SikkaStakingDecentralize.ReferralInfo storage ref)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:204:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2781:204:0"
											}
										]
									},
									"functionSelector": "4420e486",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2274:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:18:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:0:0"
									},
									"scope": 1950,
									"src": "2256:736:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3070:3145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "3084:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3093:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3084:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3096:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															},
															"value": "Stake amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "3076:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 311,
																	"name": "stakingAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "3148:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 313,
																"indexExpression": {
																	"id": 312,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "3159:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3148:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3170:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3148:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e67206475726174696f6e",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3173:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															},
															"value": "Invalid staking duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3140:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "3140:60:0"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "referrer",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3207:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3207:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 321,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 324,
														"indexExpression": {
															"expression": {
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3232:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3232:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3226:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 118,
													"src": "3226:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3207:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3263:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3275:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3275:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3263:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 345,
												"nodeType": "IfStatement",
												"src": "3259:131:0",
												"trueBody": {
													"id": 344,
													"nodeType": "Block",
													"src": "3287:103:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 334,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "3305:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 336,
																					"indexExpression": {
																						"id": 335,
																						"name": "referrer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 320,
																						"src": "3311:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3305:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 122,
																				"src": "3305:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "3305:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3337:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3305:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5265666572726572206d757374207374616b65206265666f726520796f752063616e207374616b65",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3340:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1",
																			"typeString": "literal_string \"Referrer must stake before you can stake\""
																		},
																		"value": "Referrer must stake before you can stake"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5be483b4422b97a99c88f7cc044325e2da1dd8cd3ad910925151e9873cbceea1",
																			"typeString": "literal_string \"Referrer must stake before you can stake\""
																		}
																	],
																	"id": 333,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3297:86:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 343,
															"nodeType": "ExpressionStatement",
															"src": "3297:86:0"
														}
													]
												}
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3396:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3396:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3434:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 354,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3446:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3446:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 348,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "3411:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "3411:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3396:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3491:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3474:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "3474:40:0"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "positionId",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3521:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "3542:14:0",
													"subExpression": {
														"id": 366,
														"name": "stakeCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3544:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "stakeCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "3631:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 377,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3669:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 378,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "3701:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 379,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3732:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3732:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 381,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "3770:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 375,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$109_storage_ptr_$",
																	"typeString": "type(struct SikkaStakingDecentralize.Stake storage pointer)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"stakeId",
																"positionId",
																"amount",
																"timestamp",
																"numDays",
																"claimed"
															],
															"nodeType": "FunctionCall",
															"src": "3602:214:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 369,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "3563:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 372,
																"indexExpression": {
																	"expression": {
																		"id": 370,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3569:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3569:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3563:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 122,
															"src": "3563:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3563:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Stake_$109_storage_$returns$__$",
															"typeString": "function (struct SikkaStakingDecentralize.Stake storage ref)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3563:259:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3563:259:0"
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 386,
															"name": "positionIdToUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3829:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 388,
														"indexExpression": {
															"id": 387,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3846:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3829:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 389,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3860:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3860:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3829:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3829:41:0"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "isFirstStake",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3877:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 393,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 395,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "3897:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																		"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																	}
																},
																"id": 398,
																"indexExpression": {
																	"expression": {
																		"id": 396,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3903:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3903:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3897:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$129_storage",
																	"typeString": "struct SikkaStakingDecentralize.User storage ref"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 122,
															"src": "3897:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3897:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3932:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3897:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3877:56:0"
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "upline",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3939:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3939:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 406,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 409,
														"indexExpression": {
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3962:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3962:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3956:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 118,
													"src": "3956:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3939:43:0"
											},
											{
												"body": {
													"id": 657,
													"nodeType": "Block",
													"src": "4061:2152:0",
													"statements": [
														{
															"assignments": [
																431
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 431,
																	"mutability": "mutable",
																	"name": "reward",
																	"nodeType": "VariableDeclaration",
																	"scope": 657,
																	"src": "4071:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 430,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4071:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 433,
															"initialValue": {
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4088:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4071:18:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "4104:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 648,
																"nodeType": "Block",
																"src": "5744:421:0",
																"statements": [
																	{
																		"expression": {
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 601,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "5758:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 606,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 602,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 298,
																								"src": "5768:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 603,
																									"name": "levelRewards",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 180,
																									"src": "5777:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint8_$5_storage",
																										"typeString": "uint8[5] storage ref"
																									}
																								},
																								"id": 605,
																								"indexExpression": {
																									"id": 604,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 413,
																									"src": "5790:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5777:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "5768:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 607,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5767:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5796:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "5767:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5758:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 611,
																		"nodeType": "ExpressionStatement",
																		"src": "5758:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 617,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "5849:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 616,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "5841:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 615,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "5841:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 618,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5841:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 613,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "5821:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 614,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "5821:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5821:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 620,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 431,
																						"src": "5859:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5821:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5867:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 612,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "5813:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5813:86:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 624,
																		"nodeType": "ExpressionStatement",
																		"src": "5813:86:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 628,
																							"name": "upline",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 405,
																							"src": "5940:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 629,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "5948:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 626,
																							"name": "usdtToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 36,
																							"src": "5921:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$29",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 627,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 17,
																						"src": "5921:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,uint256) external returns (bool)"
																						}
																					},
																					"id": 630,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5921:34:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4c6576656c20726577617264207472616e73666572206661696c6564",
																					"id": 631,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5957:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0",
																						"typeString": "literal_string \"Level reward transfer failed\""
																					},
																					"value": "Level reward transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5893030032b12d20d9d4d89f130cfe56fd73d075277f8e1e336eeeb1f7ef4bc0",
																						"typeString": "literal_string \"Level reward transfer failed\""
																					}
																				],
																				"id": 625,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "5913:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5913:75:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 633,
																		"nodeType": "ExpressionStatement",
																		"src": "5913:75:0"
																	},
																	{
																		"expression": {
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 634,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "6003:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 636,
																					"indexExpression": {
																						"id": 635,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 405,
																						"src": "6009:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6003:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 637,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "totalIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "6003:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 638,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "6032:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6003:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 640,
																		"nodeType": "ExpressionStatement",
																		"src": "6003:35:0"
																	},
																	{
																		"expression": {
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 641,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "6052:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 643,
																					"indexExpression": {
																						"id": 642,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 405,
																						"src": "6058:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6052:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "levelIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 126,
																				"src": "6052:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 645,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "6081:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6052:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 647,
																		"nodeType": "ExpressionStatement",
																		"src": "6052:35:0"
																	}
																]
															},
															"id": 649,
															"nodeType": "IfStatement",
															"src": "4100:2065:0",
															"trueBody": {
																"id": 600,
																"nodeType": "Block",
																"src": "4112:1626:0",
																"statements": [
																	{
																		"condition": {
																			"id": 437,
																			"name": "isFirstStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "4130:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 598,
																			"nodeType": "Block",
																			"src": "5271:457:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 551,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "5289:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 559,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 556,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 552,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 298,
																											"src": "5299:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"baseExpression": {
																												"id": 553,
																												"name": "levelRewards",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 180,
																												"src": "5308:12:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint8_$5_storage",
																													"typeString": "uint8[5] storage ref"
																												}
																											},
																											"id": 555,
																											"indexExpression": {
																												"id": 554,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 413,
																												"src": "5321:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5308:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "5299:24:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 557,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "5298:26:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "313030",
																								"id": 558,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5327:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							},
																							"src": "5298:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5289:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 561,
																					"nodeType": "ExpressionStatement",
																					"src": "5289:41:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 571,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"id": 567,
																													"name": "this",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967268,
																													"src": "5384:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												],
																												"id": 566,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "5376:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_$",
																													"typeString": "type(address)"
																												},
																												"typeName": {
																													"id": 565,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "5376:7:0",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 568,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5376:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"id": 563,
																											"name": "usdtToken",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 36,
																											"src": "5356:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$29",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 564,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "balanceOf",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 8,
																										"src": "5356:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																											"typeString": "function (address) view external returns (uint256)"
																										}
																									},
																									"id": 569,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5356:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"id": 570,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 431,
																									"src": "5394:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5356:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																								"id": 572,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5402:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								},
																								"value": "Insufficient contract balance"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								}
																							],
																							"id": 562,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "5348:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5348:86:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 574,
																					"nodeType": "ExpressionStatement",
																					"src": "5348:86:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 578,
																										"name": "upline",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 405,
																										"src": "5479:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"id": 579,
																										"name": "reward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 431,
																										"src": "5487:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 576,
																										"name": "usdtToken",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 36,
																										"src": "5460:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$29",
																											"typeString": "contract IERC20"
																										}
																									},
																									"id": 577,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "transfer",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 17,
																									"src": "5460:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																										"typeString": "function (address,uint256) external returns (bool)"
																									}
																								},
																								"id": 580,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5460:34:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "4c6576656c203120726577617264207472616e73666572206661696c6564",
																								"id": 581,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5496:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								},
																								"value": "Level 1 reward transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								}
																							],
																							"id": 575,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "5452:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5452:77:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 583,
																					"nodeType": "ExpressionStatement",
																					"src": "5452:77:0"
																				},
																				{
																					"expression": {
																						"id": 589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 584,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "5548:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 586,
																								"indexExpression": {
																									"id": 585,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "5554:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5548:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 587,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "totalIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 124,
																							"src": "5548:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 588,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "5577:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5548:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 590,
																					"nodeType": "ExpressionStatement",
																					"src": "5548:35:0"
																				},
																				{
																					"expression": {
																						"id": 596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 591,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "5601:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 593,
																								"indexExpression": {
																									"id": 592,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "5607:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5601:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 594,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "levelIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 126,
																							"src": "5601:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 595,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "5630:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5601:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 597,
																					"nodeType": "ExpressionStatement",
																					"src": "5601:35:0"
																				}
																			]
																		},
																		"id": 599,
																		"nodeType": "IfStatement",
																		"src": "4126:1602:0",
																		"trueBody": {
																			"id": 550,
																			"nodeType": "Block",
																			"src": "4144:1121:0",
																			"statements": [
																				{
																					"assignments": [
																						439
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 439,
																							"mutability": "mutable",
																							"name": "directReward",
																							"nodeType": "VariableDeclaration",
																							"scope": 550,
																							"src": "4204:20:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 438,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4204:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 446,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 442,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 440,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 298,
																										"src": "4228:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 441,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4237:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "4228:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 443,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4227:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4242:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "4227:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4204:41:0"
																				},
																				{
																					"assignments": [
																						448
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 448,
																							"mutability": "mutable",
																							"name": "level1Reward",
																							"nodeType": "VariableDeclaration",
																							"scope": 550,
																							"src": "4263:20:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 447,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4263:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 455,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 451,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 449,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 298,
																										"src": "4287:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 450,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4296:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "4287:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 452,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4286:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 453,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4301:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "4286:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4263:41:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 467,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"id": 461,
																													"name": "this",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967268,
																													"src": "4359:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																														"typeString": "contract SikkaStakingDecentralize"
																													}
																												],
																												"id": 460,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "4351:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_address_$",
																													"typeString": "type(address)"
																												},
																												"typeName": {
																													"id": 459,
																													"name": "address",
																													"nodeType": "ElementaryTypeName",
																													"src": "4351:7:0",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 462,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "4351:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"id": 457,
																											"name": "usdtToken",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 36,
																											"src": "4331:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$29",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 458,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "balanceOf",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 8,
																										"src": "4331:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																											"typeString": "function (address) view external returns (uint256)"
																										}
																									},
																									"id": 463,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4331:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 466,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 464,
																										"name": "directReward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 439,
																										"src": "4369:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 465,
																										"name": "level1Reward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 448,
																										"src": "4384:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4369:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4331:65:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																								"id": 468,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4398:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								},
																								"value": "Insufficient contract balance"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																									"typeString": "literal_string \"Insufficient contract balance\""
																								}
																							],
																							"id": 456,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "4323:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 469,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4323:107:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 470,
																					"nodeType": "ExpressionStatement",
																					"src": "4323:107:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 474,
																										"name": "upline",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 405,
																										"src": "4476:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"id": 475,
																										"name": "directReward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 439,
																										"src": "4484:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 472,
																										"name": "usdtToken",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 36,
																										"src": "4457:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$29",
																											"typeString": "contract IERC20"
																										}
																									},
																									"id": 473,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "transfer",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 17,
																									"src": "4457:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																										"typeString": "function (address,uint256) external returns (bool)"
																									}
																								},
																								"id": 476,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4457:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "44697265637420726566657272616c207472616e73666572206661696c6564",
																								"id": 477,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4499:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7",
																									"typeString": "literal_string \"Direct referral transfer failed\""
																								},
																								"value": "Direct referral transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d3347b681d53cc6a5efe9cc8ba33f80287038c3db5b88185f611a5bff7e72a7",
																									"typeString": "literal_string \"Direct referral transfer failed\""
																								}
																							],
																							"id": 471,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "4449:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4449:84:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 479,
																					"nodeType": "ExpressionStatement",
																					"src": "4449:84:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 483,
																										"name": "upline",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 405,
																										"src": "4578:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"id": 484,
																										"name": "level1Reward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 448,
																										"src": "4586:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 481,
																										"name": "usdtToken",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 36,
																										"src": "4559:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$29",
																											"typeString": "contract IERC20"
																										}
																									},
																									"id": 482,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "transfer",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 17,
																									"src": "4559:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																										"typeString": "function (address,uint256) external returns (bool)"
																									}
																								},
																								"id": 485,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4559:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "4c6576656c203120726577617264207472616e73666572206661696c6564",
																								"id": 486,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4601:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								},
																								"value": "Level 1 reward transfer failed"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_2d9c0bf7d520e4d7894cdb77e2d0061e4523fd369e7bcc859b8884e865512c92",
																									"typeString": "literal_string \"Level 1 reward transfer failed\""
																								}
																							],
																							"id": 480,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "4551:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 487,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4551:83:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 488,
																					"nodeType": "ExpressionStatement",
																					"src": "4551:83:0"
																				},
																				{
																					"expression": {
																						"id": 493,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 489,
																								"name": "directReferralIncome",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 167,
																								"src": "4653:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 491,
																							"indexExpression": {
																								"id": 490,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 405,
																								"src": "4674:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "4653:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 492,
																							"name": "directReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "4685:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4653:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 494,
																					"nodeType": "ExpressionStatement",
																					"src": "4653:44:0"
																				},
																				{
																					"expression": {
																						"id": 502,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 495,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "4715:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 497,
																								"indexExpression": {
																									"id": 496,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "4721:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4715:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 498,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "totalIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 124,
																							"src": "4715:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 501,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 499,
																								"name": "directReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 439,
																								"src": "4744:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 500,
																								"name": "level1Reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 448,
																								"src": "4759:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4744:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4715:56:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 503,
																					"nodeType": "ExpressionStatement",
																					"src": "4715:56:0"
																				},
																				{
																					"expression": {
																						"id": 509,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 504,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "4789:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																										"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																									}
																								},
																								"id": 506,
																								"indexExpression": {
																									"id": 505,
																									"name": "upline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 405,
																									"src": "4795:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4789:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$129_storage",
																									"typeString": "struct SikkaStakingDecentralize.User storage ref"
																								}
																							},
																							"id": 507,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "levelIncome",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 126,
																							"src": "4789:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 508,
																							"name": "level1Reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 448,
																							"src": "4818:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4789:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 510,
																					"nodeType": "ExpressionStatement",
																					"src": "4789:41:0"
																				},
																				{
																					"assignments": [
																						515
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 515,
																							"mutability": "mutable",
																							"name": "refs",
																							"nodeType": "VariableDeclaration",
																							"scope": 550,
																							"src": "4902:27:0",
																							"stateVariable": false,
																							"storageLocation": "storage",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
																							},
																							"typeName": {
																								"baseType": {
																									"id": 513,
																									"nodeType": "UserDefinedTypeName",
																									"pathNode": {
																										"id": 512,
																										"name": "ReferralInfo",
																										"nodeType": "IdentifierPath",
																										"referencedDeclaration": 116,
																										"src": "4902:12:0"
																									},
																									"referencedDeclaration": 116,
																									"src": "4902:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
																									}
																								},
																								"id": 514,
																								"nodeType": "ArrayTypeName",
																								"src": "4902:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																									"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 519,
																					"initialValue": {
																						"baseExpression": {
																							"id": 516,
																							"name": "directReferrals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 155,
																							"src": "4932:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																								"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
																							}
																						},
																						"id": 518,
																						"indexExpression": {
																							"id": 517,
																							"name": "upline",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 405,
																							"src": "4948:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4932:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
																							"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4902:53:0"
																				},
																				{
																					"body": {
																						"id": 548,
																						"nodeType": "Block",
																						"src": "5015:236:0",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 537,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 531,
																												"name": "refs",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 515,
																												"src": "5041:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																													"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																												}
																											},
																											"id": 533,
																											"indexExpression": {
																												"id": 532,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 521,
																												"src": "5046:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5041:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																												"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																											}
																										},
																										"id": 534,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "referralAddress",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 111,
																										"src": "5041:23:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"expression": {
																											"id": 535,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "5068:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 536,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "5068:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "5041:37:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 547,
																								"nodeType": "IfStatement",
																								"src": "5037:196:0",
																								"trueBody": {
																									"id": 546,
																									"nodeType": "Block",
																									"src": "5080:153:0",
																									"statements": [
																										{
																											"expression": {
																												"id": 543,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"expression": {
																														"baseExpression": {
																															"id": 538,
																															"name": "refs",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 515,
																															"src": "5106:4:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																																"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																															}
																														},
																														"id": 540,
																														"indexExpression": {
																															"id": 539,
																															"name": "j",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 521,
																															"src": "5111:1:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "IndexAccess",
																														"src": "5106:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																														}
																													},
																													"id": 541,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"memberName": "incomeEarned",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 113,
																													"src": "5106:20:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "+=",
																												"rightHandSide": {
																													"id": 542,
																													"name": "directReward",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 439,
																													"src": "5130:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "5106:36:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 544,
																											"nodeType": "ExpressionStatement",
																											"src": "5106:36:0"
																										},
																										{
																											"id": 545,
																											"nodeType": "Break",
																											"src": "5205:5:0"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 527,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 524,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 521,
																							"src": "4993:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 525,
																								"name": "refs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 515,
																								"src": "4997:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																									"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																								}
																							},
																							"id": 526,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "4997:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4993:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 549,
																					"initializationExpression": {
																						"assignments": [
																							521
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 521,
																								"mutability": "mutable",
																								"name": "j",
																								"nodeType": "VariableDeclaration",
																								"scope": 549,
																								"src": "4978:9:0",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 520,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "4978:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 523,
																						"initialValue": {
																							"hexValue": "30",
																							"id": 522,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4990:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "4978:13:0"
																					},
																					"loopExpression": {
																						"expression": {
																							"id": 529,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "5010:3:0",
																							"subExpression": {
																								"id": 528,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 521,
																								"src": "5010:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 530,
																						"nodeType": "ExpressionStatement",
																						"src": "5010:3:0"
																					},
																					"nodeType": "ForStatement",
																					"src": "4973:278:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 650,
																	"name": "upline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6175:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 651,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "6184:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																				"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"id": 652,
																			"name": "upline",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "6190:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6184:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$129_storage",
																			"typeString": "struct SikkaStakingDecentralize.User storage ref"
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 118,
																	"src": "6184:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6175:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6175:31:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 416,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4007:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 417,
																"name": "levelRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "4011:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$5_storage",
																	"typeString": "uint8[5] storage ref"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4011:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4007:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 420,
															"name": "upline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4052:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4044:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4044:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4034:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4007:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"initializationExpression": {
													"assignments": [
														413
													],
													"declarations": [
														{
															"constant": false,
															"id": 413,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 658,
															"src": "3994:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 412,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3994:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 415,
													"initialValue": {
														"hexValue": "30",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4004:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3994:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4056:3:0",
														"subExpression": {
															"id": 427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4056:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 429,
													"nodeType": "ExpressionStatement",
													"src": "4056:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3989:2224:0"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 301,
											"modifierName": {
												"id": 300,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "3055:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3055:14:0"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3013:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:33:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:0"
									},
									"scope": 1950,
									"src": "2998:3217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6286:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 669,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6331:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																		"typeString": "contract SikkaStakingDecentralize"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6323:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6323:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 665,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "6303:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "6303:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6303:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 672,
												"nodeType": "Return",
												"src": "6296:41:0"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6251:2:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:0"
									},
									"scope": 1950,
									"src": "6224:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "6506:824:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "6524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6533:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6524:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6536:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6516:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "6516:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 693,
																	"name": "stakingAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "6586:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 695,
																"indexExpression": {
																	"id": 694,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "6597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6586:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6586:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e67206475726174696f6e",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6611:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															},
															"value": "Invalid staking duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dba0bb7a1073858537ec2e197cb3db333ee411c7cb1f4159b44629938f0b91e",
																"typeString": "literal_string \"Invalid staking duration\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6578:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "6578:60:0"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "apy",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "6649:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"baseExpression": {
														"id": 703,
														"name": "stakingAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6663:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 705,
													"indexExpression": {
														"id": 704,
														"name": "numDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "6674:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6663:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6649:33:0"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "6692:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6692:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 709,
												"nodeType": "VariableDeclarationStatement",
												"src": "6692:19:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "numDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "6726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3330",
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6737:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "6726:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 720,
															"name": "numDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "6798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3630",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6809:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "6798:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 730,
																"name": "numDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "6870:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3930",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6881:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_90_by_1",
																	"typeString": "int_const 90"
																},
																"value": "90"
															},
															"src": "6870:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 740,
																	"name": "numDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "6942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "313230",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6953:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_120_by_1",
																		"typeString": "int_const 120"
																	},
																	"value": "120"
																},
																"src": "6942:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 750,
																		"name": "numDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "7016:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "313830",
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7027:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_180_by_1",
																			"typeString": "int_const 180"
																		},
																		"value": "180"
																	},
																	"src": "7016:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 760,
																			"name": "numDays",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "7090:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "333635",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7101:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_365_by_1",
																				"typeString": "int_const 365"
																			},
																			"value": "365"
																		},
																		"src": "7090:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 774,
																		"nodeType": "Block",
																		"src": "7160:63:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "556e737570706f72746564207374616b696e67206475726174696f6e",
																							"id": 771,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7181:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce",
																								"typeString": "literal_string \"Unsupported staking duration\""
																							},
																							"value": "Unsupported staking duration"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce",
																								"typeString": "literal_string \"Unsupported staking duration\""
																							}
																						],
																						"id": 770,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "7174:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7174:38:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 773,
																				"nodeType": "ExpressionStatement",
																				"src": "7174:38:0"
																			}
																		]
																	},
																	"id": 775,
																	"nodeType": "IfStatement",
																	"src": "7086:137:0",
																	"trueBody": {
																		"id": 769,
																		"nodeType": "Block",
																		"src": "7106:48:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 767,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 763,
																						"name": "denominator",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 708,
																						"src": "7120:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_rational_36500_by_1",
																							"typeString": "int_const 36500"
																						},
																						"id": 766,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "313030",
																							"id": 764,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7134:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "333635",
																							"id": 765,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7140:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_365_by_1",
																								"typeString": "int_const 365"
																							},
																							"value": "365"
																						},
																						"src": "7134:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_36500_by_1",
																							"typeString": "int_const 36500"
																						}
																					},
																					"src": "7120:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 768,
																				"nodeType": "ExpressionStatement",
																				"src": "7120:23:0"
																			}
																		]
																	}
																},
																"id": 776,
																"nodeType": "IfStatement",
																"src": "7012:211:0",
																"trueBody": {
																	"id": 759,
																	"nodeType": "Block",
																	"src": "7032:48:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 753,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "7046:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_rational_18000_by_1",
																						"typeString": "int_const 18000"
																					},
																					"id": 756,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "313030",
																						"id": 754,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7060:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "313830",
																						"id": 755,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7066:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_180_by_1",
																							"typeString": "int_const 180"
																						},
																						"value": "180"
																					},
																					"src": "7060:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18000_by_1",
																						"typeString": "int_const 18000"
																					}
																				},
																				"src": "7046:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 758,
																			"nodeType": "ExpressionStatement",
																			"src": "7046:23:0"
																		}
																	]
																}
															},
															"id": 777,
															"nodeType": "IfStatement",
															"src": "6938:285:0",
															"trueBody": {
																"id": 749,
																"nodeType": "Block",
																"src": "6958:48:0",
																"statements": [
																	{
																		"expression": {
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 743,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6972:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_rational_12000_by_1",
																					"typeString": "int_const 12000"
																				},
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313030",
																					"id": 744,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6986:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "313230",
																					"id": 745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6992:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_120_by_1",
																						"typeString": "int_const 120"
																					},
																					"value": "120"
																				},
																				"src": "6986:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_12000_by_1",
																					"typeString": "int_const 12000"
																				}
																			},
																			"src": "6972:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 748,
																		"nodeType": "ExpressionStatement",
																		"src": "6972:23:0"
																	}
																]
															}
														},
														"id": 778,
														"nodeType": "IfStatement",
														"src": "6866:357:0",
														"trueBody": {
															"id": 739,
															"nodeType": "Block",
															"src": "6885:47:0",
															"statements": [
																{
																	"expression": {
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 733,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6899:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_9000_by_1",
																				"typeString": "int_const 9000"
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6913:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3930",
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6919:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_90_by_1",
																					"typeString": "int_const 90"
																				},
																				"value": "90"
																			},
																			"src": "6913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9000_by_1",
																				"typeString": "int_const 9000"
																			}
																		},
																		"src": "6899:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 738,
																	"nodeType": "ExpressionStatement",
																	"src": "6899:22:0"
																}
															]
														}
													},
													"id": 779,
													"nodeType": "IfStatement",
													"src": "6794:429:0",
													"trueBody": {
														"id": 729,
														"nodeType": "Block",
														"src": "6813:47:0",
														"statements": [
															{
																"expression": {
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 723,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6827:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_rational_6000_by_1",
																			"typeString": "int_const 6000"
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313030",
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6841:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3630",
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6847:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"src": "6841:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6000_by_1",
																			"typeString": "int_const 6000"
																		}
																	},
																	"src": "6827:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 728,
																"nodeType": "ExpressionStatement",
																"src": "6827:22:0"
															}
														]
													}
												},
												"id": 780,
												"nodeType": "IfStatement",
												"src": "6722:501:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "6741:47:0",
													"statements": [
														{
															"expression": {
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 713,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "6755:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_rational_3000_by_1",
																		"typeString": "int_const 3000"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313030",
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6769:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6775:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "6769:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3000_by_1",
																		"typeString": "int_const 3000"
																	}
																},
																"src": "6755:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 718,
															"nodeType": "ExpressionStatement",
															"src": "6755:22:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 781,
														"name": "interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "7233:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 782,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "7245:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 783,
																			"name": "apy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 702,
																			"src": "7254:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7245:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 785,
																		"name": "numDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "7260:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7245:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 787,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7244:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 788,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "7271:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7244:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7233:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "7233:49:0"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "totalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "7292:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 794,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7315:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7306:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7292:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "7292:31:0"
											}
										]
									},
									"functionSelector": "bd297178",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEstimatedReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6383:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:33:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "interest",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6463:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "totalReturn",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6481:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6462:39:0"
									},
									"scope": 1950,
									"src": "6355:975:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "7576:508:0",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "refs",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "7586:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 815,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 814,
																	"name": "ReferralInfo",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 116,
																	"src": "7586:12:0"
																},
																"referencedDeclaration": 116,
																"src": "7586:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReferralInfo_$116_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.ReferralInfo"
																}
															},
															"id": 816,
															"nodeType": "ArrayTypeName",
															"src": "7586:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.ReferralInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"baseExpression": {
														"id": 818,
														"name": "directReferrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "7616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
														}
													},
													"id": 820,
													"indexExpression": {
														"id": 819,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "7632:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7616:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7586:51:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "7647:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"expression": {
														"id": 824,
														"name": "refs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "7663:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7663:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7647:27:0"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "referralAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "7685:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "7719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "7705:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 828,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7709:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 829,
																"nodeType": "ArrayTypeName",
																"src": "7709:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7705:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "7685:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "7685:40:0"
											},
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "incomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "7735:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 839,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "7759:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "7745:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 837,
																"nodeType": "ArrayTypeName",
																"src": "7749:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7745:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "7735:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "7735:30:0"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "timestamps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7775:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 847,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "7802:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "7788:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7792:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 845,
																"nodeType": "ArrayTypeName",
																"src": "7792:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7788:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "7775:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "7775:33:0"
											},
											{
												"body": {
													"id": 888,
													"nodeType": "Block",
													"src": "7855:165:0",
													"statements": [
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 861,
																		"name": "referralAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7869:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 863,
																	"indexExpression": {
																		"id": 862,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "7887:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7869:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 864,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "7892:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 866,
																		"indexExpression": {
																			"id": 865,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "7897:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7892:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referralAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 111,
																	"src": "7892:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7869:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "7869:46:0"
														},
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 870,
																		"name": "incomes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "7929:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 872,
																	"indexExpression": {
																		"id": 871,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "7937:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7929:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 873,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "7942:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 875,
																		"indexExpression": {
																			"id": 874,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "7947:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "incomeEarned",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 113,
																	"src": "7942:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7929:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "7929:33:0"
														},
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 879,
																		"name": "timestamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "7976:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 881,
																	"indexExpression": {
																		"id": 880,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "7987:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7976:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 882,
																			"name": "refs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "7992:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage pointer"
																			}
																		},
																		"id": 884,
																		"indexExpression": {
																			"id": 883,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "7997:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7992:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReferralInfo_$116_storage",
																			"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref"
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 115,
																	"src": "7992:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7976:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "7976:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "7839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 856,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "7843:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7839:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"initializationExpression": {
													"assignments": [
														852
													],
													"declarations": [
														{
															"constant": false,
															"id": 852,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 889,
															"src": "7824:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 851,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7824:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 854,
													"initialValue": {
														"hexValue": "30",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7836:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7824:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7850:3:0",
														"subExpression": {
															"id": 858,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "7850:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 860,
													"nodeType": "ExpressionStatement",
													"src": "7850:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7819:201:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 890,
															"name": "referralAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "8038:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 891,
															"name": "incomes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 892,
															"name": "timestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "8066:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 893,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8037:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 812,
												"id": 894,
												"nodeType": "Return",
												"src": "8030:47:0"
											}
										]
									},
									"functionSelector": "9d747bad",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReferralIncomeDetails",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "7374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7373:14:0"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "referralAddresses",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "7448:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 803,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7448:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 804,
													"nodeType": "ArrayTypeName",
													"src": "7448:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "incomes",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "7496:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 806,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ArrayTypeName",
													"src": "7496:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "timestamps",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "7534:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 809,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 810,
													"nodeType": "ArrayTypeName",
													"src": "7534:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:137:0"
									},
									"scope": 1950,
									"src": "7340:744:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "8193:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "numDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "8211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8211:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44617973206d757374206265203e2030",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8224:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442",
																"typeString": "literal_string \"Days must be > 0\""
															},
															"value": "Days must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f078eda3a7260fc72029f1910a13ff0cd25813c8008adfb096cf47169f78d442",
																"typeString": "literal_string \"Days must be > 0\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8203:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8203:40:0"
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 912,
															"name": "stakingAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "8253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 914,
														"indexExpression": {
															"id": 913,
															"name": "numDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "8264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8253:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 915,
														"name": "apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8275:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8253:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "8253:25:0"
											}
										]
									},
									"functionSelector": "4850d2a2",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 903,
											"modifierName": {
												"id": 902,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "8183:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8183:9:0"
										}
									],
									"name": "setStakingAPY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "numDays",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "8144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "apy",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "8161:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8143:30:0"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8193:0:0"
									},
									"scope": 1950,
									"src": "8121:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "8392:42:0",
										"statements": [
											{
												"expression": {
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 928,
														"name": "levelRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "8402:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_storage",
															"typeString": "uint8[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 929,
														"name": "newRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "8417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
															"typeString": "uint8[5] memory"
														}
													},
													"src": "8402:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage",
														"typeString": "uint8[5] storage ref"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "8402:25:0"
											}
										]
									},
									"functionSelector": "656596a5",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 926,
											"modifierName": {
												"id": 925,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "8382:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8382:9:0"
										}
									],
									"name": "setLevelRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "newRewards",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8345:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 920,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "8345:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 922,
													"length": {
														"hexValue": "35",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "8345:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8344:28:0"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8392:0:0"
									},
									"scope": 1950,
									"src": "8320:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "8500:2187:0",
										"statements": [
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "userAddress",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "8510:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8510:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"expression": {
														"id": 942,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8532:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8532:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8510:32:0"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "8552:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User"
														},
														"typeName": {
															"id": 946,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 945,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 129,
																"src": "8552:4:0"
															},
															"referencedDeclaration": 129,
															"src": "8552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": {
													"baseExpression": {
														"id": 948,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "8572:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
														}
													},
													"id": 950,
													"indexExpression": {
														"id": 949,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "8578:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8572:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$129_storage",
														"typeString": "struct SikkaStakingDecentralize.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8552:38:0"
											},
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "8600:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 954,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 953,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "8600:5:0"
																},
																"referencedDeclaration": 109,
																"src": "8600:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 955,
															"nodeType": "ArrayTypeName",
															"src": "8600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"expression": {
														"id": 957,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "8625:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User storage pointer"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "8625:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8600:36:0"
											},
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "found",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "8647:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 960,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:18:0"
											},
											{
												"body": {
													"id": 1186,
													"nodeType": "Block",
													"src": "8720:1898:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 975,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "8738:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 977,
																			"indexExpression": {
																				"id": 976,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "8745:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8738:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 100,
																		"src": "8738:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 979,
																		"name": "_positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 935,
																		"src": "8762:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8738:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "8777:18:0",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 981,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "8778:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 983,
																			"indexExpression": {
																				"id": 982,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "8785:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8778:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 108,
																		"src": "8778:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8738:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1185,
															"nodeType": "IfStatement",
															"src": "8734:1874:0",
															"trueBody": {
																"id": 1184,
																"nodeType": "Block",
																"src": "8797:1811:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1002,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 988,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "8844:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 989,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "8844:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1001,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 990,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 956,
																									"src": "8887:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 992,
																								"indexExpression": {
																									"id": 991,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 965,
																									"src": "8894:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8887:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 993,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 104,
																							"src": "8887:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 999,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 994,
																												"name": "stakes",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 956,
																												"src": "8910:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																													"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																												}
																											},
																											"id": 996,
																											"indexExpression": {
																												"id": 995,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 965,
																												"src": "8917:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "8910:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$109_storage",
																												"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																											}
																										},
																										"id": 997,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "numDays",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 106,
																										"src": "8910:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 998,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8930:6:0",
																										"subdenomination": "days",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_86400_by_1",
																											"typeString": "int_const 86400"
																										},
																										"value": "1"
																									},
																									"src": "8910:26:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1000,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8909:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8887:50:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8844:93:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5374616b696e6720706572696f64206e6f742079657420636f6d706c65746564",
																					"id": 1003,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8959:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0",
																						"typeString": "literal_string \"Staking period not yet completed\""
																					},
																					"value": "Staking period not yet completed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9f44ae553a509910ea91da28f6bd35f046222dfda3af122abb5a50633e6db9c0",
																						"typeString": "literal_string \"Staking period not yet completed\""
																					}
																				],
																				"id": 987,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8815:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8815:196:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1005,
																		"nodeType": "ExpressionStatement",
																		"src": "8815:196:0"
																	},
																	{
																		"assignments": [
																			1007
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1007,
																				"mutability": "mutable",
																				"name": "apy",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "9030:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1006,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9030:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1014,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1008,
																				"name": "stakingAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "9044:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1013,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1009,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "9055:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1011,
																					"indexExpression": {
																						"id": 1010,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "9062:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9055:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1012,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "numDays",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 106,
																				"src": "9055:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9044:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9030:43:0"
																	},
																	{
																		"assignments": [
																			1016
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1016,
																				"mutability": "mutable",
																				"name": "denominator",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "9091:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1015,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9091:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1017,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9091:19:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1018,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "9133:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1020,
																					"indexExpression": {
																						"id": 1019,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "9140:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9133:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "numDays",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 106,
																				"src": "9133:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "3330",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9154:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_30_by_1",
																					"typeString": "int_const 30"
																				},
																				"value": "30"
																			},
																			"src": "9133:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1031,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "9231:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 1033,
																						"indexExpression": {
																							"id": 1032,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 965,
																							"src": "9238:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9231:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 1034,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "numDays",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 106,
																					"src": "9231:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "3630",
																					"id": 1035,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9252:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_60_by_1",
																						"typeString": "int_const 60"
																					},
																					"value": "60"
																				},
																				"src": "9231:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1049,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1044,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 956,
																								"src": "9329:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																								}
																							},
																							"id": 1046,
																							"indexExpression": {
																								"id": 1045,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 965,
																								"src": "9336:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "9329:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$109_storage",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																							}
																						},
																						"id": 1047,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "numDays",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 106,
																						"src": "9329:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "3930",
																						"id": 1048,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9350:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_90_by_1",
																							"typeString": "int_const 90"
																						},
																						"value": "90"
																					},
																					"src": "9329:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1057,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 956,
																									"src": "9427:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 1059,
																								"indexExpression": {
																									"id": 1058,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 965,
																									"src": "9434:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9427:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 1060,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "numDays",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 106,
																							"src": "9427:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "313230",
																							"id": 1061,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9448:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_120_by_1",
																								"typeString": "int_const 120"
																							},
																							"value": "120"
																						},
																						"src": "9427:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1075,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1070,
																										"name": "stakes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 956,
																										"src": "9527:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																										}
																									},
																									"id": 1072,
																									"indexExpression": {
																										"id": 1071,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 965,
																										"src": "9534:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9527:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_storage",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "numDays",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 106,
																								"src": "9527:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"hexValue": "313830",
																								"id": 1074,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9548:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_180_by_1",
																									"typeString": "int_const 180"
																								},
																								"value": "180"
																							},
																							"src": "9527:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 1083,
																											"name": "stakes",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 956,
																											"src": "9627:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																												"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																											}
																										},
																										"id": 1085,
																										"indexExpression": {
																											"id": 1084,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 965,
																											"src": "9634:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "9627:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stake_$109_storage",
																											"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																										}
																									},
																									"id": 1086,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "numDays",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 106,
																									"src": "9627:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"hexValue": "333635",
																									"id": 1087,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9648:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_365_by_1",
																										"typeString": "int_const 365"
																									},
																									"value": "365"
																								},
																								"src": "9627:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"falseBody": {
																								"id": 1100,
																								"nodeType": "Block",
																								"src": "9723:79:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"hexValue": "556e737570706f72746564207374616b696e67206475726174696f6e",
																													"id": 1097,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "string",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "9752:30:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce",
																														"typeString": "literal_string \"Unsupported staking duration\""
																													},
																													"value": "Unsupported staking duration"
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_stringliteral_60bc1410c5f47fb80f6f03b165f11f3bc818f7b01de16b244b3a7126aa41e3ce",
																														"typeString": "literal_string \"Unsupported staking duration\""
																													}
																												],
																												"id": 1096,
																												"name": "revert",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [
																													4294967277,
																													4294967277
																												],
																												"referencedDeclaration": 4294967277,
																												"src": "9745:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																													"typeString": "function (string memory) pure"
																												}
																											},
																											"id": 1098,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "9745:38:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_tuple$__$",
																												"typeString": "tuple()"
																											}
																										},
																										"id": 1099,
																										"nodeType": "ExpressionStatement",
																										"src": "9745:38:0"
																									}
																								]
																							},
																							"id": 1101,
																							"nodeType": "IfStatement",
																							"src": "9623:179:0",
																							"trueBody": {
																								"id": 1095,
																								"nodeType": "Block",
																								"src": "9653:64:0",
																								"statements": [
																									{
																										"expression": {
																											"id": 1093,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 1089,
																												"name": "denominator",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1016,
																												"src": "9675:11:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"commonType": {
																													"typeIdentifier": "t_rational_36500_by_1",
																													"typeString": "int_const 36500"
																												},
																												"id": 1092,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"leftExpression": {
																													"hexValue": "313030",
																													"id": 1090,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "9689:3:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													},
																													"value": "100"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"hexValue": "333635",
																													"id": 1091,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "9695:3:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_365_by_1",
																														"typeString": "int_const 365"
																													},
																													"value": "365"
																												},
																												"src": "9689:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_36500_by_1",
																													"typeString": "int_const 36500"
																												}
																											},
																											"src": "9675:23:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1094,
																										"nodeType": "ExpressionStatement",
																										"src": "9675:23:0"
																									}
																								]
																							}
																						},
																						"id": 1102,
																						"nodeType": "IfStatement",
																						"src": "9523:279:0",
																						"trueBody": {
																							"id": 1082,
																							"nodeType": "Block",
																							"src": "9553:64:0",
																							"statements": [
																								{
																									"expression": {
																										"id": 1080,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftHandSide": {
																											"id": 1076,
																											"name": "denominator",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1016,
																											"src": "9575:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "Assignment",
																										"operator": "=",
																										"rightHandSide": {
																											"commonType": {
																												"typeIdentifier": "t_rational_18000_by_1",
																												"typeString": "int_const 18000"
																											},
																											"id": 1079,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"leftExpression": {
																												"hexValue": "313030",
																												"id": 1077,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "9589:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_100_by_1",
																													"typeString": "int_const 100"
																												},
																												"value": "100"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"hexValue": "313830",
																												"id": 1078,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "9595:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_180_by_1",
																													"typeString": "int_const 180"
																												},
																												"value": "180"
																											},
																											"src": "9589:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_18000_by_1",
																												"typeString": "int_const 18000"
																											}
																										},
																										"src": "9575:23:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1081,
																									"nodeType": "ExpressionStatement",
																									"src": "9575:23:0"
																								}
																							]
																						}
																					},
																					"id": 1103,
																					"nodeType": "IfStatement",
																					"src": "9423:379:0",
																					"trueBody": {
																						"id": 1069,
																						"nodeType": "Block",
																						"src": "9453:64:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 1067,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1063,
																										"name": "denominator",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1016,
																										"src": "9475:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"commonType": {
																											"typeIdentifier": "t_rational_12000_by_1",
																											"typeString": "int_const 12000"
																										},
																										"id": 1066,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "313030",
																											"id": 1064,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9489:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_100_by_1",
																												"typeString": "int_const 100"
																											},
																											"value": "100"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"hexValue": "313230",
																											"id": 1065,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9495:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_120_by_1",
																												"typeString": "int_const 120"
																											},
																											"value": "120"
																										},
																										"src": "9489:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_12000_by_1",
																											"typeString": "int_const 12000"
																										}
																									},
																									"src": "9475:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1068,
																								"nodeType": "ExpressionStatement",
																								"src": "9475:23:0"
																							}
																						]
																					}
																				},
																				"id": 1104,
																				"nodeType": "IfStatement",
																				"src": "9325:477:0",
																				"trueBody": {
																					"id": 1056,
																					"nodeType": "Block",
																					"src": "9354:63:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1054,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1050,
																									"name": "denominator",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1016,
																									"src": "9376:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_rational_9000_by_1",
																										"typeString": "int_const 9000"
																									},
																									"id": 1053,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"hexValue": "313030",
																										"id": 1051,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9390:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "3930",
																										"id": 1052,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9396:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_90_by_1",
																											"typeString": "int_const 90"
																										},
																										"value": "90"
																									},
																									"src": "9390:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_9000_by_1",
																										"typeString": "int_const 9000"
																									}
																								},
																								"src": "9376:22:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1055,
																							"nodeType": "ExpressionStatement",
																							"src": "9376:22:0"
																						}
																					]
																				}
																			},
																			"id": 1105,
																			"nodeType": "IfStatement",
																			"src": "9227:575:0",
																			"trueBody": {
																				"id": 1043,
																				"nodeType": "Block",
																				"src": "9256:63:0",
																				"statements": [
																					{
																						"expression": {
																							"id": 1041,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1037,
																								"name": "denominator",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1016,
																								"src": "9278:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_rational_6000_by_1",
																									"typeString": "int_const 6000"
																								},
																								"id": 1040,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "313030",
																									"id": 1038,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9292:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_100_by_1",
																										"typeString": "int_const 100"
																									},
																									"value": "100"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "3630",
																									"id": 1039,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9298:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_60_by_1",
																										"typeString": "int_const 60"
																									},
																									"value": "60"
																								},
																								"src": "9292:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6000_by_1",
																									"typeString": "int_const 6000"
																								}
																							},
																							"src": "9278:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1042,
																						"nodeType": "ExpressionStatement",
																						"src": "9278:22:0"
																					}
																				]
																			}
																		},
																		"id": 1106,
																		"nodeType": "IfStatement",
																		"src": "9129:673:0",
																		"trueBody": {
																			"id": 1030,
																			"nodeType": "Block",
																			"src": "9158:63:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1024,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1016,
																							"src": "9180:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_rational_3000_by_1",
																								"typeString": "int_const 3000"
																							},
																							"id": 1027,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "313030",
																								"id": 1025,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9194:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "3330",
																								"id": 1026,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9200:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_30_by_1",
																									"typeString": "int_const 30"
																								},
																								"value": "30"
																							},
																							"src": "9194:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3000_by_1",
																								"typeString": "int_const 3000"
																							}
																						},
																						"src": "9180:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1029,
																					"nodeType": "ExpressionStatement",
																					"src": "9180:22:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1108
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "interest",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "9820:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9820:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1123,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1109,
																										"name": "stakes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 956,
																										"src": "9840:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																										}
																									},
																									"id": 1111,
																									"indexExpression": {
																										"id": 1110,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 965,
																										"src": "9847:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9840:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_storage",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																									}
																								},
																								"id": 1112,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 102,
																								"src": "9840:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1113,
																								"name": "apy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1007,
																								"src": "9879:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9840:42:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1115,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 956,
																									"src": "9905:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 1117,
																								"indexExpression": {
																									"id": 1116,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 965,
																									"src": "9912:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9905:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 1118,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "numDays",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 106,
																							"src": "9905:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9840:82:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1120,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9839:84:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1121,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "9926:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9839:98:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9820:117:0"
																	},
																	{
																		"assignments": [
																			1125
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1125,
																				"mutability": "mutable",
																				"name": "totalAmount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "9955:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1124,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9955:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1132,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1126,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "9977:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1128,
																					"indexExpression": {
																						"id": 1127,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "9984:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9977:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 102,
																				"src": "9977:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1130,
																				"name": "interest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "9996:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9977:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9955:49:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1138,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "10080:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 1137,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "10072:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1136,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "10072:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1139,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10072:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 1134,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "10052:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 1135,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "10052:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 1140,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10052:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1141,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "10090:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10052:49:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 1143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10123:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 1133,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10023:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10023:149:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1145,
																		"nodeType": "ExpressionStatement",
																		"src": "10023:149:0"
																	},
																	{
																		"expression": {
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1146,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "10191:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1148,
																					"indexExpression": {
																						"id": 1147,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "10198:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10191:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1149,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "10191:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10211:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "10191:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1152,
																		"nodeType": "ExpressionStatement",
																		"src": "10191:24:0"
																	},
																	{
																		"assignments": [
																			1154
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1154,
																				"mutability": "mutable",
																				"name": "success",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "10233:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1153,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "10233:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1160,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "10267:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1125,
																					"src": "10280:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1155,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "10248:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "10248:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10248:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10233:59:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1162,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "10318:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "55534454207472616e73666572206661696c6564",
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10327:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																						"typeString": "literal_string \"USDT transfer failed\""
																					},
																					"value": "USDT transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																						"typeString": "literal_string \"USDT transfer failed\""
																					}
																				],
																				"id": 1161,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10310:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10310:40:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1165,
																		"nodeType": "ExpressionStatement",
																		"src": "10310:40:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1167,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "10403:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1168,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "10436:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 1170,
																						"indexExpression": {
																							"id": 1169,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 965,
																							"src": "10443:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10436:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 1171,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "10436:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1172,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "10475:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 1174,
																						"indexExpression": {
																							"id": 1173,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 965,
																							"src": "10482:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10475:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 1175,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "10475:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1176,
																					"name": "interest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10513:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1166,
																				"name": "Claimed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "10374:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10374:165:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1178,
																		"nodeType": "EmitStatement",
																		"src": "10369:170:0"
																	},
																	{
																		"expression": {
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1179,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "10558:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10566:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "10558:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1182,
																		"nodeType": "ExpressionStatement",
																		"src": "10558:12:0"
																	},
																	{
																		"id": 1183,
																		"nodeType": "Break",
																		"src": "10588:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "8696:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 969,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "8700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8700:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8696:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"initializationExpression": {
													"assignments": [
														965
													],
													"declarations": [
														{
															"constant": false,
															"id": 965,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1187,
															"src": "8681:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 964,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 967,
													"initialValue": {
														"hexValue": "30",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8681:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8715:3:0",
														"subExpression": {
															"id": 972,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8715:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 974,
													"nodeType": "ExpressionStatement",
													"src": "8715:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8676:1942:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "found",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "10636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d6564",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10643:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															},
															"value": "Stake not found or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "10628:52:0"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 938,
											"modifierName": {
												"id": 937,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "8485:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8485:14:0"
										}
									],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8455:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8454:21:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8500:0:0"
									},
									"scope": 1950,
									"src": "8440:2247:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "10762:1592:0",
										"statements": [
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "userAddress",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "10772:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1201,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10772:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"expression": {
														"id": 1203,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10794:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "10794:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10772:32:0"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "10814:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User"
														},
														"typeName": {
															"id": 1207,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1206,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 129,
																"src": "10814:4:0"
															},
															"referencedDeclaration": 129,
															"src": "10814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"baseExpression": {
														"id": 1209,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "10834:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
															"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
														}
													},
													"id": 1211,
													"indexExpression": {
														"id": 1210,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "10840:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10834:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$129_storage",
														"typeString": "struct SikkaStakingDecentralize.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10814:38:0"
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "10862:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1215,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1214,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "10862:5:0"
																},
																"referencedDeclaration": 109,
																"src": "10862:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 1216,
															"nodeType": "ArrayTypeName",
															"src": "10862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"expression": {
														"id": 1218,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "10887:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.User storage pointer"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "10887:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10862:36:0"
											},
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "found",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "10909:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1221,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10909:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10922:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10909:18:0"
											},
											{
												"body": {
													"id": 1346,
													"nodeType": "Block",
													"src": "10982:1303:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1236,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "11000:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 1238,
																			"indexExpression": {
																				"id": 1237,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1226,
																				"src": "11007:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11000:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 100,
																		"src": "11000:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1240,
																		"name": "_positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "11024:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11000:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "11039:18:0",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1242,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "11040:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																				}
																			},
																			"id": 1244,
																			"indexExpression": {
																				"id": 1243,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1226,
																				"src": "11047:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11040:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 108,
																		"src": "11040:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11000:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1345,
															"nodeType": "IfStatement",
															"src": "10996:1279:0",
															"trueBody": {
																"id": 1344,
																"nodeType": "Block",
																"src": "11059:1216:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1249,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "11168:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "11168:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1251,
																									"name": "stakes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1217,
																									"src": "11187:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																									}
																								},
																								"id": 1253,
																								"indexExpression": {
																									"id": 1252,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1226,
																									"src": "11194:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "11187:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_storage",
																									"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																								}
																							},
																							"id": 1254,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 104,
																							"src": "11187:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 1255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11209:7:0",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_864000_by_1",
																								"typeString": "int_const 864000"
																							},
																							"value": "10"
																						},
																						"src": "11187:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11168:48:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "456d657267656e637920636c61696d20616c6c6f776564206f6e6c792061667465722031302064617973",
																					"id": 1258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11238:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c",
																						"typeString": "literal_string \"Emergency claim allowed only after 10 days\""
																					},
																					"value": "Emergency claim allowed only after 10 days"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c87c9b42ef8342564150301403ed84cab864723fe3b74fc17132da86593fc72c",
																						"typeString": "literal_string \"Emergency claim allowed only after 10 days\""
																					}
																				],
																				"id": 1248,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11139:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11139:161:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1260,
																		"nodeType": "ExpressionStatement",
																		"src": "11139:161:0"
																	},
																	{
																		"assignments": [
																			1262
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1262,
																				"mutability": "mutable",
																				"name": "amount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1344,
																				"src": "11319:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1261,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11319:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1267,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 1263,
																					"name": "stakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1217,
																					"src": "11336:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																					}
																				},
																				"id": 1265,
																				"indexExpression": {
																					"id": 1264,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "11343:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11336:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$109_storage",
																					"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																				}
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 102,
																			"src": "11336:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11319:33:0"
																	},
																	{
																		"assignments": [
																			1269
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1269,
																				"mutability": "mutable",
																				"name": "adminFee",
																				"nodeType": "VariableDeclaration",
																				"scope": 1344,
																				"src": "11370:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1268,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11370:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1276,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1270,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1262,
																							"src": "11390:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "35",
																							"id": 1271,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11399:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_5_by_1",
																								"typeString": "int_const 5"
																							},
																							"value": "5"
																						},
																						"src": "11390:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1273,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "11389:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11404:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "11389:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11370:37:0"
																	},
																	{
																		"assignments": [
																			1278
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1278,
																				"mutability": "mutable",
																				"name": "userAmount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1344,
																				"src": "11425:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1277,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11425:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1282,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1279,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1262,
																				"src": "11446:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1280,
																				"name": "adminFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "11455:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11446:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11425:38:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1288,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "11539:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_SikkaStakingDecentralize_$1950",
																											"typeString": "contract SikkaStakingDecentralize"
																										}
																									],
																									"id": 1287,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "11531:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1286,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "11531:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1289,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "11531:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 1284,
																								"name": "usdtToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 36,
																								"src": "11511:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$29",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 1285,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "11511:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 1290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11511:34:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1291,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "11549:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11511:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11577:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					},
																					"value": "Insufficient contract balance"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																						"typeString": "literal_string \"Insufficient contract balance\""
																					}
																				],
																				"id": 1283,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11482:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11482:144:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1295,
																		"nodeType": "ExpressionStatement",
																		"src": "11482:144:0"
																	},
																	{
																		"expression": {
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1296,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1217,
																						"src": "11645:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																						}
																					},
																					"id": 1298,
																					"indexExpression": {
																						"id": 1297,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1226,
																						"src": "11652:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11645:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage",
																						"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																					}
																				},
																				"id": 1299,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "11645:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11665:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "11645:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1302,
																		"nodeType": "ExpressionStatement",
																		"src": "11645:24:0"
																	},
																	{
																		"assignments": [
																			1304
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "successUser",
																				"nodeType": "VariableDeclaration",
																				"scope": 1344,
																				"src": "11729:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "11729:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1310,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1307,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1202,
																					"src": "11767:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1308,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "11780:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1305,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "11748:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "11748:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11748:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11729:62:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1312,
																					"name": "successUser",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1304,
																					"src": "11817:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "55736572207472616e73666572206661696c6564",
																					"id": 1313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11830:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d",
																						"typeString": "literal_string \"User transfer failed\""
																					},
																					"value": "User transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_e66e3434b8d8744f6067b57ef12d4c783bac11f4dcd57b07b8b0043c7599ec1d",
																						"typeString": "literal_string \"User transfer failed\""
																					}
																				],
																				"id": 1311,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11809:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11809:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1315,
																		"nodeType": "ExpressionStatement",
																		"src": "11809:44:0"
																	},
																	{
																		"assignments": [
																			1317
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1317,
																				"mutability": "mutable",
																				"name": "successAdmin",
																				"nodeType": "VariableDeclaration",
																				"scope": 1344,
																				"src": "11910:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1316,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "11910:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1323,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "307839614234394136313035613736386564383862384166443963636137663638383646373339614164",
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11970:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"value": "0x9aB49A6105a768ed88b8AfD9cca7f6886F739aAd"
																				},
																				{
																					"id": 1321,
																					"name": "adminFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "12034:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1318,
																					"name": "usdtToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "11930:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$29",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "11930:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11930:130:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11910:150:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1325,
																					"name": "successAdmin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1317,
																					"src": "12086:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "41646d696e20666565207472616e73666572206661696c6564",
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12100:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4",
																						"typeString": "literal_string \"Admin fee transfer failed\""
																					},
																					"value": "Admin fee transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_eb77a2680fbc426d92d2121bf61c96f8af06e4e6414dfd9d2d5bae20b1a137a4",
																						"typeString": "literal_string \"Admin fee transfer failed\""
																					}
																				],
																				"id": 1324,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12078:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12078:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1328,
																		"nodeType": "ExpressionStatement",
																		"src": "12078:50:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1330,
																					"name": "userAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1202,
																					"src": "12160:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1331,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1217,
																							"src": "12173:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																								"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
																							}
																						},
																						"id": 1333,
																						"indexExpression": {
																							"id": 1332,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1226,
																							"src": "12180:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12173:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_storage",
																							"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																						}
																					},
																					"id": 1334,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "12173:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1335,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "12192:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1336,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12204:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1329,
																				"name": "Claimed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "12152:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12152:54:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1338,
																		"nodeType": "EmitStatement",
																		"src": "12147:59:0"
																	},
																	{
																		"expression": {
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1339,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1222,
																				"src": "12225:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12233:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "12225:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1342,
																		"nodeType": "ExpressionStatement",
																		"src": "12225:12:0"
																	},
																	{
																		"id": 1343,
																		"nodeType": "Break",
																		"src": "12255:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "10958:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1230,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "10962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage pointer"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10962:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10958:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"initializationExpression": {
													"assignments": [
														1226
													],
													"declarations": [
														{
															"constant": false,
															"id": 1226,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1347,
															"src": "10943:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1225,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1228,
													"initialValue": {
														"hexValue": "30",
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10955:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10943:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10977:3:0",
														"subExpression": {
															"id": 1233,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "10977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1235,
													"nodeType": "ExpressionStatement",
													"src": "10977:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10938:1347:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1349,
															"name": "found",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "12303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206e6f7420666f756e64206f7220616c726561647920636c61696d6564",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12310:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															},
															"value": "Stake not found or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cbf0e9fc6a53b36467943f782b6db9665a2e76db0cbeb36d812dfad31e9aed9",
																"typeString": "literal_string \"Stake not found or already claimed\""
															}
														],
														"id": 1348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12295:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "12295:52:0"
											}
										]
									},
									"functionSelector": "6c8c2156",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1199,
											"modifierName": {
												"id": 1198,
												"name": "onlyRegistered",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "10747:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10747:14:0"
										}
									],
									"name": "claimEmergency",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "10717:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10716:21:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10762:0:0"
									},
									"scope": 1950,
									"src": "10693:1661:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "12701:1033:0",
										"statements": [
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "userAddr",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "12711:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1375,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12711:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"baseExpression": {
														"id": 1377,
														"name": "positionIdToUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "12730:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1379,
													"indexExpression": {
														"id": 1378,
														"name": "_positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "12747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12730:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12711:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "userAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "12777:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12797:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12789:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1383,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12789:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12789:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12777:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f736974696f6e4964",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e",
																"typeString": "literal_string \"Invalid positionId\""
															},
															"value": "Invalid positionId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f54d25b286bac206704ca44e8671c4369a46d350c758a353cd33da5863c9f19e",
																"typeString": "literal_string \"Invalid positionId\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12769:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "12769:53:0"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "stakes",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "12833:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SikkaStakingDecentralize.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1393,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1392,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 109,
																	"src": "12833:5:0"
																},
																"referencedDeclaration": 109,
																"src": "12833:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.Stake"
																}
															},
															"id": 1394,
															"nodeType": "ArrayTypeName",
															"src": "12833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1396,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "12857:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1398,
														"indexExpression": {
															"id": 1397,
															"name": "userAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "12863:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12857:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 122,
													"src": "12857:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
														"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12833:46:0"
											},
											{
												"body": {
													"id": 1481,
													"nodeType": "Block",
													"src": "12933:759:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1412,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1395,
																			"src": "12951:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																			}
																		},
																		"id": 1414,
																		"indexExpression": {
																			"id": 1413,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "12958:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12951:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake memory"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "positionId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "12951:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1416,
																	"name": "_positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "12975:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12951:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1480,
															"nodeType": "IfStatement",
															"src": "12947:735:0",
															"trueBody": {
																"id": 1479,
																"nodeType": "Block",
																"src": "12988:694:0",
																"statements": [
																	{
																		"assignments": [
																			1420
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1420,
																				"mutability": "mutable",
																				"name": "s",
																				"nodeType": "VariableDeclaration",
																				"scope": 1479,
																				"src": "13006:14:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake"
																				},
																				"typeName": {
																					"id": 1419,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1418,
																						"name": "Stake",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 109,
																						"src": "13006:5:0"
																					},
																					"referencedDeclaration": 109,
																					"src": "13006:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1424,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1421,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "13023:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																				}
																			},
																			"id": 1423,
																			"indexExpression": {
																				"id": 1422,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1402,
																				"src": "13030:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13023:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13006:26:0"
																	},
																	{
																		"assignments": [
																			1426
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1426,
																				"mutability": "mutable",
																				"name": "apyRate",
																				"nodeType": "VariableDeclaration",
																				"scope": 1479,
																				"src": "13051:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1425,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13051:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1431,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1427,
																				"name": "stakingAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "13069:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1430,
																			"indexExpression": {
																				"expression": {
																					"id": 1428,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1420,
																					"src": "13080:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake memory"
																					}
																				},
																				"id": 1429,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "numDays",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 106,
																				"src": "13080:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13069:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13051:39:0"
																	},
																	{
																		"assignments": [
																			1433
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1433,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"scope": 1479,
																				"src": "13108:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1432,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13108:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1442,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1434,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1420,
																					"src": "13122:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																						"typeString": "struct SikkaStakingDecentralize.Stake memory"
																					}
																				},
																				"id": 1435,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "13122:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1436,
																								"name": "s",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1420,
																								"src": "13137:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory"
																								}
																							},
																							"id": 1437,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "numDays",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 106,
																							"src": "13137:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1438,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13149:6:0",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_86400_by_1",
																								"typeString": "int_const 86400"
																							},
																							"value": "1"
																						},
																						"src": "13137:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1440,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13136:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13122:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13108:48:0"
																	},
																	{
																		"assignments": [
																			1444
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1444,
																				"mutability": "mutable",
																				"name": "isActive",
																				"nodeType": "VariableDeclaration",
																				"scope": 1479,
																				"src": "13174:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1443,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "13174:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1453,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "13190:10:0",
																				"subExpression": {
																					"expression": {
																						"id": 1445,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "13191:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "13191:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1448,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "13204:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "13204:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1450,
																					"name": "end",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1433,
																					"src": "13222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13204:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13190:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13174:51:0"
																	},
																	{
																		"assignments": [
																			1455
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1455,
																				"mutability": "mutable",
																				"name": "dailyInterest",
																				"nodeType": "VariableDeclaration",
																				"scope": 1479,
																				"src": "13324:21:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1454,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13324:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1465,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1459,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1456,
																									"name": "s",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1420,
																									"src": "13349:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake memory"
																									}
																								},
																								"id": 1457,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 102,
																								"src": "13349:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1458,
																								"name": "apyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1426,
																								"src": "13360:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13349:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1460,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "13348:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13371:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "13348:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "333635",
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13377:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_365_by_1",
																					"typeString": "int_const 365"
																				},
																				"value": "365"
																			},
																			"src": "13348:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13324:56:0"
																	},
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 1466,
																					"name": "userAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1376,
																					"src": "13428:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1467,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "13458:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1468,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 98,
																					"src": "13458:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1469,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "13489:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1470,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "13489:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1471,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "13519:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																							"typeString": "struct SikkaStakingDecentralize.Stake memory"
																						}
																					},
																					"id": 1472,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 104,
																					"src": "13519:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1473,
																					"name": "end",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1433,
																					"src": "13552:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1474,
																					"name": "apyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "13577:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1475,
																					"name": "dailyInterest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1455,
																					"src": "13606:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1476,
																					"name": "isActive",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "13641:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1477,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13406:261:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
																				"typeString": "tuple(address,uint256,uint256,uint256,uint256,uint256,uint256,bool)"
																			}
																		},
																		"functionReturnParameters": 1374,
																		"id": 1478,
																		"nodeType": "Return",
																		"src": "13399:268:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "12909:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1406,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "12913:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12913:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12909:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1482,
												"initializationExpression": {
													"assignments": [
														1402
													],
													"declarations": [
														{
															"constant": false,
															"id": 1402,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1482,
															"src": "12894:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1401,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12894:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1404,
													"initialValue": {
														"hexValue": "30",
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12894:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12928:3:0",
														"subExpression": {
															"id": 1409,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "12928:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1411,
													"nodeType": "ExpressionStatement",
													"src": "12928:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12889:803:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "5374616b65206e6f7420666f756e64",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13709:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30",
																"typeString": "literal_string \"Stake not found\""
															},
															"value": "Stake not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c720c01b1ab900eae0624fc88257558becc0dda54896b3f86c3f492482a20d30",
																"typeString": "literal_string \"Stake not found\""
															}
														],
														"id": 1483,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "13702:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13702:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "13702:25:0"
											}
										]
									},
									"functionSelector": "797c7f5f",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeByPositionId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12390:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12389:21:0"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12471:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "stakeId",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "startDate",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12554:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "endDate",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "apy",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12614:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "perDayInterest",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12639:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "12675:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12675:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12457:239:0"
									},
									"scope": 1950,
									"src": "12360:1374:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "13848:246:0",
										"statements": [
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "13858:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 1498,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "13874:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																	"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																}
															},
															"id": 1500,
															"indexExpression": {
																"id": 1499,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "13880:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13874:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$129_storage",
																"typeString": "struct SikkaStakingDecentralize.User storage ref"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "13874:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13874:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13858:42:0"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "ids",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "13910:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1506,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1507,
															"nodeType": "ArrayTypeName",
															"src": "13910:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"arguments": [
														{
															"id": 1512,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "13947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13933:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1509,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1510,
															"nodeType": "ArrayTypeName",
															"src": "13937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13933:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13910:43:0"
											},
											{
												"body": {
													"id": 1537,
													"nodeType": "Block",
													"src": "14000:67:0",
													"statements": [
														{
															"expression": {
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1525,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "14014:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1527,
																	"indexExpression": {
																		"id": 1526,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "14018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14014:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1528,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 149,
																					"src": "14023:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																						"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																					}
																				},
																				"id": 1530,
																				"indexExpression": {
																					"id": 1529,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "14029:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14023:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$129_storage",
																					"typeString": "struct SikkaStakingDecentralize.User storage ref"
																				}
																			},
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 122,
																			"src": "14023:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																				"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 1533,
																		"indexExpression": {
																			"id": 1532,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "14043:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14023:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$109_storage",
																			"typeString": "struct SikkaStakingDecentralize.Stake storage ref"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "positionId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "14023:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14014:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "14014:42:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "13984:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1520,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "13988:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13984:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"initializationExpression": {
													"assignments": [
														1516
													],
													"declarations": [
														{
															"constant": false,
															"id": 1516,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1538,
															"src": "13969:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1515,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1518,
													"initialValue": {
														"hexValue": "30",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13981:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13969:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13995:3:0",
														"subExpression": {
															"id": 1522,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "13995:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1524,
													"nodeType": "ExpressionStatement",
													"src": "13995:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13964:103:0"
											},
											{
												"expression": {
													"id": 1539,
													"name": "ids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1508,
													"src": "14084:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1540,
												"nodeType": "Return",
												"src": "14077:10:0"
											}
										]
									},
									"functionSelector": "28fe7031",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPositionIds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "13764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13763:15:0"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "13826:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1492,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1493,
													"nodeType": "ArrayTypeName",
													"src": "13826:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13825:18:0"
									},
									"scope": 1950,
									"src": "13740:354:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "14206:52:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1549,
															"name": "directReferrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "14223:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
															}
														},
														"id": 1551,
														"indexExpression": {
															"id": 1550,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "14239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14223:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "14223:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1553,
												"nodeType": "Return",
												"src": "14216:35:0"
											}
										]
									},
									"functionSelector": "98278efb",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDirectReferralCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "14132:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14131:14:0"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "14193:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14192:9:0"
									},
									"scope": 1950,
									"src": "14100:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "14371:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1562,
														"name": "directReferralIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "14388:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1564,
													"indexExpression": {
														"id": 1563,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "14409:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14388:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1565,
												"nodeType": "Return",
												"src": "14381:33:0"
											}
										]
									},
									"functionSelector": "aa7ed462",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDirectReferralIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14297:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14296:14:0"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "14358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14357:9:0"
									},
									"scope": 1950,
									"src": "14264:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "14497:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1574,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "14514:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "14520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14514:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "levelIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 126,
													"src": "14514:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1578,
												"nodeType": "Return",
												"src": "14507:30:0"
											}
										]
									},
									"functionSelector": "5bd4e16a",
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "14451:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14450:14:0"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "14488:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14487:9:0"
									},
									"scope": 1950,
									"src": "14427:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "16248:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1587,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "16265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1589,
														"indexExpression": {
															"id": 1588,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "16271:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16265:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 124,
													"src": "16265:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1591,
												"nodeType": "Return",
												"src": "16258:30:0"
											}
										]
									},
									"functionSelector": "c2d3c677",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "16202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16201:14:0"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "16239:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16238:9:0"
									},
									"scope": 1950,
									"src": "16178:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "16376:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1600,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "16393:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"id": 1601,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "16399:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16393:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "levelIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 126,
													"src": "16393:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1604,
												"nodeType": "Return",
												"src": "16386:30:0"
											}
										]
									},
									"functionSelector": "c5b89c0a",
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalLevelIncome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "16330:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16329:14:0"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "16367:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16366:9:0"
									},
									"scope": 1950,
									"src": "16301:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "16495:182:0",
										"statements": [
											{
												"assignments": [
													1614
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 1640,
														"src": "16505:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1615,
															"name": "directReferrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "16521:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref)"
															}
														},
														"id": 1617,
														"indexExpression": {
															"id": 1616,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "16537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16521:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ReferralInfo_$116_storage_$dyn_storage",
															"typeString": "struct SikkaStakingDecentralize.ReferralInfo storage ref[] storage ref"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16521:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16505:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "16563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16572:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "16563:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "IfStatement",
												"src": "16559:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "33",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"functionReturnParameters": 1612,
													"id": 1624,
													"nodeType": "Return",
													"src": "16576:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "16598:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "16598:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1631,
												"nodeType": "IfStatement",
												"src": "16594:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "32",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"functionReturnParameters": 1612,
													"id": 1630,
													"nodeType": "Return",
													"src": "16610:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1632,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "16632:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16632:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "16628:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1612,
													"id": 1636,
													"nodeType": "Return",
													"src": "16644:8:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16669:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1612,
												"id": 1639,
												"nodeType": "Return",
												"src": "16662:8:0"
											}
										]
									},
									"functionSelector": "21923bde",
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserLevel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "16451:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16450:14:0"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "16488:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1610,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16487:7:0"
									},
									"scope": 1950,
									"src": "16429:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "16811:1940:0",
										"statements": [
											{
												"assignments": [
													1651
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "totalCount",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "16821:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"hexValue": "30",
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16821:22:0"
											},
											{
												"body": {
													"id": 1725,
													"nodeType": "Block",
													"src": "16900:494:0",
													"statements": [
														{
															"assignments": [
																1666
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1666,
																	"mutability": "mutable",
																	"name": "staker",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "16914:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1665,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16914:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1670,
															"initialValue": {
																"baseExpression": {
																	"id": 1667,
																	"name": "allUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "16931:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1669,
																"indexExpression": {
																	"id": 1668,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "16940:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16931:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16914:28:0"
														},
														{
															"assignments": [
																1675
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1675,
																	"mutability": "mutable",
																	"name": "stakes",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "16956:21:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct SikkaStakingDecentralize.Stake[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1673,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1672,
																				"name": "Stake",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 109,
																				"src": "16956:5:0"
																			},
																			"referencedDeclaration": 109,
																			"src": "16956:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake"
																			}
																		},
																		"id": 1674,
																		"nodeType": "ArrayTypeName",
																		"src": "16956:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1680,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1676,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "16980:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1678,
																	"indexExpression": {
																		"id": 1677,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "16986:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16980:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 122,
																"src": "16980:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																	"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16956:44:0"
														},
														{
															"assignments": [
																1682
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1682,
																	"mutability": "mutable",
																	"name": "upline",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "17014:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17014:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1687,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1683,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "17031:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1685,
																	"indexExpression": {
																		"id": 1684,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "17037:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17031:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "17031:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17014:39:0"
														},
														{
															"body": {
																"id": 1723,
																"nodeType": "Block",
																"src": "17214:170:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1706,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1682,
																				"src": "17236:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1707,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1643,
																				"src": "17246:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "17236:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1715,
																		"nodeType": "IfStatement",
																		"src": "17232:89:0",
																		"trueBody": {
																			"id": 1714,
																			"nodeType": "Block",
																			"src": "17253:68:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1712,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1709,
																							"name": "totalCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1651,
																							"src": "17275:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"expression": {
																								"id": 1710,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1675,
																								"src": "17289:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																								}
																							},
																							"id": 1711,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "17289:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17275:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1713,
																					"nodeType": "ExpressionStatement",
																					"src": "17275:27:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1716,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1682,
																				"src": "17338:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1717,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "17347:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 1719,
																					"indexExpression": {
																						"id": 1718,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1682,
																						"src": "17353:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "17347:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 1720,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "referrer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 118,
																				"src": "17347:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "17338:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1722,
																		"nodeType": "ExpressionStatement",
																		"src": "17338:31:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1692,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "17123:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1693,
																			"name": "levelRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "17131:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_storage",
																				"typeString": "uint8[5] storage ref"
																			}
																		},
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "17131:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17123:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1696,
																		"name": "upline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "17154:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17172:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17164:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1697,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17164:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17164:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17154:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17123:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1724,
															"initializationExpression": {
																"assignments": [
																	1689
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1689,
																		"mutability": "mutable",
																		"name": "level",
																		"nodeType": "VariableDeclaration",
																		"scope": 1724,
																		"src": "17090:11:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 1688,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "17090:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1691,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17104:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "17090:15:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "17192:7:0",
																	"subExpression": {
																		"id": 1703,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "17192:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1705,
																"nodeType": "ExpressionStatement",
																"src": "17192:7:0"
															},
															"nodeType": "ForStatement",
															"src": "17068:316:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1658,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "16874:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1659,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "16878:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16878:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16874:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1726,
												"initializationExpression": {
													"assignments": [
														1655
													],
													"declarations": [
														{
															"constant": false,
															"id": 1655,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1726,
															"src": "16859:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1654,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16859:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1657,
													"initialValue": {
														"hexValue": "30",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16871:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16859:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16895:3:0",
														"subExpression": {
															"id": 1662,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "16895:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1664,
													"nodeType": "ExpressionStatement",
													"src": "16895:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16854:540:0"
											},
											{
												"assignments": [
													1731
												],
												"declarations": [
													{
														"constant": false,
														"id": 1731,
														"mutability": "mutable",
														"name": "incomeData",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "17404:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
														},
														"typeName": {
															"baseType": {
																"id": 1729,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1728,
																	"name": "LevelIncomeData",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 144,
																	"src": "17404:15:0"
																},
																"referencedDeclaration": 144,
																"src": "17404:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
																}
															},
															"id": 1730,
															"nodeType": "ArrayTypeName",
															"src": "17404:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"arguments": [
														{
															"id": 1736,
															"name": "totalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "17464:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17442:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SikkaStakingDecentralize.LevelIncomeData memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1733,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1732,
																	"name": "LevelIncomeData",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 144,
																	"src": "17446:15:0"
																},
																"referencedDeclaration": 144,
																"src": "17446:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
																	"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
																}
															},
															"id": 1734,
															"nodeType": "ArrayTypeName",
															"src": "17446:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
																"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
															}
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17442:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17404:71:0"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "17485:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"hexValue": "30",
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17501:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17485:17:0"
											},
											{
												"body": {
													"id": 1861,
													"nodeType": "Block",
													"src": "17559:1158:0",
													"statements": [
														{
															"assignments": [
																1755
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1755,
																	"mutability": "mutable",
																	"name": "staker",
																	"nodeType": "VariableDeclaration",
																	"scope": 1861,
																	"src": "17573:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1754,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17573:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1759,
															"initialValue": {
																"baseExpression": {
																	"id": 1756,
																	"name": "allUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "17590:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1758,
																"indexExpression": {
																	"id": 1757,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "17599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17590:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17573:28:0"
														},
														{
															"assignments": [
																1764
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1764,
																	"mutability": "mutable",
																	"name": "stakes",
																	"nodeType": "VariableDeclaration",
																	"scope": 1861,
																	"src": "17615:21:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct SikkaStakingDecentralize.Stake[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1762,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1761,
																				"name": "Stake",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 109,
																				"src": "17615:5:0"
																			},
																			"referencedDeclaration": 109,
																			"src": "17615:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																				"typeString": "struct SikkaStakingDecentralize.Stake"
																			}
																		},
																		"id": 1763,
																		"nodeType": "ArrayTypeName",
																		"src": "17615:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage_ptr",
																			"typeString": "struct SikkaStakingDecentralize.Stake[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1769,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1765,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "17639:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1767,
																	"indexExpression": {
																		"id": 1766,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "17645:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17639:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 122,
																"src": "17639:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_$109_storage_$dyn_storage",
																	"typeString": "struct SikkaStakingDecentralize.Stake storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17615:44:0"
														},
														{
															"assignments": [
																1771
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1771,
																	"mutability": "mutable",
																	"name": "upline",
																	"nodeType": "VariableDeclaration",
																	"scope": 1861,
																	"src": "17673:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1770,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17673:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1776,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1772,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "17690:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																			"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																		}
																	},
																	"id": 1774,
																	"indexExpression": {
																		"id": 1773,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "17696:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17690:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$129_storage",
																		"typeString": "struct SikkaStakingDecentralize.User storage ref"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "17690:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17673:39:0"
														},
														{
															"body": {
																"id": 1859,
																"nodeType": "Block",
																"src": "17873:834:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1795,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "17895:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1796,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1643,
																				"src": "17905:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "17895:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1851,
																		"nodeType": "IfStatement",
																		"src": "17891:753:0",
																		"trueBody": {
																			"id": 1850,
																			"nodeType": "Block",
																			"src": "17912:732:0",
																			"statements": [
																				{
																					"body": {
																						"id": 1848,
																						"nodeType": "Block",
																						"src": "17978:648:0",
																						"statements": [
																							{
																								"assignments": [
																									1811
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1811,
																										"mutability": "mutable",
																										"name": "stake",
																										"nodeType": "VariableDeclaration",
																										"scope": 1848,
																										"src": "18004:18:0",
																										"stateVariable": false,
																										"storageLocation": "memory",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake"
																										},
																										"typeName": {
																											"id": 1810,
																											"nodeType": "UserDefinedTypeName",
																											"pathNode": {
																												"id": 1809,
																												"name": "Stake",
																												"nodeType": "IdentifierPath",
																												"referencedDeclaration": 109,
																												"src": "18004:5:0"
																											},
																											"referencedDeclaration": 109,
																											"src": "18004:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$109_storage_ptr",
																												"typeString": "struct SikkaStakingDecentralize.Stake"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 1815,
																								"initialValue": {
																									"baseExpression": {
																										"id": 1812,
																										"name": "stakes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1764,
																										"src": "18025:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																										}
																									},
																									"id": 1814,
																									"indexExpression": {
																										"id": 1813,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1799,
																										"src": "18032:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18025:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.Stake memory"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "18004:30:0"
																							},
																							{
																								"assignments": [
																									1817
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1817,
																										"mutability": "mutable",
																										"name": "income",
																										"nodeType": "VariableDeclaration",
																										"scope": 1848,
																										"src": "18060:14:0",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"typeName": {
																											"id": 1816,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "18060:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 1827,
																								"initialValue": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1826,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1823,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"id": 1818,
																														"name": "stake",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1811,
																														"src": "18078:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																															"typeString": "struct SikkaStakingDecentralize.Stake memory"
																														}
																													},
																													"id": 1819,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "amount",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 102,
																													"src": "18078:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"baseExpression": {
																														"id": 1820,
																														"name": "levelRewards",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 180,
																														"src": "18093:12:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint8_$5_storage",
																															"typeString": "uint8[5] storage ref"
																														}
																													},
																													"id": 1822,
																													"indexExpression": {
																														"id": 1821,
																														"name": "level",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1778,
																														"src": "18106:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "18093:19:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "18078:34:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1824,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "18077:36:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"hexValue": "313030",
																										"id": 1825,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "18144:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									},
																									"src": "18077:70:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "18060:87:0"
																							},
																							{
																								"expression": {
																									"id": 1846,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 1828,
																											"name": "incomeData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1731,
																											"src": "18174:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
																												"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
																											}
																										},
																										"id": 1831,
																										"indexExpression": {
																											"id": 1830,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "++",
																											"prefix": false,
																											"src": "18185:7:0",
																											"subExpression": {
																												"id": 1829,
																												"name": "index",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1740,
																												"src": "18185:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "18174:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1833,
																												"name": "_user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1643,
																												"src": "18259:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1834,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1811,
																													"src": "18303:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1835,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "stakeId",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 98,
																												"src": "18303:13:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"expression": {
																													"id": 1836,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1811,
																													"src": "18359:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1837,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "amount",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 102,
																												"src": "18359:12:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"id": 1838,
																												"name": "income",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1817,
																												"src": "18417:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"id": 1839,
																												"name": "staker",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1755,
																												"src": "18468:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1840,
																													"name": "stake",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1811,
																													"src": "18515:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Stake_$109_memory_ptr",
																														"typeString": "struct SikkaStakingDecentralize.Stake memory"
																													}
																												},
																												"id": 1841,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "timestamp",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 104,
																												"src": "18515:15:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1844,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1842,
																													"name": "level",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1778,
																													"src": "18567:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "+",
																												"rightExpression": {
																													"hexValue": "31",
																													"id": 1843,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "18575:1:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1_by_1",
																														"typeString": "int_const 1"
																													},
																													"value": "1"
																												},
																												"src": "18567:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											],
																											"id": 1832,
																											"name": "LevelIncomeData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 144,
																											"src": "18196:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_struct$_LevelIncomeData_$144_storage_ptr_$",
																												"typeString": "type(struct SikkaStakingDecentralize.LevelIncomeData storage pointer)"
																											}
																										},
																										"id": 1845,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "structConstructorCall",
																										"lValueRequested": false,
																										"names": [
																											"receiverAddress",
																											"stakeId",
																											"stakeAmount",
																											"incomeReceived",
																											"uplineAddress",
																											"timestamp",
																											"level"
																										],
																										"nodeType": "FunctionCall",
																										"src": "18196:407:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																											"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																										}
																									},
																									"src": "18174:429:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_LevelIncomeData_$144_memory_ptr",
																										"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory"
																									}
																								},
																								"id": 1847,
																								"nodeType": "ExpressionStatement",
																								"src": "18174:429:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1805,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1802,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1799,
																							"src": "17954:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 1803,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1764,
																								"src": "17958:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$109_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct SikkaStakingDecentralize.Stake memory[] memory"
																								}
																							},
																							"id": 1804,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "17958:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17954:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1849,
																					"initializationExpression": {
																						"assignments": [
																							1799
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 1799,
																								"mutability": "mutable",
																								"name": "j",
																								"nodeType": "VariableDeclaration",
																								"scope": 1849,
																								"src": "17939:9:0",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 1798,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "17939:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 1801,
																						"initialValue": {
																							"hexValue": "30",
																							"id": 1800,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17951:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "17939:13:0"
																					},
																					"loopExpression": {
																						"expression": {
																							"id": 1807,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "17973:3:0",
																							"subExpression": {
																								"id": 1806,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1799,
																								"src": "17973:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1808,
																						"nodeType": "ExpressionStatement",
																						"src": "17973:3:0"
																					},
																					"nodeType": "ForStatement",
																					"src": "17934:692:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1852,
																				"name": "upline",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "18661:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1853,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "18670:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																							"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
																						}
																					},
																					"id": 1855,
																					"indexExpression": {
																						"id": 1854,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1771,
																						"src": "18676:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "18670:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$129_storage",
																						"typeString": "struct SikkaStakingDecentralize.User storage ref"
																					}
																				},
																				"id": 1856,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "referrer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 118,
																				"src": "18670:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "18661:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1858,
																		"nodeType": "ExpressionStatement",
																		"src": "18661:31:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1781,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "17782:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1782,
																			"name": "levelRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "17790:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_storage",
																				"typeString": "uint8[5] storage ref"
																			}
																		},
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "17790:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17782:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1785,
																		"name": "upline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "17813:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17831:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17823:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1786,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17823:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17823:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17813:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17782:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1860,
															"initializationExpression": {
																"assignments": [
																	1778
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1778,
																		"mutability": "mutable",
																		"name": "level",
																		"nodeType": "VariableDeclaration",
																		"scope": 1860,
																		"src": "17749:11:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 1777,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "17749:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1780,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17763:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "17749:15:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "17851:7:0",
																	"subExpression": {
																		"id": 1792,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "17851:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1794,
																"nodeType": "ExpressionStatement",
																"src": "17851:7:0"
															},
															"nodeType": "ForStatement",
															"src": "17727:980:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "17533:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1748,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "17537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17537:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17533:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"initializationExpression": {
													"assignments": [
														1744
													],
													"declarations": [
														{
															"constant": false,
															"id": 1744,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1862,
															"src": "17518:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1743,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17518:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1746,
													"initialValue": {
														"hexValue": "30",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17518:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17554:3:0",
														"subExpression": {
															"id": 1751,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "17554:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1753,
													"nodeType": "ExpressionStatement",
													"src": "17554:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17513:1204:0"
											},
											{
												"expression": {
													"id": 1863,
													"name": "incomeData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1731,
													"src": "18734:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData memory[] memory"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1864,
												"nodeType": "Return",
												"src": "18727:17:0"
											}
										]
									},
									"functionSelector": "ef71ae56",
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelIncomeDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "16719:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16718:15:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "16781:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
												},
												"typeName": {
													"baseType": {
														"id": 1646,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1645,
															"name": "LevelIncomeData",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 144,
															"src": "16781:15:0"
														},
														"referencedDeclaration": 144,
														"src": "16781:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LevelIncomeData_$144_storage_ptr",
															"typeString": "struct SikkaStakingDecentralize.LevelIncomeData"
														}
													},
													"id": 1647,
													"nodeType": "ArrayTypeName",
													"src": "16781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LevelIncomeData_$144_storage_$dyn_storage_ptr",
														"typeString": "struct SikkaStakingDecentralize.LevelIncomeData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16780:26:0"
									},
									"scope": 1950,
									"src": "16683:2068:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "18804:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1872,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18822:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1874,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "18836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18822:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18843:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															},
															"value": "Only owner can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															}
														],
														"id": 1871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18814:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "18814:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "18898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1883,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "18905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1879,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "18879:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "18879:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18879:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "18879:33:0"
											}
										]
									},
									"functionSelector": "3ea521ef",
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawUSDT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "18779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18778:16:0"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18804:0:0"
									},
									"scope": 1950,
									"src": "18757:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "18990:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1894,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "19007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
																"typeString": "mapping(address => struct SikkaStakingDecentralize.User storage ref)"
															}
														},
														"id": 1896,
														"indexExpression": {
															"id": 1895,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "19013:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19007:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$129_storage",
															"typeString": "struct SikkaStakingDecentralize.User storage ref"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "registered",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 128,
													"src": "19007:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1898,
												"nodeType": "Return",
												"src": "19000:29:0"
											}
										]
									},
									"functionSelector": "c3c5a547",
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRegistered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "18947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18946:14:0"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "18984:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18983:6:0"
									},
									"scope": 1950,
									"src": "18925:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "19099:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1905,
														"name": "allUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "19116:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19116:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1904,
												"id": 1907,
												"nodeType": "Return",
												"src": "19109:22:0"
											}
										]
									},
									"functionSelector": "9be572f6",
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalUsers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19064:2:0"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "19090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19089:9:0"
									},
									"scope": 1950,
									"src": "19042:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "19214:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "19232:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19246:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19238:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19238:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19238:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19232:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19250:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 1918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19224:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "19224:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1929,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "19296:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19305:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19296:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19308:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19288:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "19288:55:0"
											},
											{
												"assignments": [
													1936
												],
												"declarations": [
													{
														"constant": false,
														"id": 1936,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1948,
														"src": "19354:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1935,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"arguments": [
														{
															"id": 1939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "19388:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "19392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1937,
															"name": "usdtToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "19369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$29",
																"typeString": "contract IERC20"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "19369:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19369:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19354:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "19417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19426:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19409:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "19409:41:0"
											}
										]
									},
									"functionSelector": "d85c8966",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1916,
											"modifierName": {
												"id": 1915,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "19204:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19204:9:0"
										}
									],
									"name": "ownerTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "19167:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "19179:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19166:28:0"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19214:0:0"
									},
									"scope": 1950,
									"src": "19144:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1951,
							"src": "388:19175:0"
						}
					],
					"src": "32:19532:0"
				},
				"id": 0
			}
		}
	}
}